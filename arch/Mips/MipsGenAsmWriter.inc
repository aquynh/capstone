/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|*Assembly Writer Source Fragment                                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

/* Capstone Disassembly Engine, http://www.capstone-engine.org */
/* By Nguyen Anh Quynh <aquynh@gmail.com>, 2013> */

/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
static void printInstruction(MCInst *MI, SStream *O, MCRegisterInfo *MRI)
{
  static const uint32_t OpInfo[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// PROLOG_LABEL
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    7834U,	// DBG_VALUE
    0U,	// REG_SEQUENCE
    0U,	// COPY
    7827U,	// BUNDLE
    7844U,	// LIFETIME_START
    7814U,	// LIFETIME_END
    0U,	// STACKMAP
    0U,	// PATCHPOINT
    12624U,	// ABSQ_S_PH
    9520U,	// ABSQ_S_QB
    15178U,	// ABSQ_S_W
    16788486U,	// ADD
    16789645U,	// ADDQH_PH
    16789762U,	// ADDQH_R_PH
    16792069U,	// ADDQH_R_W
    16791672U,	// ADDQH_W
    16789719U,	// ADDQ_PH
    16789818U,	// ADDQ_S_PH
    16792374U,	// ADDQ_S_W
    16786896U,	// ADDSC
    16785729U,	// ADDS_A_B
    16786947U,	// ADDS_A_D
    16788590U,	// ADDS_A_H
    16791380U,	// ADDS_A_W
    16786197U,	// ADDS_S_B
    16787857U,	// ADDS_S_D
    16789147U,	// ADDS_S_H
    16792424U,	// ADDS_S_W
    16786412U,	// ADDS_U_B
    16788260U,	// ADDS_U_D
    16789425U,	// ADDS_U_H
    16792842U,	// ADDS_U_W
    16786604U,	// ADDUH_QB
    16786712U,	// ADDUH_R_QB
    16789917U,	// ADDU_PH
    16786817U,	// ADDU_QB
    16789862U,	// ADDU_S_PH
    16786758U,	// ADDU_S_QB
    285221434U,	// ADDVI_B
    285222824U,	// ADDVI_D
    285224262U,	// ADDVI_H
    285227261U,	// ADDVI_W
    16786490U,	// ADDV_B
    16788350U,	// ADDV_D
    16789503U,	// ADDV_H
    16792942U,	// ADDV_W
    16786903U,	// ADDWC
    16785711U,	// ADD_A_B
    16786928U,	// ADD_A_D
    16788572U,	// ADD_A_H
    16791361U,	// ADD_A_W
    16788486U,	// ADD_MM
    16790124U,	// ADDi
    16790124U,	// ADDi_MM
    16791158U,	// ADDiu
    16791158U,	// ADDiu_MM
    16791133U,	// ADDu
    16791133U,	// ADDu_MM
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    16788508U,	// AND
    16788508U,	// AND64
    285221293U,	// ANDI_B
    16788508U,	// AND_MM
    16791211U,	// AND_V
    0U,	// AND_V_D_PSEUDO
    0U,	// AND_V_H_PSEUDO
    0U,	// AND_V_W_PSEUDO
    553661042U,	// ANDi
    553661042U,	// ANDi64
    553661042U,	// ANDi_MM
    553659434U,	// APPEND
    16786091U,	// ASUB_S_B
    16787687U,	// ASUB_S_D
    16788979U,	// ASUB_S_H
    16792204U,	// ASUB_S_W
    16786306U,	// ASUB_U_B
    16788090U,	// ASUB_U_D
    16789267U,	// ASUB_U_H
    16792672U,	// ASUB_U_W
    0U,	// ATOMIC_CMP_SWAP_I16
    0U,	// ATOMIC_CMP_SWAP_I32
    0U,	// ATOMIC_CMP_SWAP_I64
    0U,	// ATOMIC_CMP_SWAP_I8
    0U,	// ATOMIC_LOAD_ADD_I16
    0U,	// ATOMIC_LOAD_ADD_I32
    0U,	// ATOMIC_LOAD_ADD_I64
    0U,	// ATOMIC_LOAD_ADD_I8
    0U,	// ATOMIC_LOAD_AND_I16
    0U,	// ATOMIC_LOAD_AND_I32
    0U,	// ATOMIC_LOAD_AND_I64
    0U,	// ATOMIC_LOAD_AND_I8
    0U,	// ATOMIC_LOAD_NAND_I16
    0U,	// ATOMIC_LOAD_NAND_I32
    0U,	// ATOMIC_LOAD_NAND_I64
    0U,	// ATOMIC_LOAD_NAND_I8
    0U,	// ATOMIC_LOAD_OR_I16
    0U,	// ATOMIC_LOAD_OR_I32
    0U,	// ATOMIC_LOAD_OR_I64
    0U,	// ATOMIC_LOAD_OR_I8
    0U,	// ATOMIC_LOAD_SUB_I16
    0U,	// ATOMIC_LOAD_SUB_I32
    0U,	// ATOMIC_LOAD_SUB_I64
    0U,	// ATOMIC_LOAD_SUB_I8
    0U,	// ATOMIC_LOAD_XOR_I16
    0U,	// ATOMIC_LOAD_XOR_I32
    0U,	// ATOMIC_LOAD_XOR_I64
    0U,	// ATOMIC_LOAD_XOR_I8
    0U,	// ATOMIC_SWAP_I16
    0U,	// ATOMIC_SWAP_I32
    0U,	// ATOMIC_SWAP_I64
    0U,	// ATOMIC_SWAP_I8
    16786177U,	// AVER_S_B
    16787837U,	// AVER_S_D
    16789117U,	// AVER_S_H
    16792404U,	// AVER_S_W
    16786392U,	// AVER_U_B
    16788240U,	// AVER_U_D
    16789405U,	// AVER_U_H
    16792822U,	// AVER_U_W
    16786119U,	// AVE_S_B
    16787769U,	// AVE_S_D
    16789049U,	// AVE_S_H
    16792286U,	// AVE_S_W
    16786334U,	// AVE_U_B
    16788172U,	// AVE_U_D
    16789337U,	// AVE_U_H
    16792754U,	// AVE_U_W
    13942U,	// AddiuRxImmX16
    79478U,	// AddiuRxPcImmX16
    34616950U,	// AddiuRxRxImm16
    1062518U,	// AddiuRxRxImmX16
    2111094U,	// AddiuRxRyOffMemX16
    147001U,	// AddiuSpImm16
    212537U,	// AddiuSpImmX16
    16791133U,	// AdduRxRyRz16
    1059868U,	// AndRxRxRy16
    0U,	// B
    553661343U,	// BALIGN
    0U,	// BAL_BR
    11339U,	// BC1F
    11339U,	// BC1F_MM
    13863U,	// BC1T
    13863U,	// BC1T_MM
    285221362U,	// BCLRI_B
    285222768U,	// BCLRI_D
    285224206U,	// BCLRI_H
    285227205U,	// BCLRI_W
    16786058U,	// BCLR_B
    16787611U,	// BCLR_D
    16788946U,	// BCLR_H
    16792120U,	// BCLR_W
    16790544U,	// BEQ
    16790544U,	// BEQ64
    16790544U,	// BEQ_MM
    15822U,	// BGEZ
    15822U,	// BGEZ64
    13026U,	// BGEZAL
    13026U,	// BGEZAL_MM
    15822U,	// BGEZ_MM
    15866U,	// BGTZ
    15866U,	// BGTZ64
    15866U,	// BGTZ_MM
    823140823U,	// BINSLI_B
    823142229U,	// BINSLI_D
    823143667U,	// BINSLI_H
    823146666U,	// BINSLI_W
    1091576426U,	// BINSL_B
    1091577870U,	// BINSL_D
    1091579237U,	// BINSL_H
    1091582280U,	// BINSL_W
    823140884U,	// BINSRI_B
    823142274U,	// BINSRI_D
    823143712U,	// BINSRI_H
    823146711U,	// BINSRI_W
    1091576474U,	// BINSR_B
    1091578061U,	// BINSR_D
    1091579362U,	// BINSR_H
    1091582570U,	// BINSR_W
    14067U,	// BITREV
    15828U,	// BLEZ
    15828U,	// BLEZ64
    15828U,	// BLEZ_MM
    15872U,	// BLTZ
    15872U,	// BLTZ64
    13034U,	// BLTZAL
    13034U,	// BLTZAL_MM
    15872U,	// BLTZ_MM
    823140939U,	// BMNZI_B
    1091581668U,	// BMNZ_V
    823140931U,	// BMZI_B
    1091581654U,	// BMZ_V
    16788539U,	// BNE
    16788539U,	// BNE64
    285221301U,	// BNEGI_B
    285222716U,	// BNEGI_D
    285224154U,	// BNEGI_H
    285227153U,	// BNEGI_W
    16785813U,	// BNEG_B
    16787236U,	// BNEG_D
    16788674U,	// BNEG_H
    16791592U,	// BNEG_W
    16788539U,	// BNE_MM
    9314U,	// BNZ_B
    11249U,	// BNZ_D
    12327U,	// BNZ_H
    14045U,	// BNZ_V
    15791U,	// BNZ_W
    204937U,	// BPOSGE32
    0U,	// BPOSGE32_PSEUDO
    12996U,	// BREAK
    12996U,	// BREAK_MM
    823140798U,	// BSELI_B
    0U,	// BSEL_D_PSEUDO
    0U,	// BSEL_FD_PSEUDO
    0U,	// BSEL_FW_PSEUDO
    0U,	// BSEL_H_PSEUDO
    1091581626U,	// BSEL_V
    0U,	// BSEL_W_PSEUDO
    285221416U,	// BSETI_B
    285222806U,	// BSETI_D
    285224244U,	// BSETI_H
    285227243U,	// BSETI_W
    16786274U,	// BSET_B
    16787963U,	// BSET_D
    16789235U,	// BSET_H
    16792578U,	// BSET_W
    9308U,	// BZ_B
    11243U,	// BZ_D
    12321U,	// BZ_H
    14032U,	// BZ_V
    15785U,	// BZ_W
    50347501U,	// BeqzRxImm16
    15853U,	// BeqzRxImmX16
    139573U,	// Bimm16
    205109U,	// BimmX16
    50347482U,	// BnezRxImm16
    15834U,	// BnezRxImmX16
    7806U,	// Break16
    278003U,	// Bteqz16
    67122134U,	// BteqzT8CmpX16
    67121822U,	// BteqzT8CmpiX16
    67122733U,	// BteqzT8SltX16
    67121840U,	// BteqzT8SltiX16
    67122820U,	// BteqzT8SltiuX16
    67122834U,	// BteqzT8SltuX16
    212467U,	// BteqzX16
    277984U,	// Btnez16
    83899350U,	// BtnezT8CmpX16
    83899038U,	// BtnezT8CmpiX16
    83899949U,	// BtnezT8SltX16
    83899056U,	// BtnezT8SltiX16
    83900036U,	// BtnezT8SltiuX16
    83900050U,	// BtnezT8SltuX16
    212448U,	// BtnezX16
    0U,	// BuildPairF64
    0U,	// BuildPairF64_64
    10183U,	// CEIL_L_D64
    13643U,	// CEIL_L_S
    11205U,	// CEIL_W_D32
    11205U,	// CEIL_W_D64
    11205U,	// CEIL_W_MM
    13825U,	// CEIL_W_S
    13825U,	// CEIL_W_S_MM
    16785889U,	// CEQI_B
    16787295U,	// CEQI_D
    16788733U,	// CEQI_H
    16791732U,	// CEQI_W
    16786043U,	// CEQ_B
    16787552U,	// CEQ_D
    16788924U,	// CEQ_H
    16792008U,	// CEQ_W
    8227U,	// CFC1
    8227U,	// CFC1_MM
    8479U,	// CFCMSA
    16786128U,	// CLEI_S_B
    16787778U,	// CLEI_S_D
    16789058U,	// CLEI_S_H
    16792295U,	// CLEI_S_W
    285221799U,	// CLEI_U_B
    285223637U,	// CLEI_U_D
    285224802U,	// CLEI_U_H
    285228219U,	// CLEI_U_W
    16786110U,	// CLE_S_B
    16787760U,	// CLE_S_D
    16789040U,	// CLE_S_H
    16792277U,	// CLE_S_W
    16786325U,	// CLE_U_B
    16788163U,	// CLE_U_D
    16789328U,	// CLE_U_H
    16792745U,	// CLE_U_W
    13230U,	// CLO
    13230U,	// CLO_MM
    16786148U,	// CLTI_S_B
    16787798U,	// CLTI_S_D
    16789078U,	// CLTI_S_H
    16792315U,	// CLTI_S_W
    285221819U,	// CLTI_U_B
    285223657U,	// CLTI_U_D
    285224822U,	// CLTI_U_H
    285228239U,	// CLTI_U_W
    16786216U,	// CLT_S_B
    16787876U,	// CLT_S_D
    16789166U,	// CLT_S_H
    16792443U,	// CLT_S_W
    16786443U,	// CLT_U_B
    16788291U,	// CLT_U_D
    16789456U,	// CLT_U_H
    16792873U,	// CLT_U_W
    15848U,	// CLZ
    15848U,	// CLZ_MM
    16786650U,	// CMPGDU_EQ_QB
    16786555U,	// CMPGDU_LE_QB
    16786769U,	// CMPGDU_LT_QB
    16786664U,	// CMPGU_EQ_QB
    16786569U,	// CMPGU_LE_QB
    16786783U,	// CMPGU_LT_QB
    9461U,	// CMPU_EQ_QB
    9366U,	// CMPU_LE_QB
    9580U,	// CMPU_LT_QB
    12512U,	// CMP_EQ_PH
    12408U,	// CMP_LE_PH
    12681U,	// CMP_LT_PH
    7876U,	// CONSTPOOL_ENTRY
    0U,	// COPY_FD_PSEUDO
    0U,	// COPY_FW_PSEUDO
    2516591439U,	// COPY_S_B
    2516594400U,	// COPY_S_H
    2516597699U,	// COPY_S_W
    2516591654U,	// COPY_U_B
    2516594667U,	// COPY_U_H
    2516598106U,	// COPY_U_W
    344126U,	// CTC1
    344126U,	// CTC1_MM
    8487U,	// CTCMSA
    13528U,	// CVT_D32_S
    14224U,	// CVT_D32_W
    14224U,	// CVT_D32_W_MM
    13003U,	// CVT_D64_L
    13528U,	// CVT_D64_S
    14224U,	// CVT_D64_W
    13528U,	// CVT_D_S_MM
    10204U,	// CVT_L_D64
    10204U,	// CVT_L_D64_MM
    13664U,	// CVT_L_S
    13664U,	// CVT_L_S_MM
    10462U,	// CVT_S_D32
    10462U,	// CVT_S_D32_MM
    10462U,	// CVT_S_D64
    13012U,	// CVT_S_L
    14979U,	// CVT_S_W
    14979U,	// CVT_S_W_MM
    11226U,	// CVT_W_D32
    11226U,	// CVT_W_D64
    11226U,	// CVT_W_MM
    13846U,	// CVT_W_S
    13846U,	// CVT_W_S_MM
    10327U,	// C_EQ_D32
    10327U,	// C_EQ_D64
    13705U,	// C_EQ_S
    9973U,	// C_F_D32
    9973U,	// C_F_D64
    13591U,	// C_F_S
    9860U,	// C_LE_D32
    9860U,	// C_LE_D64
    13555U,	// C_LE_S
    10764U,	// C_LT_D32
    10764U,	// C_LT_D64
    13747U,	// C_LT_S
    9851U,	// C_NGE_D32
    9851U,	// C_NGE_D64
    13546U,	// C_NGE_S
    9876U,	// C_NGLE_D32
    9876U,	// C_NGLE_D64
    13563U,	// C_NGLE_S
    10213U,	// C_NGL_D32
    10213U,	// C_NGL_D64
    13673U,	// C_NGL_S
    10755U,	// C_NGT_D32
    10755U,	// C_NGT_D64
    13738U,	// C_NGT_S
    9886U,	// C_OLE_D32
    9886U,	// C_OLE_D64
    13573U,	// C_OLE_S
    10780U,	// C_OLT_D32
    10780U,	// C_OLT_D64
    13755U,	// C_OLT_S
    10343U,	// C_SEQ_D32
    10343U,	// C_SEQ_D64
    13713U,	// C_SEQ_S
    10004U,	// C_SF_D32
    10004U,	// C_SF_D64
    13598U,	// C_SF_S
    10360U,	// C_UEQ_D32
    10360U,	// C_UEQ_D64
    13722U,	// C_UEQ_S
    9903U,	// C_ULE_D32
    9903U,	// C_ULE_D64
    13582U,	// C_ULE_S
    10797U,	// C_ULT_D32
    10797U,	// C_ULT_D64
    13764U,	// C_ULT_S
    10287U,	// C_UN_D32
    10287U,	// C_UN_D64
    13689U,	// C_UN_S
    13270U,	// CmpRxRy16
    117453470U,	// CmpiRxImm16
    12958U,	// CmpiRxImmX16
    212555U,	// Constant32
    16788485U,	// DADD
    16790123U,	// DADDi
    16791157U,	// DADDiu
    16791132U,	// DADDu
    13229U,	// DCLO
    15847U,	// DCLZ
    7880U,	// DERET
    7880U,	// DERET_MM
    553664103U,	// DEXT
    553664090U,	// DEXTM
    553664116U,	// DEXTU
    209518U,	// DI
    553664097U,	// DINS
    553664083U,	// DINSM
    553664109U,	// DINSU
    16786237U,	// DIV_S_B
    16787919U,	// DIV_S_D
    16789187U,	// DIV_S_H
    16792486U,	// DIV_S_W
    16786452U,	// DIV_U_B
    16788322U,	// DIV_U_D
    16789465U,	// DIV_U_H
    16792904U,	// DIV_U_W
    209518U,	// DI_MM
    553656329U,	// DMFC0
    8233U,	// DMFC1
    553656504U,	// DMFC2
    553656336U,	// DMTC0
    344132U,	// DMTC1
    553656511U,	// DMTC2
    13879U,	// DMULT
    13982U,	// DMULTu
    16787827U,	// DOTP_S_D
    16789107U,	// DOTP_S_H
    16792354U,	// DOTP_S_W
    16788230U,	// DOTP_U_D
    16789395U,	// DOTP_U_H
    16792812U,	// DOTP_U_W
    1091578140U,	// DPADD_S_D
    1091579420U,	// DPADD_S_H
    1091582657U,	// DPADD_S_W
    1091578543U,	// DPADD_U_D
    1091579708U,	// DPADD_U_H
    1091583125U,	// DPADD_U_W
    16789976U,	// DPAQX_SA_W_PH
    16790059U,	// DPAQX_S_W_PH
    16791814U,	// DPAQ_SA_L_W
    16790018U,	// DPAQ_S_W_PH
    16790258U,	// DPAU_H_QBL
    16790554U,	// DPAU_H_QBR
    16790097U,	// DPAX_W_PH
    16789966U,	// DPA_W_PH
    16789991U,	// DPSQX_SA_W_PH
    16790073U,	// DPSQX_S_W_PH
    16791827U,	// DPSQ_SA_L_W
    16790046U,	// DPSQ_S_W_PH
    1091578107U,	// DPSUB_S_D
    1091579399U,	// DPSUB_S_H
    1091582624U,	// DPSUB_S_W
    1091578510U,	// DPSUB_U_D
    1091579687U,	// DPSUB_U_H
    1091583092U,	// DPSUB_U_W
    16790270U,	// DPSU_H_QBL
    16790566U,	// DPSU_H_QBR
    16790108U,	// DPSX_W_PH
    16790087U,	// DPS_W_PH
    553661623U,	// DROTR
    553656483U,	// DROTR32
    16791329U,	// DROTRV
    12334U,	// DSBH
    15916U,	// DSDIV
    11281U,	// DSHD
    553661316U,	// DSLL
    553656467U,	// DSLL32
    134230916U,	// DSLL64_32
    16791291U,	// DSLLV
    553656596U,	// DSRA
    553656449U,	// DSRA32
    16791276U,	// DSRAV
    553661322U,	// DSRL
    553656475U,	// DSRL32
    16791298U,	// DSRLV
    16791118U,	// DSUBu
    15902U,	// DUDIV
    15917U,	// DivRxRy16
    15903U,	// DivuRxRy16
    209530U,	// EI
    209530U,	// EI_MM
    7881U,	// ERET
    7881U,	// ERET_MM
    553664104U,	// EXT
    553661450U,	// EXTP
    553661382U,	// EXTPDP
    16791313U,	// EXTPDPV
    16791322U,	// EXTPV
    16792547U,	// EXTRV_RS_W
    16792101U,	// EXTRV_R_W
    16789196U,	// EXTRV_S_H
    16792984U,	// EXTRV_W
    553663448U,	// EXTR_RS_W
    553662992U,	// EXTR_R_W
    553660039U,	// EXTR_S_H
    553663091U,	// EXTR_W
    553664104U,	// EXT_MM
    0U,	// ExtractElementF64
    0U,	// ExtractElementF64_64
    0U,	// FABS_D
    10721U,	// FABS_D32
    10721U,	// FABS_D64
    10721U,	// FABS_MM
    13731U,	// FABS_S
    13731U,	// FABS_S_MM
    0U,	// FABS_W
    16787016U,	// FADD_D
    16787017U,	// FADD_D32
    16787017U,	// FADD_D64
    16787017U,	// FADD_MM
    16790755U,	// FADD_S
    16790755U,	// FADD_S_MM
    16791449U,	// FADD_W
    16787196U,	// FCAF_D
    16791568U,	// FCAF_W
    16787551U,	// FCEQ_D
    16792007U,	// FCEQ_W
    10728U,	// FCLASS_D
    15343U,	// FCLASS_W
    16787084U,	// FCLE_D
    16791491U,	// FCLE_W
    16787988U,	// FCLT_D
    16792586U,	// FCLT_W
    425595U,	// FCMP_D32
    425595U,	// FCMP_D32_MM
    425595U,	// FCMP_D64
    491131U,	// FCMP_S32
    491131U,	// FCMP_S32_MM
    16787146U,	// FCNE_D
    16791525U,	// FCNE_W
    16787627U,	// FCOR_D
    16792136U,	// FCOR_W
    16787585U,	// FCUEQ_D
    16792023U,	// FCUEQ_W
    16787128U,	// FCULE_D
    16791507U,	// FCULE_W
    16788022U,	// FCULT_D
    16792602U,	// FCULT_W
    16787162U,	// FCUNE_D
    16791541U,	// FCUNE_W
    16787511U,	// FCUN_D
    16791913U,	// FCUN_W
    16788376U,	// FDIV_D
    16788377U,	// FDIV_D32
    16788377U,	// FDIV_D64
    16788377U,	// FDIV_MM
    16791005U,	// FDIV_S
    16791005U,	// FDIV_S_MM
    16792968U,	// FDIV_W
    16788854U,	// FEXDO_H
    16791929U,	// FEXDO_W
    16786919U,	// FEXP2_D
    0U,	// FEXP2_D_1_PSEUDO
    16791352U,	// FEXP2_W
    0U,	// FEXP2_W_1_PSEUDO
    10229U,	// FEXUPL_D
    14639U,	// FEXUPL_W
    10427U,	// FEXUPR_D
    14936U,	// FEXUPR_W
    10669U,	// FFINT_S_D
    15236U,	// FFINT_S_W
    11084U,	// FFINT_U_D
    15666U,	// FFINT_U_W
    10239U,	// FFQL_D
    14649U,	// FFQL_W
    10437U,	// FFQR_D
    14946U,	// FFQR_W
    8788U,	// FILL_B
    0U,	// FILL_FD_PSEUDO
    0U,	// FILL_FW_PSEUDO
    11599U,	// FILL_H
    14624U,	// FILL_W
    9694U,	// FLOG2_D
    14127U,	// FLOG2_W
    10193U,	// FLOOR_L_D64
    13653U,	// FLOOR_L_S
    11215U,	// FLOOR_W_D32
    11215U,	// FLOOR_W_D64
    11215U,	// FLOOR_W_MM
    13835U,	// FLOOR_W_S
    13835U,	// FLOOR_W_S_MM
    1091577424U,	// FMADD_D
    1091581857U,	// FMADD_W
    16786957U,	// FMAX_A_D
    16791390U,	// FMAX_A_W
    16788451U,	// FMAX_D
    16792993U,	// FMAX_W
    16786937U,	// FMIN_A_D
    16791370U,	// FMIN_A_W
    16787495U,	// FMIN_D
    16791905U,	// FMIN_W
    11176U,	// FMOV_D32
    11176U,	// FMOV_D32_MM
    11176U,	// FMOV_D64
    13796U,	// FMOV_S
    13796U,	// FMOV_S_MM
    1091577382U,	// FMSUB_D
    1091581815U,	// FMSUB_W
    16787479U,	// FMUL_D
    16787480U,	// FMUL_D32
    16787480U,	// FMUL_D64
    16787480U,	// FMUL_MM
    16790898U,	// FMUL_S
    16790898U,	// FMUL_S_MM
    16791889U,	// FMUL_W
    10021U,	// FNEG_D32
    10021U,	// FNEG_D64
    10021U,	// FNEG_MM
    13614U,	// FNEG_S
    13614U,	// FNEG_S_MM
    10319U,	// FRCP_D
    14722U,	// FRCP_W
    10832U,	// FRINT_D
    15412U,	// FRINT_W
    10850U,	// FRSQRT_D
    15440U,	// FRSQRT_W
    16787204U,	// FSAF_D
    16791576U,	// FSAF_W
    16787568U,	// FSEQ_D
    16792015U,	// FSEQ_W
    16787111U,	// FSLE_D
    16791499U,	// FSLE_W
    16788005U,	// FSLT_D
    16792594U,	// FSLT_W
    16787154U,	// FSNE_D
    16791533U,	// FSNE_W
    16787635U,	// FSOR_D
    16792144U,	// FSOR_W
    10841U,	// FSQRT_D
    10842U,	// FSQRT_D32
    10842U,	// FSQRT_D64
    10842U,	// FSQRT_MM
    13773U,	// FSQRT_S
    13773U,	// FSQRT_S_MM
    15431U,	// FSQRT_W
    16786974U,	// FSUB_D
    16786975U,	// FSUB_D32
    16786975U,	// FSUB_D64
    16786975U,	// FSUB_MM
    16790737U,	// FSUB_S
    16790737U,	// FSUB_S_MM
    16791407U,	// FSUB_W
    16787594U,	// FSUEQ_D
    16792032U,	// FSUEQ_W
    16787137U,	// FSULE_D
    16791516U,	// FSULE_W
    16788031U,	// FSULT_D
    16792611U,	// FSULT_W
    16787171U,	// FSUNE_D
    16791550U,	// FSUNE_W
    16787519U,	// FSUN_D
    16791921U,	// FSUN_W
    10680U,	// FTINT_S_D
    15247U,	// FTINT_S_W
    11095U,	// FTINT_U_D
    15677U,	// FTINT_U_W
    16788931U,	// FTQ_H
    16792041U,	// FTQ_W
    10502U,	// FTRUNC_S_D
    15019U,	// FTRUNC_S_W
    10905U,	// FTRUNC_U_D
    15487U,	// FTRUNC_U_W
    152056474U,	// GotPrologue16
    16787730U,	// HADD_S_D
    16789010U,	// HADD_S_H
    16792247U,	// HADD_S_W
    16788133U,	// HADD_U_D
    16789298U,	// HADD_U_H
    16792715U,	// HADD_U_W
    16787697U,	// HSUB_S_D
    16788989U,	// HSUB_S_H
    16792214U,	// HSUB_S_W
    16788100U,	// HSUB_U_D
    16789277U,	// HSUB_U_H
    16792682U,	// HSUB_U_W
    16786507U,	// ILVEV_B
    16788367U,	// ILVEV_D
    16789520U,	// ILVEV_H
    16792959U,	// ILVEV_W
    16786035U,	// ILVL_B
    16787487U,	// ILVL_D
    16788846U,	// ILVL_H
    16791897U,	// ILVL_W
    16785787U,	// ILVOD_B
    16787058U,	// ILVOD_D
    16788648U,	// ILVOD_H
    16791482U,	// ILVOD_W
    16786083U,	// ILVR_B
    16787670U,	// ILVR_D
    16788971U,	// ILVR_H
    16792187U,	// ILVR_W
    553664098U,	// INS
    3679090U,	// INSERT_B
    0U,	// INSERT_FD_PSEUDO
    0U,	// INSERT_FW_PSEUDO
    3682051U,	// INSERT_H
    3685437U,	// INSERT_W
    1062697U,	// INSV
    4727172U,	// INSVE_B
    4728556U,	// INSVE_D
    4730033U,	// INSVE_H
    4732935U,	// INSVE_W
    553664098U,	// INS_MM
    209601U,	// J
    209629U,	// JAL
    13479U,	// JALR
    13479U,	// JALR64
    0U,	// JALR64Pseudo
    0U,	// JALRPseudo
    13479U,	// JALR_MM
    209629U,	// JAL_MM
    210083U,	// JR
    210083U,	// JR64
    210083U,	// JR_MM
    209601U,	// J_MM
    602845U,	// Jal16
    668381U,	// JalB16
    7868U,	// JrRa16
    7859U,	// JrcRa16
    212498U,	// JrcRx16
    204801U,	// JumpLinkReg16
    5252206U,	// LB
    5252206U,	// LB64
    168836547U,	// LBUX
    5252206U,	// LB_MM
    5256777U,	// LBu
    5256777U,	// LBu64
    5256777U,	// LBu_MM
    5254168U,	// LD
    5251095U,	// LDC1
    5251095U,	// LDC164
    5251095U,	// LDC1_MM
    5251244U,	// LDC2
    8614U,	// LDI_B
    10037U,	// LDI_D
    11475U,	// LDI_H
    14474U,	// LDI_W
    5255993U,	// LDL
    5256289U,	// LDR
    168829015U,	// LDXC1
    168829015U,	// LDXC164
    5251436U,	// LD_B
    5252707U,	// LD_D
    5254297U,	// LD_H
    5257131U,	// LD_W
    2111094U,	// LEA_ADDiu
    2111093U,	// LEA_ADDiu64
    2111094U,	// LEA_ADDiu_MM
    5255231U,	// LH
    5255231U,	// LH64
    168836542U,	// LHX
    5255231U,	// LH_MM
    5256816U,	// LHu
    5256816U,	// LHu64
    5256816U,	// LHu_MM
    5256064U,	// LL
    5254167U,	// LLD
    5256064U,	// LL_MM
    5251079U,	// LOAD_ACC128
    5251079U,	// LOAD_ACC64
    5251079U,	// LOAD_ACC64DSP
    5256155U,	// LOAD_CCOND_DSP
    16785690U,	// LSA
    168829029U,	// LUXC1
    168829029U,	// LUXC164
    168829029U,	// LUXC1_MM
    6304444U,	// LUi
    6304444U,	// LUi64
    6304444U,	// LUi_MM
    5258678U,	// LW
    5258678U,	// LW64
    5251147U,	// LWC1
    5251147U,	// LWC1_MM
    5251270U,	// LWC2
    5256085U,	// LWL
    5256085U,	// LWL64
    5256085U,	// LWL_MM
    5256389U,	// LWR
    5256389U,	// LWR64
    5256389U,	// LWR_MM
    168836553U,	// LWX
    168829043U,	// LWXC1
    168829043U,	// LWXC1_MM
    5258678U,	// LW_MM
    5256870U,	// LWu
    5252206U,	// LbRxRyOffMemX16
    5256777U,	// LbuRxRyOffMemX16
    5255231U,	// LhRxRyOffMemX16
    5256816U,	// LhuRxRyOffMemX16
    117453466U,	// LiRxImm16
    12944U,	// LiRxImmAlignX16
    12954U,	// LiRxImmX16
    6299870U,	// LoadAddr32Imm
    5251294U,	// LoadAddr32Reg
    6304410U,	// LoadImm32Reg
    736694U,	// LwConstant32
    33570230U,	// LwRxPcTcp16
    15798U,	// LwRxPcTcpX16
    5258678U,	// LwRxRyOffMemX16
    185613750U,	// LwRxSpImmX16
    11275U,	// MADD
    1091579303U,	// MADDR_Q_H
    1091582386U,	// MADDR_Q_W
    13923U,	// MADDU
    16791139U,	// MADDU_DSP
    13923U,	// MADDU_MM
    1091576889U,	// MADDV_B
    1091578749U,	// MADDV_D
    1091579902U,	// MADDV_H
    1091583341U,	// MADDV_W
    16787025U,	// MADD_D32
    16787025U,	// MADD_D32_MM
    16787025U,	// MADD_D64
    16788491U,	// MADD_DSP
    11275U,	// MADD_MM
    1091579273U,	// MADD_Q_H
    1091582356U,	// MADD_Q_W
    16790754U,	// MADD_S
    16790754U,	// MADD_S_MM
    16790339U,	// MAQ_SA_W_PHL
    16790635U,	// MAQ_SA_W_PHR
    16790367U,	// MAQ_S_W_PHL
    16790663U,	// MAQ_S_W_PHR
    16786158U,	// MAXI_S_B
    16787808U,	// MAXI_S_D
    16789088U,	// MAXI_S_H
    16792325U,	// MAXI_S_W
    285221829U,	// MAXI_U_B
    285223667U,	// MAXI_U_D
    285224832U,	// MAXI_U_H
    285228249U,	// MAXI_U_W
    16785739U,	// MAX_A_B
    16786958U,	// MAX_A_D
    16788600U,	// MAX_A_H
    16791391U,	// MAX_A_W
    16786246U,	// MAX_S_B
    16787928U,	// MAX_S_D
    16789207U,	// MAX_S_H
    16792506U,	// MAX_S_W
    16786461U,	// MAX_U_B
    16788331U,	// MAX_U_D
    16789474U,	// MAX_U_H
    16792913U,	// MAX_U_W
    553656330U,	// MFC0
    8234U,	// MFC1
    8234U,	// MFC1_MM
    553656505U,	// MFC2
    8240U,	// MFHC1
    8240U,	// MFHC1_MM
    209540U,	// MFHI
    209540U,	// MFHI64
    12932U,	// MFHI_DSP
    209540U,	// MFHI_MM
    209843U,	// MFLO
    209843U,	// MFLO64
    13235U,	// MFLO_DSP
    209843U,	// MFLO_MM
    16786138U,	// MINI_S_B
    16787788U,	// MINI_S_D
    16789068U,	// MINI_S_H
    16792305U,	// MINI_S_W
    285221809U,	// MINI_U_B
    285223647U,	// MINI_U_D
    285224812U,	// MINI_U_H
    285228229U,	// MINI_U_W
    16785720U,	// MIN_A_B
    16786938U,	// MIN_A_D
    16788581U,	// MIN_A_H
    16791371U,	// MIN_A_W
    16786168U,	// MIN_S_B
    16787818U,	// MIN_S_D
    16789098U,	// MIN_S_H
    16792345U,	// MIN_S_W
    16786383U,	// MIN_U_B
    16788221U,	// MIN_U_D
    16789386U,	// MIN_U_H
    16792803U,	// MIN_U_W
    0U,	// MIPSeh_return32
    0U,	// MIPSeh_return64
    16786882U,	// MODSUB
    16786101U,	// MOD_S_B
    16787751U,	// MOD_S_D
    16789031U,	// MOD_S_H
    16792268U,	// MOD_S_W
    16786316U,	// MOD_U_B
    16788154U,	// MOD_U_D
    16789319U,	// MOD_U_H
    16792736U,	// MOD_U_W
    14002U,	// MOVE_V
    16787228U,	// MOVF_D32
    16787228U,	// MOVF_D32_MM
    16787228U,	// MOVF_D64
    16788561U,	// MOVF_I
    16788561U,	// MOVF_I64
    16788561U,	// MOVF_I_MM
    16790822U,	// MOVF_S
    16790822U,	// MOVF_S_MM
    16787527U,	// MOVN_I64_D64
    16790439U,	// MOVN_I64_I
    16790439U,	// MOVN_I64_I64
    16790913U,	// MOVN_I64_S
    16787527U,	// MOVN_I_D32
    16787527U,	// MOVN_I_D32_MM
    16787527U,	// MOVN_I_D64
    16790439U,	// MOVN_I_I
    16790439U,	// MOVN_I_I64
    16790439U,	// MOVN_I_MM
    16790913U,	// MOVN_I_S
    16790913U,	// MOVN_I_S_MM
    16788082U,	// MOVT_D32
    16788082U,	// MOVT_D32_MM
    16788082U,	// MOVT_D64
    16791107U,	// MOVT_I
    16791107U,	// MOVT_I64
    16791107U,	// MOVT_I_MM
    16790997U,	// MOVT_S
    16790997U,	// MOVT_S_MM
    16788472U,	// MOVZ_I64_D64
    16793094U,	// MOVZ_I64_I
    16793094U,	// MOVZ_I64_I64
    16791071U,	// MOVZ_I64_S
    16788472U,	// MOVZ_I_D32
    16788472U,	// MOVZ_I_D32_MM
    16788472U,	// MOVZ_I_D64
    16793094U,	// MOVZ_I_I
    16793094U,	// MOVZ_I_I64
    16793094U,	// MOVZ_I_MM
    16791071U,	// MOVZ_I_S
    16791071U,	// MOVZ_I_S_MM
    9674U,	// MSUB
    1091579292U,	// MSUBR_Q_H
    1091582375U,	// MSUBR_Q_W
    13909U,	// MSUBU
    16791125U,	// MSUBU_DSP
    13909U,	// MSUBU_MM
    1091576880U,	// MSUBV_B
    1091578740U,	// MSUBV_D
    1091579893U,	// MSUBV_H
    1091583332U,	// MSUBV_W
    16786983U,	// MSUB_D32
    16786983U,	// MSUB_D32_MM
    16786983U,	// MSUB_D64
    16786890U,	// MSUB_DSP
    9674U,	// MSUB_MM
    1091579263U,	// MSUB_Q_H
    1091582346U,	// MSUB_Q_W
    16790736U,	// MSUB_S
    16790736U,	// MSUB_S_MM
    553656337U,	// MTC0
    344133U,	// MTC1
    344133U,	// MTC1_MM
    553656512U,	// MTC2
    344119U,	// MTHC1
    344119U,	// MTHC1_MM
    209546U,	// MTHI
    209546U,	// MTHI64
    348810U,	// MTHI_DSP
    209546U,	// MTHI_MM
    349134U,	// MTHLIP
    209856U,	// MTLO
    209856U,	// MTLO64
    349120U,	// MTLO_DSP
    209856U,	// MTLO_MM
    16790416U,	// MUL
    16790380U,	// MULEQ_S_W_PHL
    16790676U,	// MULEQ_S_W_PHR
    16790282U,	// MULEU_S_PH_QBL
    16790578U,	// MULEU_S_PH_QBR
    16789885U,	// MULQ_RS_PH
    16792525U,	// MULQ_RS_W
    16789829U,	// MULQ_S_PH
    16792384U,	// MULQ_S_W
    16788914U,	// MULR_Q_H
    16791997U,	// MULR_Q_W
    16790031U,	// MULSAQ_S_W_PH
    16790006U,	// MULSA_W_PH
    13880U,	// MULT
    16791199U,	// MULTU_DSP
    16791096U,	// MULT_DSP
    13880U,	// MULT_MM
    13983U,	// MULTu
    13983U,	// MULTu_MM
    16786516U,	// MULV_B
    16788384U,	// MULV_D
    16789529U,	// MULV_H
    16792976U,	// MULV_W
    16790416U,	// MUL_MM
    16789702U,	// MUL_PH
    16788883U,	// MUL_Q_H
    16791966U,	// MUL_Q_W
    16789797U,	// MUL_S_PH
    209540U,	// Mfhi16
    209843U,	// Mflo16
    11333U,	// Move32R16
    11333U,	// MoveR3216
    13880U,	// MultRxRy16
    8148536U,	// MultRxRyRz16
    13983U,	// MultuRxRy16
    8148639U,	// MultuRxRyRz16
    8539U,	// NLOC_B
    9784U,	// NLOC_D
    11400U,	// NLOC_H
    14208U,	// NLOC_W
    8547U,	// NLZC_B
    9792U,	// NLZC_D
    11408U,	// NLZC_H
    14216U,	// NLZC_W
    16787033U,	// NMADD_D32
    16787033U,	// NMADD_D32_MM
    16787033U,	// NMADD_D64
    16790753U,	// NMADD_S
    16790753U,	// NMADD_S_MM
    16786991U,	// NMSUB_D32
    16786991U,	// NMSUB_D32_MM
    16786991U,	// NMSUB_D64
    16790735U,	// NMSUB_S
    16790735U,	// NMSUB_S_MM
    0U,	// NOP
    16790701U,	// NOR
    16790701U,	// NOR64
    285221380U,	// NORI_B
    16790701U,	// NOR_MM
    16791234U,	// NOR_V
    0U,	// NOR_V_D_PSEUDO
    0U,	// NOR_V_H_PSEUDO
    0U,	// NOR_V_W_PSEUDO
    11351U,	// NegRxRy16
    13886U,	// NotRxRy16
    16790702U,	// OR
    16790702U,	// OR64
    285221381U,	// ORI_B
    16790702U,	// OR_MM
    16791235U,	// OR_V
    0U,	// OR_V_D_PSEUDO
    0U,	// OR_V_H_PSEUDO
    0U,	// OR_V_W_PSEUDO
    553661099U,	// ORi
    553661099U,	// ORi64
    553661099U,	// ORi_MM
    1062062U,	// OrRxRxRy16
    16789691U,	// PACKRL_PH
    16786498U,	// PCKEV_B
    16788358U,	// PCKEV_D
    16789511U,	// PCKEV_H
    16792950U,	// PCKEV_W
    16785778U,	// PCKOD_B
    16787049U,	// PCKOD_D
    16788639U,	// PCKOD_H
    16791473U,	// PCKOD_W
    9066U,	// PCNT_B
    10824U,	// PCNT_D
    12027U,	// PCNT_H
    15404U,	// PCNT_W
    16789655U,	// PICK_PH
    16786614U,	// PICK_QB
    13097U,	// PRECEQU_PH_QBL
    8418U,	// PRECEQU_PH_QBLA
    13393U,	// PRECEQU_PH_QBR
    8451U,	// PRECEQU_PH_QBRA
    13137U,	// PRECEQ_W_PHL
    13433U,	// PRECEQ_W_PHR
    13082U,	// PRECEU_PH_QBL
    8402U,	// PRECEU_PH_QBLA
    13378U,	// PRECEU_PH_QBR
    8435U,	// PRECEU_PH_QBRA
    16789607U,	// PRECRQU_S_QB_PH
    16791616U,	// PRECRQ_PH_W
    16789580U,	// PRECRQ_QB_PH
    16791647U,	// PRECRQ_RS_PH_W
    16789594U,	// PRECR_QB_PH
    553662512U,	// PRECR_SRA_PH_W
    553662541U,	// PRECR_SRA_R_PH_W
    553659425U,	// PREPEND
    0U,	// PseudoCMPU_EQ_QB
    0U,	// PseudoCMPU_LE_QB
    0U,	// PseudoCMPU_LT_QB
    0U,	// PseudoCMP_EQ_PH
    0U,	// PseudoCMP_LE_PH
    0U,	// PseudoCMP_LT_PH
    8199U,	// PseudoCVT_D32_W
    8199U,	// PseudoCVT_D64_L
    8199U,	// PseudoCVT_D64_W
    8199U,	// PseudoCVT_S_L
    8199U,	// PseudoCVT_S_W
    0U,	// PseudoDMULT
    0U,	// PseudoDMULTu
    0U,	// PseudoDSDIV
    0U,	// PseudoDUDIV
    0U,	// PseudoMADD
    0U,	// PseudoMADDU
    0U,	// PseudoMFHI
    0U,	// PseudoMFHI64
    0U,	// PseudoMFLO
    0U,	// PseudoMFLO64
    0U,	// PseudoMSUB
    0U,	// PseudoMSUBU
    0U,	// PseudoMTLOHI
    0U,	// PseudoMTLOHI64
    0U,	// PseudoMTLOHI_DSP
    0U,	// PseudoMULT
    0U,	// PseudoMULTu
    0U,	// PseudoPICK_PH
    0U,	// PseudoPICK_QB
    0U,	// PseudoSDIV
    0U,	// PseudoUDIV
    9650U,	// RADDU_W_QB
    6304764U,	// RDDSP
    13502U,	// RDHWR
    13502U,	// RDHWR64
    12730U,	// REPLV_PH
    9630U,	// REPLV_QB
    6303913U,	// REPL_PH
    6300872U,	// REPL_QB
    210083U,	// RET
    210083U,	// RET_MM
    553661624U,	// ROTR
    16791330U,	// ROTRV
    16791330U,	// ROTRV_MM
    553661624U,	// ROTR_MM
    10172U,	// ROUND_L_D64
    13632U,	// ROUND_L_S
    11194U,	// ROUND_W_D32
    11194U,	// ROUND_W_D64
    11194U,	// ROUND_W_MM
    13814U,	// ROUND_W_S
    13814U,	// ROUND_W_S_MM
    0U,	// Restore16
    0U,	// RestoreX16
    0U,	// RetRA
    0U,	// RetRA16
    285221663U,	// SAT_S_B
    553658779U,	// SAT_S_D
    285224613U,	// SAT_S_H
    553663346U,	// SAT_S_W
    285221890U,	// SAT_U_B
    553659194U,	// SAT_U_D
    285224903U,	// SAT_U_H
    553663776U,	// SAT_U_W
    5252542U,	// SB
    5252542U,	// SB64
    5252542U,	// SB_MM
    869843U,	// SC
    871424U,	// SCD
    869843U,	// SC_MM
    5254194U,	// SD
    5251101U,	// SDC1
    5251101U,	// SDC164
    5251101U,	// SDC1_MM
    5251250U,	// SDC2
    15917U,	// SDIV
    15917U,	// SDIV_MM
    5255998U,	// SDL
    5256294U,	// SDR
    168829022U,	// SDXC1
    168829022U,	// SDXC164
    9321U,	// SEB
    9321U,	// SEB64
    9321U,	// SEB_MM
    12346U,	// SEH
    12346U,	// SEH64
    12346U,	// SEH_MM
    5255783U,	// SH
    5255783U,	// SH64
    285221262U,	// SHF_B
    285224123U,	// SHF_H
    285227041U,	// SHF_W
    13241U,	// SHILO
    14089U,	// SHILOV
    16789936U,	// SHLLV_PH
    16786836U,	// SHLLV_QB
    16789873U,	// SHLLV_S_PH
    16792495U,	// SHLLV_S_W
    553660576U,	// SHLL_PH
    553657535U,	// SHLL_QB
    553660698U,	// SHLL_S_PH
    553663247U,	// SHLL_S_W
    16789926U,	// SHRAV_PH
    16786826U,	// SHRAV_QB
    16789774U,	// SHRAV_R_PH
    16786724U,	// SHRAV_R_QB
    16792090U,	// SHRAV_R_W
    553660483U,	// SHRA_PH
    553657458U,	// SHRA_QB
    553660651U,	// SHRA_R_PH
    553657601U,	// SHRA_R_QB
    553662960U,	// SHRA_R_W
    16789956U,	// SHRLV_PH
    16786856U,	// SHRLV_QB
    553660594U,	// SHRL_PH
    553657553U,	// SHRL_QB
    5255783U,	// SH_MM
    3054510501U,	// SLDI_B
    3054511924U,	// SLDI_D
    3054513362U,	// SLDI_H
    3054516361U,	// SLDI_W
    3322945899U,	// SLD_B
    3322947170U,	// SLD_D
    3322948760U,	// SLD_H
    3322951594U,	// SLD_W
    553661317U,	// SLL
    201339781U,	// SLL64_32
    201339781U,	// SLL64_64
    285221319U,	// SLLI_B
    285222725U,	// SLLI_D
    285224163U,	// SLLI_H
    285227162U,	// SLLI_W
    16791292U,	// SLLV
    16791292U,	// SLLV_MM
    16786012U,	// SLL_B
    16787438U,	// SLL_D
    16788823U,	// SLL_H
    553661317U,	// SLL_MM
    16791848U,	// SLL_W
    16791085U,	// SLT
    16791085U,	// SLT64
    16791085U,	// SLT_MM
    16790192U,	// SLTi
    16790192U,	// SLTi64
    16790192U,	// SLTi_MM
    16791172U,	// SLTiu
    16791172U,	// SLTiu64
    16791172U,	// SLTiu_MM
    16791186U,	// SLTu
    16791186U,	// SLTu64
    16791186U,	// SLTu_MM
    0U,	// SNZ_B_PSEUDO
    0U,	// SNZ_D_PSEUDO
    0U,	// SNZ_H_PSEUDO
    0U,	// SNZ_V_PSEUDO
    0U,	// SNZ_W_PSEUDO
    2516591134U,	// SPLATI_B
    2516592524U,	// SPLATI_D
    2516593962U,	// SPLATI_H
    2516596961U,	// SPLATI_W
    2248155993U,	// SPLAT_B
    2248157682U,	// SPLAT_D
    2248158954U,	// SPLAT_H
    2248162297U,	// SPLAT_W
    553656597U,	// SRA
    285221277U,	// SRAI_B
    285222700U,	// SRAI_D
    285224138U,	// SRAI_H
    285227137U,	// SRAI_W
    285221353U,	// SRARI_B
    553658215U,	// SRARI_D
    285224197U,	// SRARI_H
    553662652U,	// SRARI_W
    16786050U,	// SRAR_B
    16787603U,	// SRAR_D
    16788938U,	// SRAR_H
    16792112U,	// SRAR_W
    16791277U,	// SRAV
    16791277U,	// SRAV_MM
    16785748U,	// SRA_B
    16786967U,	// SRA_D
    16788609U,	// SRA_H
    553656597U,	// SRA_MM
    16791400U,	// SRA_W
    553661323U,	// SRL
    285221327U,	// SRLI_B
    285222733U,	// SRLI_D
    285224171U,	// SRLI_H
    285227170U,	// SRLI_W
    285221371U,	// SRLRI_B
    553658233U,	// SRLRI_D
    285224215U,	// SRLRI_H
    553662670U,	// SRLRI_W
    16786066U,	// SRLR_B
    16787619U,	// SRLR_D
    16788954U,	// SRLR_H
    16792128U,	// SRLR_W
    16791299U,	// SRLV
    16791299U,	// SRLV_MM
    16786019U,	// SRL_B
    16787463U,	// SRL_D
    16788830U,	// SRL_H
    553661323U,	// SRL_MM
    16791873U,	// SRL_W
    5251079U,	// STORE_ACC128
    5251079U,	// STORE_ACC64
    5251079U,	// STORE_ACC64DSP
    5256171U,	// STORE_CCOND_DSP
    5251964U,	// ST_B
    5253740U,	// ST_D
    5254925U,	// ST_H
    5258330U,	// ST_W
    16786885U,	// SUB
    16789635U,	// SUBQH_PH
    16789750U,	// SUBQH_R_PH
    16792058U,	// SUBQH_R_W
    16791663U,	// SUBQH_W
    16789710U,	// SUBQ_PH
    16789807U,	// SUBQ_S_PH
    16792364U,	// SUBQ_S_W
    16786422U,	// SUBSUS_U_B
    16788270U,	// SUBSUS_U_D
    16789435U,	// SUBSUS_U_H
    16792852U,	// SUBSUS_U_W
    16786225U,	// SUBSUU_S_B
    16787907U,	// SUBSUU_S_D
    16789175U,	// SUBSUU_S_H
    16792474U,	// SUBSUU_S_W
    16786187U,	// SUBS_S_B
    16787847U,	// SUBS_S_D
    16789137U,	// SUBS_S_H
    16792414U,	// SUBS_S_W
    16786402U,	// SUBS_U_B
    16788250U,	// SUBS_U_D
    16789415U,	// SUBS_U_H
    16792832U,	// SUBS_U_W
    16786594U,	// SUBUH_QB
    16786700U,	// SUBUH_R_QB
    16789908U,	// SUBU_PH
    16786808U,	// SUBU_QB
    16789851U,	// SUBU_S_PH
    16786747U,	// SUBU_S_QB
    285221425U,	// SUBVI_B
    285222815U,	// SUBVI_D
    285224253U,	// SUBVI_H
    285227252U,	// SUBVI_W
    16786481U,	// SUBV_B
    16788341U,	// SUBV_D
    16789494U,	// SUBV_H
    16792933U,	// SUBV_W
    16786885U,	// SUB_MM
    16791119U,	// SUBu
    16791119U,	// SUBu_MM
    168829036U,	// SUXC1
    168829036U,	// SUXC164
    168829036U,	// SUXC1_MM
    5258682U,	// SW
    5258682U,	// SW64
    5251153U,	// SWC1
    5251153U,	// SWC1_MM
    5251276U,	// SWC2
    5256090U,	// SWL
    5256090U,	// SWL64
    5256090U,	// SWL_MM
    5256394U,	// SWR
    5256394U,	// SWR64
    5256394U,	// SWR_MM
    168829050U,	// SWXC1
    168829050U,	// SWXC1_MM
    5258682U,	// SW_MM
    212549U,	// SYNC
    212549U,	// SYNC_MM
    209787U,	// SYSCALL
    209787U,	// SYSCALL_MM
    0U,	// SZ_B_PSEUDO
    0U,	// SZ_D_PSEUDO
    0U,	// SZ_H_PSEUDO
    0U,	// SZ_V_PSEUDO
    0U,	// SZ_W_PSEUDO
    0U,	// Save16
    0U,	// SaveX16
    5252542U,	// SbRxRyOffMemX16
    212492U,	// SebRx16
    212504U,	// SehRx16
    957933U,	// SelBeqZ
    957914U,	// SelBneZ
    226530262U,	// SelTBteqZCmp
    226529950U,	// SelTBteqZCmpi
    226530861U,	// SelTBteqZSlt
    226529968U,	// SelTBteqZSlti
    226530948U,	// SelTBteqZSltiu
    226530962U,	// SelTBteqZSltu
    243307478U,	// SelTBtneZCmp
    243307166U,	// SelTBtneZCmpi
    243308077U,	// SelTBtneZSlt
    243307184U,	// SelTBtneZSlti
    243308164U,	// SelTBtneZSltiu
    243308178U,	// SelTBtneZSltu
    5255783U,	// ShRxRyOffMemX16
    553661317U,	// SllX16
    1062652U,	// SllvRxRy16
    10245677U,	// SltCCRxRy16
    13869U,	// SltRxRy16
    10244784U,	// SltiCCRxImmX16
    117453488U,	// SltiRxImm16
    12976U,	// SltiRxImmX16
    10245764U,	// SltiuCCRxImmX16
    117454468U,	// SltiuRxImm16
    13956U,	// SltiuRxImmX16
    10245778U,	// SltuCCRxRy16
    13970U,	// SltuRxRy16
    10245778U,	// SltuRxRyRz16
    553656597U,	// SraX16
    1062637U,	// SravRxRy16
    553661323U,	// SrlX16
    1062659U,	// SrlvRxRy16
    16791119U,	// SubuRxRyRz16
    5258682U,	// SwRxRyOffMemX16
    185613754U,	// SwRxSpImmX16
    0U,	// TAILCALL
    0U,	// TAILCALL64_R
    0U,	// TAILCALL_R
    553661461U,	// TEQ
    6304420U,	// TEQI
    6304420U,	// TEQI_MM
    553661461U,	// TEQ_MM
    553659446U,	// TGE
    6304376U,	// TGEI
    6305405U,	// TGEIU
    6305405U,	// TGEIU_MM
    6304376U,	// TGEI_MM
    553662058U,	// TGEU
    553662058U,	// TGEU_MM
    553659446U,	// TGE_MM
    553662002U,	// TLT
    6304438U,	// TLTI
    6305419U,	// TLTIU_MM
    6304438U,	// TLTI_MM
    553662104U,	// TLTU
    553662104U,	// TLTU_MM
    553662002U,	// TLT_MM
    553659456U,	// TNE
    6304382U,	// TNEI
    6304382U,	// TNEI_MM
    553659456U,	// TNE_MM
    0U,	// TRAP
    10161U,	// TRUNC_L_D64
    13621U,	// TRUNC_L_S
    11183U,	// TRUNC_W_D32
    11183U,	// TRUNC_W_D64
    11183U,	// TRUNC_W_MM
    13803U,	// TRUNC_W_S
    13803U,	// TRUNC_W_S_MM
    6305419U,	// TTLTIU
    15903U,	// UDIV
    15903U,	// UDIV_MM
    1091576205U,	// VSHF_B
    1091577612U,	// VSHF_D
    1091579066U,	// VSHF_H
    1091581984U,	// VSHF_W
    7886U,	// WAIT
    7886U,	// WAIT_MM
    6304771U,	// WRDSP
    12340U,	// WSBH
    12340U,	// WSBH_MM
    16790706U,	// XOR
    16790706U,	// XOR64
    285221388U,	// XORI_B
    16790706U,	// XOR_MM
    16791241U,	// XOR_V
    0U,	// XOR_V_D_PSEUDO
    0U,	// XOR_V_H_PSEUDO
    0U,	// XOR_V_W_PSEUDO
    553661098U,	// XORi
    553661098U,	// XORi64
    553661098U,	// XORi_MM
    1062066U,	// XorRxRxRy16
    0U
  };

  static const uint8_t OpInfo2[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// PROLOG_LABEL
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// STACKMAP
    0U,	// PATCHPOINT
    0U,	// ABSQ_S_PH
    0U,	// ABSQ_S_QB
    0U,	// ABSQ_S_W
    0U,	// ADD
    0U,	// ADDQH_PH
    0U,	// ADDQH_R_PH
    0U,	// ADDQH_R_W
    0U,	// ADDQH_W
    0U,	// ADDQ_PH
    0U,	// ADDQ_S_PH
    0U,	// ADDQ_S_W
    0U,	// ADDSC
    0U,	// ADDS_A_B
    0U,	// ADDS_A_D
    0U,	// ADDS_A_H
    0U,	// ADDS_A_W
    0U,	// ADDS_S_B
    0U,	// ADDS_S_D
    0U,	// ADDS_S_H
    0U,	// ADDS_S_W
    0U,	// ADDS_U_B
    0U,	// ADDS_U_D
    0U,	// ADDS_U_H
    0U,	// ADDS_U_W
    0U,	// ADDUH_QB
    0U,	// ADDUH_R_QB
    0U,	// ADDU_PH
    0U,	// ADDU_QB
    0U,	// ADDU_S_PH
    0U,	// ADDU_S_QB
    0U,	// ADDVI_B
    0U,	// ADDVI_D
    0U,	// ADDVI_H
    0U,	// ADDVI_W
    0U,	// ADDV_B
    0U,	// ADDV_D
    0U,	// ADDV_H
    0U,	// ADDV_W
    0U,	// ADDWC
    0U,	// ADD_A_B
    0U,	// ADD_A_D
    0U,	// ADD_A_H
    0U,	// ADD_A_W
    0U,	// ADD_MM
    0U,	// ADDi
    0U,	// ADDi_MM
    0U,	// ADDiu
    0U,	// ADDiu_MM
    0U,	// ADDu
    0U,	// ADDu_MM
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    0U,	// AND
    0U,	// AND64
    0U,	// ANDI_B
    0U,	// AND_MM
    0U,	// AND_V
    0U,	// AND_V_D_PSEUDO
    0U,	// AND_V_H_PSEUDO
    0U,	// AND_V_W_PSEUDO
    0U,	// ANDi
    0U,	// ANDi64
    0U,	// ANDi_MM
    0U,	// APPEND
    0U,	// ASUB_S_B
    0U,	// ASUB_S_D
    0U,	// ASUB_S_H
    0U,	// ASUB_S_W
    0U,	// ASUB_U_B
    0U,	// ASUB_U_D
    0U,	// ASUB_U_H
    0U,	// ASUB_U_W
    0U,	// ATOMIC_CMP_SWAP_I16
    0U,	// ATOMIC_CMP_SWAP_I32
    0U,	// ATOMIC_CMP_SWAP_I64
    0U,	// ATOMIC_CMP_SWAP_I8
    0U,	// ATOMIC_LOAD_ADD_I16
    0U,	// ATOMIC_LOAD_ADD_I32
    0U,	// ATOMIC_LOAD_ADD_I64
    0U,	// ATOMIC_LOAD_ADD_I8
    0U,	// ATOMIC_LOAD_AND_I16
    0U,	// ATOMIC_LOAD_AND_I32
    0U,	// ATOMIC_LOAD_AND_I64
    0U,	// ATOMIC_LOAD_AND_I8
    0U,	// ATOMIC_LOAD_NAND_I16
    0U,	// ATOMIC_LOAD_NAND_I32
    0U,	// ATOMIC_LOAD_NAND_I64
    0U,	// ATOMIC_LOAD_NAND_I8
    0U,	// ATOMIC_LOAD_OR_I16
    0U,	// ATOMIC_LOAD_OR_I32
    0U,	// ATOMIC_LOAD_OR_I64
    0U,	// ATOMIC_LOAD_OR_I8
    0U,	// ATOMIC_LOAD_SUB_I16
    0U,	// ATOMIC_LOAD_SUB_I32
    0U,	// ATOMIC_LOAD_SUB_I64
    0U,	// ATOMIC_LOAD_SUB_I8
    0U,	// ATOMIC_LOAD_XOR_I16
    0U,	// ATOMIC_LOAD_XOR_I32
    0U,	// ATOMIC_LOAD_XOR_I64
    0U,	// ATOMIC_LOAD_XOR_I8
    0U,	// ATOMIC_SWAP_I16
    0U,	// ATOMIC_SWAP_I32
    0U,	// ATOMIC_SWAP_I64
    0U,	// ATOMIC_SWAP_I8
    0U,	// AVER_S_B
    0U,	// AVER_S_D
    0U,	// AVER_S_H
    0U,	// AVER_S_W
    0U,	// AVER_U_B
    0U,	// AVER_U_D
    0U,	// AVER_U_H
    0U,	// AVER_U_W
    0U,	// AVE_S_B
    0U,	// AVE_S_D
    0U,	// AVE_S_H
    0U,	// AVE_S_W
    0U,	// AVE_U_B
    0U,	// AVE_U_D
    0U,	// AVE_U_H
    0U,	// AVE_U_W
    0U,	// AddiuRxImmX16
    0U,	// AddiuRxPcImmX16
    0U,	// AddiuRxRxImm16
    0U,	// AddiuRxRxImmX16
    0U,	// AddiuRxRyOffMemX16
    0U,	// AddiuSpImm16
    0U,	// AddiuSpImmX16
    0U,	// AdduRxRyRz16
    0U,	// AndRxRxRy16
    0U,	// B
    0U,	// BALIGN
    0U,	// BAL_BR
    0U,	// BC1F
    0U,	// BC1F_MM
    0U,	// BC1T
    0U,	// BC1T_MM
    0U,	// BCLRI_B
    0U,	// BCLRI_D
    0U,	// BCLRI_H
    0U,	// BCLRI_W
    0U,	// BCLR_B
    0U,	// BCLR_D
    0U,	// BCLR_H
    0U,	// BCLR_W
    0U,	// BEQ
    0U,	// BEQ64
    0U,	// BEQ_MM
    0U,	// BGEZ
    0U,	// BGEZ64
    0U,	// BGEZAL
    0U,	// BGEZAL_MM
    0U,	// BGEZ_MM
    0U,	// BGTZ
    0U,	// BGTZ64
    0U,	// BGTZ_MM
    0U,	// BINSLI_B
    0U,	// BINSLI_D
    0U,	// BINSLI_H
    0U,	// BINSLI_W
    0U,	// BINSL_B
    0U,	// BINSL_D
    0U,	// BINSL_H
    0U,	// BINSL_W
    0U,	// BINSRI_B
    0U,	// BINSRI_D
    0U,	// BINSRI_H
    0U,	// BINSRI_W
    0U,	// BINSR_B
    0U,	// BINSR_D
    0U,	// BINSR_H
    0U,	// BINSR_W
    0U,	// BITREV
    0U,	// BLEZ
    0U,	// BLEZ64
    0U,	// BLEZ_MM
    0U,	// BLTZ
    0U,	// BLTZ64
    0U,	// BLTZAL
    0U,	// BLTZAL_MM
    0U,	// BLTZ_MM
    0U,	// BMNZI_B
    0U,	// BMNZ_V
    0U,	// BMZI_B
    0U,	// BMZ_V
    0U,	// BNE
    0U,	// BNE64
    0U,	// BNEGI_B
    0U,	// BNEGI_D
    0U,	// BNEGI_H
    0U,	// BNEGI_W
    0U,	// BNEG_B
    0U,	// BNEG_D
    0U,	// BNEG_H
    0U,	// BNEG_W
    0U,	// BNE_MM
    0U,	// BNZ_B
    0U,	// BNZ_D
    0U,	// BNZ_H
    0U,	// BNZ_V
    0U,	// BNZ_W
    0U,	// BPOSGE32
    0U,	// BPOSGE32_PSEUDO
    0U,	// BREAK
    0U,	// BREAK_MM
    0U,	// BSELI_B
    0U,	// BSEL_D_PSEUDO
    0U,	// BSEL_FD_PSEUDO
    0U,	// BSEL_FW_PSEUDO
    0U,	// BSEL_H_PSEUDO
    0U,	// BSEL_V
    0U,	// BSEL_W_PSEUDO
    0U,	// BSETI_B
    0U,	// BSETI_D
    0U,	// BSETI_H
    0U,	// BSETI_W
    0U,	// BSET_B
    0U,	// BSET_D
    0U,	// BSET_H
    0U,	// BSET_W
    0U,	// BZ_B
    0U,	// BZ_D
    0U,	// BZ_H
    0U,	// BZ_V
    0U,	// BZ_W
    0U,	// BeqzRxImm16
    0U,	// BeqzRxImmX16
    0U,	// Bimm16
    0U,	// BimmX16
    0U,	// BnezRxImm16
    0U,	// BnezRxImmX16
    0U,	// Break16
    0U,	// Bteqz16
    0U,	// BteqzT8CmpX16
    0U,	// BteqzT8CmpiX16
    0U,	// BteqzT8SltX16
    0U,	// BteqzT8SltiX16
    0U,	// BteqzT8SltiuX16
    0U,	// BteqzT8SltuX16
    0U,	// BteqzX16
    0U,	// Btnez16
    0U,	// BtnezT8CmpX16
    0U,	// BtnezT8CmpiX16
    0U,	// BtnezT8SltX16
    0U,	// BtnezT8SltiX16
    0U,	// BtnezT8SltiuX16
    0U,	// BtnezT8SltuX16
    0U,	// BtnezX16
    0U,	// BuildPairF64
    0U,	// BuildPairF64_64
    0U,	// CEIL_L_D64
    0U,	// CEIL_L_S
    0U,	// CEIL_W_D32
    0U,	// CEIL_W_D64
    0U,	// CEIL_W_MM
    0U,	// CEIL_W_S
    0U,	// CEIL_W_S_MM
    0U,	// CEQI_B
    0U,	// CEQI_D
    0U,	// CEQI_H
    0U,	// CEQI_W
    0U,	// CEQ_B
    0U,	// CEQ_D
    0U,	// CEQ_H
    0U,	// CEQ_W
    0U,	// CFC1
    0U,	// CFC1_MM
    0U,	// CFCMSA
    0U,	// CLEI_S_B
    0U,	// CLEI_S_D
    0U,	// CLEI_S_H
    0U,	// CLEI_S_W
    0U,	// CLEI_U_B
    0U,	// CLEI_U_D
    0U,	// CLEI_U_H
    0U,	// CLEI_U_W
    0U,	// CLE_S_B
    0U,	// CLE_S_D
    0U,	// CLE_S_H
    0U,	// CLE_S_W
    0U,	// CLE_U_B
    0U,	// CLE_U_D
    0U,	// CLE_U_H
    0U,	// CLE_U_W
    0U,	// CLO
    0U,	// CLO_MM
    0U,	// CLTI_S_B
    0U,	// CLTI_S_D
    0U,	// CLTI_S_H
    0U,	// CLTI_S_W
    0U,	// CLTI_U_B
    0U,	// CLTI_U_D
    0U,	// CLTI_U_H
    0U,	// CLTI_U_W
    0U,	// CLT_S_B
    0U,	// CLT_S_D
    0U,	// CLT_S_H
    0U,	// CLT_S_W
    0U,	// CLT_U_B
    0U,	// CLT_U_D
    0U,	// CLT_U_H
    0U,	// CLT_U_W
    0U,	// CLZ
    0U,	// CLZ_MM
    0U,	// CMPGDU_EQ_QB
    0U,	// CMPGDU_LE_QB
    0U,	// CMPGDU_LT_QB
    0U,	// CMPGU_EQ_QB
    0U,	// CMPGU_LE_QB
    0U,	// CMPGU_LT_QB
    0U,	// CMPU_EQ_QB
    0U,	// CMPU_LE_QB
    0U,	// CMPU_LT_QB
    0U,	// CMP_EQ_PH
    0U,	// CMP_LE_PH
    0U,	// CMP_LT_PH
    0U,	// CONSTPOOL_ENTRY
    0U,	// COPY_FD_PSEUDO
    0U,	// COPY_FW_PSEUDO
    0U,	// COPY_S_B
    0U,	// COPY_S_H
    0U,	// COPY_S_W
    0U,	// COPY_U_B
    0U,	// COPY_U_H
    0U,	// COPY_U_W
    0U,	// CTC1
    0U,	// CTC1_MM
    0U,	// CTCMSA
    0U,	// CVT_D32_S
    0U,	// CVT_D32_W
    0U,	// CVT_D32_W_MM
    0U,	// CVT_D64_L
    0U,	// CVT_D64_S
    0U,	// CVT_D64_W
    0U,	// CVT_D_S_MM
    0U,	// CVT_L_D64
    0U,	// CVT_L_D64_MM
    0U,	// CVT_L_S
    0U,	// CVT_L_S_MM
    0U,	// CVT_S_D32
    0U,	// CVT_S_D32_MM
    0U,	// CVT_S_D64
    0U,	// CVT_S_L
    0U,	// CVT_S_W
    0U,	// CVT_S_W_MM
    0U,	// CVT_W_D32
    0U,	// CVT_W_D64
    0U,	// CVT_W_MM
    0U,	// CVT_W_S
    0U,	// CVT_W_S_MM
    0U,	// C_EQ_D32
    0U,	// C_EQ_D64
    0U,	// C_EQ_S
    0U,	// C_F_D32
    0U,	// C_F_D64
    0U,	// C_F_S
    0U,	// C_LE_D32
    0U,	// C_LE_D64
    0U,	// C_LE_S
    0U,	// C_LT_D32
    0U,	// C_LT_D64
    0U,	// C_LT_S
    0U,	// C_NGE_D32
    0U,	// C_NGE_D64
    0U,	// C_NGE_S
    0U,	// C_NGLE_D32
    0U,	// C_NGLE_D64
    0U,	// C_NGLE_S
    0U,	// C_NGL_D32
    0U,	// C_NGL_D64
    0U,	// C_NGL_S
    0U,	// C_NGT_D32
    0U,	// C_NGT_D64
    0U,	// C_NGT_S
    0U,	// C_OLE_D32
    0U,	// C_OLE_D64
    0U,	// C_OLE_S
    0U,	// C_OLT_D32
    0U,	// C_OLT_D64
    0U,	// C_OLT_S
    0U,	// C_SEQ_D32
    0U,	// C_SEQ_D64
    0U,	// C_SEQ_S
    0U,	// C_SF_D32
    0U,	// C_SF_D64
    0U,	// C_SF_S
    0U,	// C_UEQ_D32
    0U,	// C_UEQ_D64
    0U,	// C_UEQ_S
    0U,	// C_ULE_D32
    0U,	// C_ULE_D64
    0U,	// C_ULE_S
    0U,	// C_ULT_D32
    0U,	// C_ULT_D64
    0U,	// C_ULT_S
    0U,	// C_UN_D32
    0U,	// C_UN_D64
    0U,	// C_UN_S
    0U,	// CmpRxRy16
    0U,	// CmpiRxImm16
    0U,	// CmpiRxImmX16
    0U,	// Constant32
    0U,	// DADD
    0U,	// DADDi
    0U,	// DADDiu
    0U,	// DADDu
    0U,	// DCLO
    0U,	// DCLZ
    0U,	// DERET
    0U,	// DERET_MM
    1U,	// DEXT
    1U,	// DEXTM
    1U,	// DEXTU
    0U,	// DI
    1U,	// DINS
    1U,	// DINSM
    1U,	// DINSU
    0U,	// DIV_S_B
    0U,	// DIV_S_D
    0U,	// DIV_S_H
    0U,	// DIV_S_W
    0U,	// DIV_U_B
    0U,	// DIV_U_D
    0U,	// DIV_U_H
    0U,	// DIV_U_W
    0U,	// DI_MM
    0U,	// DMFC0
    0U,	// DMFC1
    0U,	// DMFC2
    0U,	// DMTC0
    0U,	// DMTC1
    0U,	// DMTC2
    0U,	// DMULT
    0U,	// DMULTu
    0U,	// DOTP_S_D
    0U,	// DOTP_S_H
    0U,	// DOTP_S_W
    0U,	// DOTP_U_D
    0U,	// DOTP_U_H
    0U,	// DOTP_U_W
    0U,	// DPADD_S_D
    0U,	// DPADD_S_H
    0U,	// DPADD_S_W
    0U,	// DPADD_U_D
    0U,	// DPADD_U_H
    0U,	// DPADD_U_W
    0U,	// DPAQX_SA_W_PH
    0U,	// DPAQX_S_W_PH
    0U,	// DPAQ_SA_L_W
    0U,	// DPAQ_S_W_PH
    0U,	// DPAU_H_QBL
    0U,	// DPAU_H_QBR
    0U,	// DPAX_W_PH
    0U,	// DPA_W_PH
    0U,	// DPSQX_SA_W_PH
    0U,	// DPSQX_S_W_PH
    0U,	// DPSQ_SA_L_W
    0U,	// DPSQ_S_W_PH
    0U,	// DPSUB_S_D
    0U,	// DPSUB_S_H
    0U,	// DPSUB_S_W
    0U,	// DPSUB_U_D
    0U,	// DPSUB_U_H
    0U,	// DPSUB_U_W
    0U,	// DPSU_H_QBL
    0U,	// DPSU_H_QBR
    0U,	// DPSX_W_PH
    0U,	// DPS_W_PH
    0U,	// DROTR
    0U,	// DROTR32
    0U,	// DROTRV
    0U,	// DSBH
    0U,	// DSDIV
    0U,	// DSHD
    0U,	// DSLL
    0U,	// DSLL32
    0U,	// DSLL64_32
    0U,	// DSLLV
    0U,	// DSRA
    0U,	// DSRA32
    0U,	// DSRAV
    0U,	// DSRL
    0U,	// DSRL32
    0U,	// DSRLV
    0U,	// DSUBu
    0U,	// DUDIV
    0U,	// DivRxRy16
    0U,	// DivuRxRy16
    0U,	// EI
    0U,	// EI_MM
    0U,	// ERET
    0U,	// ERET_MM
    1U,	// EXT
    0U,	// EXTP
    0U,	// EXTPDP
    0U,	// EXTPDPV
    0U,	// EXTPV
    0U,	// EXTRV_RS_W
    0U,	// EXTRV_R_W
    0U,	// EXTRV_S_H
    0U,	// EXTRV_W
    0U,	// EXTR_RS_W
    0U,	// EXTR_R_W
    0U,	// EXTR_S_H
    0U,	// EXTR_W
    1U,	// EXT_MM
    0U,	// ExtractElementF64
    0U,	// ExtractElementF64_64
    0U,	// FABS_D
    0U,	// FABS_D32
    0U,	// FABS_D64
    0U,	// FABS_MM
    0U,	// FABS_S
    0U,	// FABS_S_MM
    0U,	// FABS_W
    0U,	// FADD_D
    0U,	// FADD_D32
    0U,	// FADD_D64
    0U,	// FADD_MM
    0U,	// FADD_S
    0U,	// FADD_S_MM
    0U,	// FADD_W
    0U,	// FCAF_D
    0U,	// FCAF_W
    0U,	// FCEQ_D
    0U,	// FCEQ_W
    0U,	// FCLASS_D
    0U,	// FCLASS_W
    0U,	// FCLE_D
    0U,	// FCLE_W
    0U,	// FCLT_D
    0U,	// FCLT_W
    0U,	// FCMP_D32
    0U,	// FCMP_D32_MM
    0U,	// FCMP_D64
    0U,	// FCMP_S32
    0U,	// FCMP_S32_MM
    0U,	// FCNE_D
    0U,	// FCNE_W
    0U,	// FCOR_D
    0U,	// FCOR_W
    0U,	// FCUEQ_D
    0U,	// FCUEQ_W
    0U,	// FCULE_D
    0U,	// FCULE_W
    0U,	// FCULT_D
    0U,	// FCULT_W
    0U,	// FCUNE_D
    0U,	// FCUNE_W
    0U,	// FCUN_D
    0U,	// FCUN_W
    0U,	// FDIV_D
    0U,	// FDIV_D32
    0U,	// FDIV_D64
    0U,	// FDIV_MM
    0U,	// FDIV_S
    0U,	// FDIV_S_MM
    0U,	// FDIV_W
    0U,	// FEXDO_H
    0U,	// FEXDO_W
    0U,	// FEXP2_D
    0U,	// FEXP2_D_1_PSEUDO
    0U,	// FEXP2_W
    0U,	// FEXP2_W_1_PSEUDO
    0U,	// FEXUPL_D
    0U,	// FEXUPL_W
    0U,	// FEXUPR_D
    0U,	// FEXUPR_W
    0U,	// FFINT_S_D
    0U,	// FFINT_S_W
    0U,	// FFINT_U_D
    0U,	// FFINT_U_W
    0U,	// FFQL_D
    0U,	// FFQL_W
    0U,	// FFQR_D
    0U,	// FFQR_W
    0U,	// FILL_B
    0U,	// FILL_FD_PSEUDO
    0U,	// FILL_FW_PSEUDO
    0U,	// FILL_H
    0U,	// FILL_W
    0U,	// FLOG2_D
    0U,	// FLOG2_W
    0U,	// FLOOR_L_D64
    0U,	// FLOOR_L_S
    0U,	// FLOOR_W_D32
    0U,	// FLOOR_W_D64
    0U,	// FLOOR_W_MM
    0U,	// FLOOR_W_S
    0U,	// FLOOR_W_S_MM
    0U,	// FMADD_D
    0U,	// FMADD_W
    0U,	// FMAX_A_D
    0U,	// FMAX_A_W
    0U,	// FMAX_D
    0U,	// FMAX_W
    0U,	// FMIN_A_D
    0U,	// FMIN_A_W
    0U,	// FMIN_D
    0U,	// FMIN_W
    0U,	// FMOV_D32
    0U,	// FMOV_D32_MM
    0U,	// FMOV_D64
    0U,	// FMOV_S
    0U,	// FMOV_S_MM
    0U,	// FMSUB_D
    0U,	// FMSUB_W
    0U,	// FMUL_D
    0U,	// FMUL_D32
    0U,	// FMUL_D64
    0U,	// FMUL_MM
    0U,	// FMUL_S
    0U,	// FMUL_S_MM
    0U,	// FMUL_W
    0U,	// FNEG_D32
    0U,	// FNEG_D64
    0U,	// FNEG_MM
    0U,	// FNEG_S
    0U,	// FNEG_S_MM
    0U,	// FRCP_D
    0U,	// FRCP_W
    0U,	// FRINT_D
    0U,	// FRINT_W
    0U,	// FRSQRT_D
    0U,	// FRSQRT_W
    0U,	// FSAF_D
    0U,	// FSAF_W
    0U,	// FSEQ_D
    0U,	// FSEQ_W
    0U,	// FSLE_D
    0U,	// FSLE_W
    0U,	// FSLT_D
    0U,	// FSLT_W
    0U,	// FSNE_D
    0U,	// FSNE_W
    0U,	// FSOR_D
    0U,	// FSOR_W
    0U,	// FSQRT_D
    0U,	// FSQRT_D32
    0U,	// FSQRT_D64
    0U,	// FSQRT_MM
    0U,	// FSQRT_S
    0U,	// FSQRT_S_MM
    0U,	// FSQRT_W
    0U,	// FSUB_D
    0U,	// FSUB_D32
    0U,	// FSUB_D64
    0U,	// FSUB_MM
    0U,	// FSUB_S
    0U,	// FSUB_S_MM
    0U,	// FSUB_W
    0U,	// FSUEQ_D
    0U,	// FSUEQ_W
    0U,	// FSULE_D
    0U,	// FSULE_W
    0U,	// FSULT_D
    0U,	// FSULT_W
    0U,	// FSUNE_D
    0U,	// FSUNE_W
    0U,	// FSUN_D
    0U,	// FSUN_W
    0U,	// FTINT_S_D
    0U,	// FTINT_S_W
    0U,	// FTINT_U_D
    0U,	// FTINT_U_W
    0U,	// FTQ_H
    0U,	// FTQ_W
    0U,	// FTRUNC_S_D
    0U,	// FTRUNC_S_W
    0U,	// FTRUNC_U_D
    0U,	// FTRUNC_U_W
    0U,	// GotPrologue16
    0U,	// HADD_S_D
    0U,	// HADD_S_H
    0U,	// HADD_S_W
    0U,	// HADD_U_D
    0U,	// HADD_U_H
    0U,	// HADD_U_W
    0U,	// HSUB_S_D
    0U,	// HSUB_S_H
    0U,	// HSUB_S_W
    0U,	// HSUB_U_D
    0U,	// HSUB_U_H
    0U,	// HSUB_U_W
    0U,	// ILVEV_B
    0U,	// ILVEV_D
    0U,	// ILVEV_H
    0U,	// ILVEV_W
    0U,	// ILVL_B
    0U,	// ILVL_D
    0U,	// ILVL_H
    0U,	// ILVL_W
    0U,	// ILVOD_B
    0U,	// ILVOD_D
    0U,	// ILVOD_H
    0U,	// ILVOD_W
    0U,	// ILVR_B
    0U,	// ILVR_D
    0U,	// ILVR_H
    0U,	// ILVR_W
    1U,	// INS
    0U,	// INSERT_B
    0U,	// INSERT_FD_PSEUDO
    0U,	// INSERT_FW_PSEUDO
    0U,	// INSERT_H
    0U,	// INSERT_W
    0U,	// INSV
    0U,	// INSVE_B
    0U,	// INSVE_D
    0U,	// INSVE_H
    0U,	// INSVE_W
    1U,	// INS_MM
    0U,	// J
    0U,	// JAL
    0U,	// JALR
    0U,	// JALR64
    0U,	// JALR64Pseudo
    0U,	// JALRPseudo
    0U,	// JALR_MM
    0U,	// JAL_MM
    0U,	// JR
    0U,	// JR64
    0U,	// JR_MM
    0U,	// J_MM
    0U,	// Jal16
    0U,	// JalB16
    0U,	// JrRa16
    0U,	// JrcRa16
    0U,	// JrcRx16
    0U,	// JumpLinkReg16
    0U,	// LB
    0U,	// LB64
    0U,	// LBUX
    0U,	// LB_MM
    0U,	// LBu
    0U,	// LBu64
    0U,	// LBu_MM
    0U,	// LD
    0U,	// LDC1
    0U,	// LDC164
    0U,	// LDC1_MM
    0U,	// LDC2
    0U,	// LDI_B
    0U,	// LDI_D
    0U,	// LDI_H
    0U,	// LDI_W
    0U,	// LDL
    0U,	// LDR
    0U,	// LDXC1
    0U,	// LDXC164
    0U,	// LD_B
    0U,	// LD_D
    0U,	// LD_H
    0U,	// LD_W
    0U,	// LEA_ADDiu
    0U,	// LEA_ADDiu64
    0U,	// LEA_ADDiu_MM
    0U,	// LH
    0U,	// LH64
    0U,	// LHX
    0U,	// LH_MM
    0U,	// LHu
    0U,	// LHu64
    0U,	// LHu_MM
    0U,	// LL
    0U,	// LLD
    0U,	// LL_MM
    0U,	// LOAD_ACC128
    0U,	// LOAD_ACC64
    0U,	// LOAD_ACC64DSP
    0U,	// LOAD_CCOND_DSP
    3U,	// LSA
    0U,	// LUXC1
    0U,	// LUXC164
    0U,	// LUXC1_MM
    0U,	// LUi
    0U,	// LUi64
    0U,	// LUi_MM
    0U,	// LW
    0U,	// LW64
    0U,	// LWC1
    0U,	// LWC1_MM
    0U,	// LWC2
    0U,	// LWL
    0U,	// LWL64
    0U,	// LWL_MM
    0U,	// LWR
    0U,	// LWR64
    0U,	// LWR_MM
    0U,	// LWX
    0U,	// LWXC1
    0U,	// LWXC1_MM
    0U,	// LW_MM
    0U,	// LWu
    0U,	// LbRxRyOffMemX16
    0U,	// LbuRxRyOffMemX16
    0U,	// LhRxRyOffMemX16
    0U,	// LhuRxRyOffMemX16
    0U,	// LiRxImm16
    0U,	// LiRxImmAlignX16
    0U,	// LiRxImmX16
    0U,	// LoadAddr32Imm
    0U,	// LoadAddr32Reg
    0U,	// LoadImm32Reg
    0U,	// LwConstant32
    0U,	// LwRxPcTcp16
    0U,	// LwRxPcTcpX16
    0U,	// LwRxRyOffMemX16
    0U,	// LwRxSpImmX16
    0U,	// MADD
    0U,	// MADDR_Q_H
    0U,	// MADDR_Q_W
    0U,	// MADDU
    0U,	// MADDU_DSP
    0U,	// MADDU_MM
    0U,	// MADDV_B
    0U,	// MADDV_D
    0U,	// MADDV_H
    0U,	// MADDV_W
    1U,	// MADD_D32
    1U,	// MADD_D32_MM
    1U,	// MADD_D64
    0U,	// MADD_DSP
    0U,	// MADD_MM
    0U,	// MADD_Q_H
    0U,	// MADD_Q_W
    1U,	// MADD_S
    1U,	// MADD_S_MM
    0U,	// MAQ_SA_W_PHL
    0U,	// MAQ_SA_W_PHR
    0U,	// MAQ_S_W_PHL
    0U,	// MAQ_S_W_PHR
    0U,	// MAXI_S_B
    0U,	// MAXI_S_D
    0U,	// MAXI_S_H
    0U,	// MAXI_S_W
    0U,	// MAXI_U_B
    0U,	// MAXI_U_D
    0U,	// MAXI_U_H
    0U,	// MAXI_U_W
    0U,	// MAX_A_B
    0U,	// MAX_A_D
    0U,	// MAX_A_H
    0U,	// MAX_A_W
    0U,	// MAX_S_B
    0U,	// MAX_S_D
    0U,	// MAX_S_H
    0U,	// MAX_S_W
    0U,	// MAX_U_B
    0U,	// MAX_U_D
    0U,	// MAX_U_H
    0U,	// MAX_U_W
    0U,	// MFC0
    0U,	// MFC1
    0U,	// MFC1_MM
    0U,	// MFC2
    0U,	// MFHC1
    0U,	// MFHC1_MM
    0U,	// MFHI
    0U,	// MFHI64
    0U,	// MFHI_DSP
    0U,	// MFHI_MM
    0U,	// MFLO
    0U,	// MFLO64
    0U,	// MFLO_DSP
    0U,	// MFLO_MM
    0U,	// MINI_S_B
    0U,	// MINI_S_D
    0U,	// MINI_S_H
    0U,	// MINI_S_W
    0U,	// MINI_U_B
    0U,	// MINI_U_D
    0U,	// MINI_U_H
    0U,	// MINI_U_W
    0U,	// MIN_A_B
    0U,	// MIN_A_D
    0U,	// MIN_A_H
    0U,	// MIN_A_W
    0U,	// MIN_S_B
    0U,	// MIN_S_D
    0U,	// MIN_S_H
    0U,	// MIN_S_W
    0U,	// MIN_U_B
    0U,	// MIN_U_D
    0U,	// MIN_U_H
    0U,	// MIN_U_W
    0U,	// MIPSeh_return32
    0U,	// MIPSeh_return64
    0U,	// MODSUB
    0U,	// MOD_S_B
    0U,	// MOD_S_D
    0U,	// MOD_S_H
    0U,	// MOD_S_W
    0U,	// MOD_U_B
    0U,	// MOD_U_D
    0U,	// MOD_U_H
    0U,	// MOD_U_W
    0U,	// MOVE_V
    0U,	// MOVF_D32
    0U,	// MOVF_D32_MM
    0U,	// MOVF_D64
    0U,	// MOVF_I
    0U,	// MOVF_I64
    0U,	// MOVF_I_MM
    0U,	// MOVF_S
    0U,	// MOVF_S_MM
    0U,	// MOVN_I64_D64
    0U,	// MOVN_I64_I
    0U,	// MOVN_I64_I64
    0U,	// MOVN_I64_S
    0U,	// MOVN_I_D32
    0U,	// MOVN_I_D32_MM
    0U,	// MOVN_I_D64
    0U,	// MOVN_I_I
    0U,	// MOVN_I_I64
    0U,	// MOVN_I_MM
    0U,	// MOVN_I_S
    0U,	// MOVN_I_S_MM
    0U,	// MOVT_D32
    0U,	// MOVT_D32_MM
    0U,	// MOVT_D64
    0U,	// MOVT_I
    0U,	// MOVT_I64
    0U,	// MOVT_I_MM
    0U,	// MOVT_S
    0U,	// MOVT_S_MM
    0U,	// MOVZ_I64_D64
    0U,	// MOVZ_I64_I
    0U,	// MOVZ_I64_I64
    0U,	// MOVZ_I64_S
    0U,	// MOVZ_I_D32
    0U,	// MOVZ_I_D32_MM
    0U,	// MOVZ_I_D64
    0U,	// MOVZ_I_I
    0U,	// MOVZ_I_I64
    0U,	// MOVZ_I_MM
    0U,	// MOVZ_I_S
    0U,	// MOVZ_I_S_MM
    0U,	// MSUB
    0U,	// MSUBR_Q_H
    0U,	// MSUBR_Q_W
    0U,	// MSUBU
    0U,	// MSUBU_DSP
    0U,	// MSUBU_MM
    0U,	// MSUBV_B
    0U,	// MSUBV_D
    0U,	// MSUBV_H
    0U,	// MSUBV_W
    1U,	// MSUB_D32
    1U,	// MSUB_D32_MM
    1U,	// MSUB_D64
    0U,	// MSUB_DSP
    0U,	// MSUB_MM
    0U,	// MSUB_Q_H
    0U,	// MSUB_Q_W
    1U,	// MSUB_S
    1U,	// MSUB_S_MM
    0U,	// MTC0
    0U,	// MTC1
    0U,	// MTC1_MM
    0U,	// MTC2
    0U,	// MTHC1
    0U,	// MTHC1_MM
    0U,	// MTHI
    0U,	// MTHI64
    0U,	// MTHI_DSP
    0U,	// MTHI_MM
    0U,	// MTHLIP
    0U,	// MTLO
    0U,	// MTLO64
    0U,	// MTLO_DSP
    0U,	// MTLO_MM
    0U,	// MUL
    0U,	// MULEQ_S_W_PHL
    0U,	// MULEQ_S_W_PHR
    0U,	// MULEU_S_PH_QBL
    0U,	// MULEU_S_PH_QBR
    0U,	// MULQ_RS_PH
    0U,	// MULQ_RS_W
    0U,	// MULQ_S_PH
    0U,	// MULQ_S_W
    0U,	// MULR_Q_H
    0U,	// MULR_Q_W
    0U,	// MULSAQ_S_W_PH
    0U,	// MULSA_W_PH
    0U,	// MULT
    0U,	// MULTU_DSP
    0U,	// MULT_DSP
    0U,	// MULT_MM
    0U,	// MULTu
    0U,	// MULTu_MM
    0U,	// MULV_B
    0U,	// MULV_D
    0U,	// MULV_H
    0U,	// MULV_W
    0U,	// MUL_MM
    0U,	// MUL_PH
    0U,	// MUL_Q_H
    0U,	// MUL_Q_W
    0U,	// MUL_S_PH
    0U,	// Mfhi16
    0U,	// Mflo16
    0U,	// Move32R16
    0U,	// MoveR3216
    0U,	// MultRxRy16
    0U,	// MultRxRyRz16
    0U,	// MultuRxRy16
    0U,	// MultuRxRyRz16
    0U,	// NLOC_B
    0U,	// NLOC_D
    0U,	// NLOC_H
    0U,	// NLOC_W
    0U,	// NLZC_B
    0U,	// NLZC_D
    0U,	// NLZC_H
    0U,	// NLZC_W
    1U,	// NMADD_D32
    1U,	// NMADD_D32_MM
    1U,	// NMADD_D64
    1U,	// NMADD_S
    1U,	// NMADD_S_MM
    1U,	// NMSUB_D32
    1U,	// NMSUB_D32_MM
    1U,	// NMSUB_D64
    1U,	// NMSUB_S
    1U,	// NMSUB_S_MM
    0U,	// NOP
    0U,	// NOR
    0U,	// NOR64
    0U,	// NORI_B
    0U,	// NOR_MM
    0U,	// NOR_V
    0U,	// NOR_V_D_PSEUDO
    0U,	// NOR_V_H_PSEUDO
    0U,	// NOR_V_W_PSEUDO
    0U,	// NegRxRy16
    0U,	// NotRxRy16
    0U,	// OR
    0U,	// OR64
    0U,	// ORI_B
    0U,	// OR_MM
    0U,	// OR_V
    0U,	// OR_V_D_PSEUDO
    0U,	// OR_V_H_PSEUDO
    0U,	// OR_V_W_PSEUDO
    0U,	// ORi
    0U,	// ORi64
    0U,	// ORi_MM
    0U,	// OrRxRxRy16
    0U,	// PACKRL_PH
    0U,	// PCKEV_B
    0U,	// PCKEV_D
    0U,	// PCKEV_H
    0U,	// PCKEV_W
    0U,	// PCKOD_B
    0U,	// PCKOD_D
    0U,	// PCKOD_H
    0U,	// PCKOD_W
    0U,	// PCNT_B
    0U,	// PCNT_D
    0U,	// PCNT_H
    0U,	// PCNT_W
    0U,	// PICK_PH
    0U,	// PICK_QB
    0U,	// PRECEQU_PH_QBL
    0U,	// PRECEQU_PH_QBLA
    0U,	// PRECEQU_PH_QBR
    0U,	// PRECEQU_PH_QBRA
    0U,	// PRECEQ_W_PHL
    0U,	// PRECEQ_W_PHR
    0U,	// PRECEU_PH_QBL
    0U,	// PRECEU_PH_QBLA
    0U,	// PRECEU_PH_QBR
    0U,	// PRECEU_PH_QBRA
    0U,	// PRECRQU_S_QB_PH
    0U,	// PRECRQ_PH_W
    0U,	// PRECRQ_QB_PH
    0U,	// PRECRQ_RS_PH_W
    0U,	// PRECR_QB_PH
    0U,	// PRECR_SRA_PH_W
    0U,	// PRECR_SRA_R_PH_W
    0U,	// PREPEND
    0U,	// PseudoCMPU_EQ_QB
    0U,	// PseudoCMPU_LE_QB
    0U,	// PseudoCMPU_LT_QB
    0U,	// PseudoCMP_EQ_PH
    0U,	// PseudoCMP_LE_PH
    0U,	// PseudoCMP_LT_PH
    0U,	// PseudoCVT_D32_W
    0U,	// PseudoCVT_D64_L
    0U,	// PseudoCVT_D64_W
    0U,	// PseudoCVT_S_L
    0U,	// PseudoCVT_S_W
    0U,	// PseudoDMULT
    0U,	// PseudoDMULTu
    0U,	// PseudoDSDIV
    0U,	// PseudoDUDIV
    0U,	// PseudoMADD
    0U,	// PseudoMADDU
    0U,	// PseudoMFHI
    0U,	// PseudoMFHI64
    0U,	// PseudoMFLO
    0U,	// PseudoMFLO64
    0U,	// PseudoMSUB
    0U,	// PseudoMSUBU
    0U,	// PseudoMTLOHI
    0U,	// PseudoMTLOHI64
    0U,	// PseudoMTLOHI_DSP
    0U,	// PseudoMULT
    0U,	// PseudoMULTu
    0U,	// PseudoPICK_PH
    0U,	// PseudoPICK_QB
    0U,	// PseudoSDIV
    0U,	// PseudoUDIV
    0U,	// RADDU_W_QB
    0U,	// RDDSP
    0U,	// RDHWR
    0U,	// RDHWR64
    0U,	// REPLV_PH
    0U,	// REPLV_QB
    0U,	// REPL_PH
    0U,	// REPL_QB
    0U,	// RET
    0U,	// RET_MM
    0U,	// ROTR
    0U,	// ROTRV
    0U,	// ROTRV_MM
    0U,	// ROTR_MM
    0U,	// ROUND_L_D64
    0U,	// ROUND_L_S
    0U,	// ROUND_W_D32
    0U,	// ROUND_W_D64
    0U,	// ROUND_W_MM
    0U,	// ROUND_W_S
    0U,	// ROUND_W_S_MM
    0U,	// Restore16
    0U,	// RestoreX16
    0U,	// RetRA
    0U,	// RetRA16
    0U,	// SAT_S_B
    0U,	// SAT_S_D
    0U,	// SAT_S_H
    0U,	// SAT_S_W
    0U,	// SAT_U_B
    0U,	// SAT_U_D
    0U,	// SAT_U_H
    0U,	// SAT_U_W
    0U,	// SB
    0U,	// SB64
    0U,	// SB_MM
    0U,	// SC
    0U,	// SCD
    0U,	// SC_MM
    0U,	// SD
    0U,	// SDC1
    0U,	// SDC164
    0U,	// SDC1_MM
    0U,	// SDC2
    0U,	// SDIV
    0U,	// SDIV_MM
    0U,	// SDL
    0U,	// SDR
    0U,	// SDXC1
    0U,	// SDXC164
    0U,	// SEB
    0U,	// SEB64
    0U,	// SEB_MM
    0U,	// SEH
    0U,	// SEH64
    0U,	// SEH_MM
    0U,	// SH
    0U,	// SH64
    0U,	// SHF_B
    0U,	// SHF_H
    0U,	// SHF_W
    0U,	// SHILO
    0U,	// SHILOV
    0U,	// SHLLV_PH
    0U,	// SHLLV_QB
    0U,	// SHLLV_S_PH
    0U,	// SHLLV_S_W
    0U,	// SHLL_PH
    0U,	// SHLL_QB
    0U,	// SHLL_S_PH
    0U,	// SHLL_S_W
    0U,	// SHRAV_PH
    0U,	// SHRAV_QB
    0U,	// SHRAV_R_PH
    0U,	// SHRAV_R_QB
    0U,	// SHRAV_R_W
    0U,	// SHRA_PH
    0U,	// SHRA_QB
    0U,	// SHRA_R_PH
    0U,	// SHRA_R_QB
    0U,	// SHRA_R_W
    0U,	// SHRLV_PH
    0U,	// SHRLV_QB
    0U,	// SHRL_PH
    0U,	// SHRL_QB
    0U,	// SH_MM
    0U,	// SLDI_B
    0U,	// SLDI_D
    0U,	// SLDI_H
    0U,	// SLDI_W
    0U,	// SLD_B
    0U,	// SLD_D
    0U,	// SLD_H
    0U,	// SLD_W
    0U,	// SLL
    0U,	// SLL64_32
    0U,	// SLL64_64
    0U,	// SLLI_B
    0U,	// SLLI_D
    0U,	// SLLI_H
    0U,	// SLLI_W
    0U,	// SLLV
    0U,	// SLLV_MM
    0U,	// SLL_B
    0U,	// SLL_D
    0U,	// SLL_H
    0U,	// SLL_MM
    0U,	// SLL_W
    0U,	// SLT
    0U,	// SLT64
    0U,	// SLT_MM
    0U,	// SLTi
    0U,	// SLTi64
    0U,	// SLTi_MM
    0U,	// SLTiu
    0U,	// SLTiu64
    0U,	// SLTiu_MM
    0U,	// SLTu
    0U,	// SLTu64
    0U,	// SLTu_MM
    0U,	// SNZ_B_PSEUDO
    0U,	// SNZ_D_PSEUDO
    0U,	// SNZ_H_PSEUDO
    0U,	// SNZ_V_PSEUDO
    0U,	// SNZ_W_PSEUDO
    0U,	// SPLATI_B
    0U,	// SPLATI_D
    0U,	// SPLATI_H
    0U,	// SPLATI_W
    0U,	// SPLAT_B
    0U,	// SPLAT_D
    0U,	// SPLAT_H
    0U,	// SPLAT_W
    0U,	// SRA
    0U,	// SRAI_B
    0U,	// SRAI_D
    0U,	// SRAI_H
    0U,	// SRAI_W
    0U,	// SRARI_B
    0U,	// SRARI_D
    0U,	// SRARI_H
    0U,	// SRARI_W
    0U,	// SRAR_B
    0U,	// SRAR_D
    0U,	// SRAR_H
    0U,	// SRAR_W
    0U,	// SRAV
    0U,	// SRAV_MM
    0U,	// SRA_B
    0U,	// SRA_D
    0U,	// SRA_H
    0U,	// SRA_MM
    0U,	// SRA_W
    0U,	// SRL
    0U,	// SRLI_B
    0U,	// SRLI_D
    0U,	// SRLI_H
    0U,	// SRLI_W
    0U,	// SRLRI_B
    0U,	// SRLRI_D
    0U,	// SRLRI_H
    0U,	// SRLRI_W
    0U,	// SRLR_B
    0U,	// SRLR_D
    0U,	// SRLR_H
    0U,	// SRLR_W
    0U,	// SRLV
    0U,	// SRLV_MM
    0U,	// SRL_B
    0U,	// SRL_D
    0U,	// SRL_H
    0U,	// SRL_MM
    0U,	// SRL_W
    0U,	// STORE_ACC128
    0U,	// STORE_ACC64
    0U,	// STORE_ACC64DSP
    0U,	// STORE_CCOND_DSP
    0U,	// ST_B
    0U,	// ST_D
    0U,	// ST_H
    0U,	// ST_W
    0U,	// SUB
    0U,	// SUBQH_PH
    0U,	// SUBQH_R_PH
    0U,	// SUBQH_R_W
    0U,	// SUBQH_W
    0U,	// SUBQ_PH
    0U,	// SUBQ_S_PH
    0U,	// SUBQ_S_W
    0U,	// SUBSUS_U_B
    0U,	// SUBSUS_U_D
    0U,	// SUBSUS_U_H
    0U,	// SUBSUS_U_W
    0U,	// SUBSUU_S_B
    0U,	// SUBSUU_S_D
    0U,	// SUBSUU_S_H
    0U,	// SUBSUU_S_W
    0U,	// SUBS_S_B
    0U,	// SUBS_S_D
    0U,	// SUBS_S_H
    0U,	// SUBS_S_W
    0U,	// SUBS_U_B
    0U,	// SUBS_U_D
    0U,	// SUBS_U_H
    0U,	// SUBS_U_W
    0U,	// SUBUH_QB
    0U,	// SUBUH_R_QB
    0U,	// SUBU_PH
    0U,	// SUBU_QB
    0U,	// SUBU_S_PH
    0U,	// SUBU_S_QB
    0U,	// SUBVI_B
    0U,	// SUBVI_D
    0U,	// SUBVI_H
    0U,	// SUBVI_W
    0U,	// SUBV_B
    0U,	// SUBV_D
    0U,	// SUBV_H
    0U,	// SUBV_W
    0U,	// SUB_MM
    0U,	// SUBu
    0U,	// SUBu_MM
    0U,	// SUXC1
    0U,	// SUXC164
    0U,	// SUXC1_MM
    0U,	// SW
    0U,	// SW64
    0U,	// SWC1
    0U,	// SWC1_MM
    0U,	// SWC2
    0U,	// SWL
    0U,	// SWL64
    0U,	// SWL_MM
    0U,	// SWR
    0U,	// SWR64
    0U,	// SWR_MM
    0U,	// SWXC1
    0U,	// SWXC1_MM
    0U,	// SW_MM
    0U,	// SYNC
    0U,	// SYNC_MM
    0U,	// SYSCALL
    0U,	// SYSCALL_MM
    0U,	// SZ_B_PSEUDO
    0U,	// SZ_D_PSEUDO
    0U,	// SZ_H_PSEUDO
    0U,	// SZ_V_PSEUDO
    0U,	// SZ_W_PSEUDO
    0U,	// Save16
    0U,	// SaveX16
    0U,	// SbRxRyOffMemX16
    0U,	// SebRx16
    0U,	// SehRx16
    0U,	// SelBeqZ
    0U,	// SelBneZ
    0U,	// SelTBteqZCmp
    0U,	// SelTBteqZCmpi
    0U,	// SelTBteqZSlt
    0U,	// SelTBteqZSlti
    0U,	// SelTBteqZSltiu
    0U,	// SelTBteqZSltu
    0U,	// SelTBtneZCmp
    0U,	// SelTBtneZCmpi
    0U,	// SelTBtneZSlt
    0U,	// SelTBtneZSlti
    0U,	// SelTBtneZSltiu
    0U,	// SelTBtneZSltu
    0U,	// ShRxRyOffMemX16
    0U,	// SllX16
    0U,	// SllvRxRy16
    0U,	// SltCCRxRy16
    0U,	// SltRxRy16
    0U,	// SltiCCRxImmX16
    0U,	// SltiRxImm16
    0U,	// SltiRxImmX16
    0U,	// SltiuCCRxImmX16
    0U,	// SltiuRxImm16
    0U,	// SltiuRxImmX16
    0U,	// SltuCCRxRy16
    0U,	// SltuRxRy16
    0U,	// SltuRxRyRz16
    0U,	// SraX16
    0U,	// SravRxRy16
    0U,	// SrlX16
    0U,	// SrlvRxRy16
    0U,	// SubuRxRyRz16
    0U,	// SwRxRyOffMemX16
    0U,	// SwRxSpImmX16
    0U,	// TAILCALL
    0U,	// TAILCALL64_R
    0U,	// TAILCALL_R
    0U,	// TEQ
    0U,	// TEQI
    0U,	// TEQI_MM
    0U,	// TEQ_MM
    0U,	// TGE
    0U,	// TGEI
    0U,	// TGEIU
    0U,	// TGEIU_MM
    0U,	// TGEI_MM
    0U,	// TGEU
    0U,	// TGEU_MM
    0U,	// TGE_MM
    0U,	// TLT
    0U,	// TLTI
    0U,	// TLTIU_MM
    0U,	// TLTI_MM
    0U,	// TLTU
    0U,	// TLTU_MM
    0U,	// TLT_MM
    0U,	// TNE
    0U,	// TNEI
    0U,	// TNEI_MM
    0U,	// TNE_MM
    0U,	// TRAP
    0U,	// TRUNC_L_D64
    0U,	// TRUNC_L_S
    0U,	// TRUNC_W_D32
    0U,	// TRUNC_W_D64
    0U,	// TRUNC_W_MM
    0U,	// TRUNC_W_S
    0U,	// TRUNC_W_S_MM
    0U,	// TTLTIU
    0U,	// UDIV
    0U,	// UDIV_MM
    0U,	// VSHF_B
    0U,	// VSHF_D
    0U,	// VSHF_H
    0U,	// VSHF_W
    0U,	// WAIT
    0U,	// WAIT_MM
    0U,	// WRDSP
    0U,	// WSBH
    0U,	// WSBH_MM
    0U,	// XOR
    0U,	// XOR64
    0U,	// XORI_B
    0U,	// XOR_MM
    0U,	// XOR_V
    0U,	// XOR_V_D_PSEUDO
    0U,	// XOR_V_H_PSEUDO
    0U,	// XOR_V_W_PSEUDO
    0U,	// XORi
    0U,	// XORi64
    0U,	// XORi_MM
    0U,	// XorRxRxRy16
    0U
  };

  static char AsmStrs[] = {
  /* 0 */ 'j', 'a', 'l', 'r', 'c', 32, 9, 0,
  /* 8 */ 'd', 'm', 'f', 'c', '0', 9, 0,
  /* 15 */ 'd', 'm', 't', 'c', '0', 9, 0,
  /* 22 */ 'l', 'd', 'c', '1', 9, 0,
  /* 28 */ 's', 'd', 'c', '1', 9, 0,
  /* 34 */ 'c', 'f', 'c', '1', 9, 0,
  /* 40 */ 'd', 'm', 'f', 'c', '1', 9, 0,
  /* 47 */ 'm', 'f', 'h', 'c', '1', 9, 0,
  /* 54 */ 'm', 't', 'h', 'c', '1', 9, 0,
  /* 61 */ 'c', 't', 'c', '1', 9, 0,
  /* 67 */ 'd', 'm', 't', 'c', '1', 9, 0,
  /* 74 */ 'l', 'w', 'c', '1', 9, 0,
  /* 80 */ 's', 'w', 'c', '1', 9, 0,
  /* 86 */ 'l', 'd', 'x', 'c', '1', 9, 0,
  /* 93 */ 's', 'd', 'x', 'c', '1', 9, 0,
  /* 100 */ 'l', 'u', 'x', 'c', '1', 9, 0,
  /* 107 */ 's', 'u', 'x', 'c', '1', 9, 0,
  /* 114 */ 'l', 'w', 'x', 'c', '1', 9, 0,
  /* 121 */ 's', 'w', 'x', 'c', '1', 9, 0,
  /* 128 */ 'd', 's', 'r', 'a', '3', '2', 9, 0,
  /* 136 */ 'b', 'p', 'o', 's', 'g', 'e', '3', '2', 9, 0,
  /* 146 */ 'd', 's', 'l', 'l', '3', '2', 9, 0,
  /* 154 */ 'd', 's', 'r', 'l', '3', '2', 9, 0,
  /* 162 */ 'd', 'r', 'o', 't', 'r', '3', '2', 9, 0,
  /* 171 */ 'l', 'd', 'c', '2', 9, 0,
  /* 177 */ 's', 'd', 'c', '2', 9, 0,
  /* 183 */ 'd', 'm', 'f', 'c', '2', 9, 0,
  /* 190 */ 'd', 'm', 't', 'c', '2', 9, 0,
  /* 197 */ 'l', 'w', 'c', '2', 9, 0,
  /* 203 */ 's', 'w', 'c', '2', 9, 0,
  /* 209 */ 'p', 'r', 'e', 'c', 'e', 'u', '.', 'p', 'h', '.', 'q', 'b', 'l', 'a', 9, 0,
  /* 225 */ 'p', 'r', 'e', 'c', 'e', 'q', 'u', '.', 'p', 'h', '.', 'q', 'b', 'l', 'a', 9, 0,
  /* 242 */ 'p', 'r', 'e', 'c', 'e', 'u', '.', 'p', 'h', '.', 'q', 'b', 'r', 'a', 9, 0,
  /* 258 */ 'p', 'r', 'e', 'c', 'e', 'q', 'u', '.', 'p', 'h', '.', 'q', 'b', 'r', 'a', 9, 0,
  /* 275 */ 'd', 's', 'r', 'a', 9, 0,
  /* 281 */ 'l', 's', 'a', 9, 0,
  /* 286 */ 'c', 'f', 'c', 'm', 's', 'a', 9, 0,
  /* 294 */ 'c', 't', 'c', 'm', 's', 'a', 9, 0,
  /* 302 */ 'a', 'd', 'd', '_', 'a', '.', 'b', 9, 0,
  /* 311 */ 'm', 'i', 'n', '_', 'a', '.', 'b', 9, 0,
  /* 320 */ 'a', 'd', 'd', 's', '_', 'a', '.', 'b', 9, 0,
  /* 330 */ 'm', 'a', 'x', '_', 'a', '.', 'b', 9, 0,
  /* 339 */ 's', 'r', 'a', '.', 'b', 9, 0,
  /* 346 */ 'n', 'l', 'o', 'c', '.', 'b', 9, 0,
  /* 354 */ 'n', 'l', 'z', 'c', '.', 'b', 9, 0,
  /* 362 */ 's', 'l', 'd', '.', 'b', 9, 0,
  /* 369 */ 'p', 'c', 'k', 'o', 'd', '.', 'b', 9, 0,
  /* 378 */ 'i', 'l', 'v', 'o', 'd', '.', 'b', 9, 0,
  /* 387 */ 'i', 'n', 's', 'v', 'e', '.', 'b', 9, 0,
  /* 396 */ 'v', 's', 'h', 'f', '.', 'b', 9, 0,
  /* 404 */ 'b', 'n', 'e', 'g', '.', 'b', 9, 0,
  /* 412 */ 's', 'r', 'a', 'i', '.', 'b', 9, 0,
  /* 420 */ 's', 'l', 'd', 'i', '.', 'b', 9, 0,
  /* 428 */ 'a', 'n', 'd', 'i', '.', 'b', 9, 0,
  /* 436 */ 'b', 'n', 'e', 'g', 'i', '.', 'b', 9, 0,
  /* 445 */ 'b', 's', 'e', 'l', 'i', '.', 'b', 9, 0,
  /* 454 */ 's', 'l', 'l', 'i', '.', 'b', 9, 0,
  /* 462 */ 's', 'r', 'l', 'i', '.', 'b', 9, 0,
  /* 470 */ 'b', 'i', 'n', 's', 'l', 'i', '.', 'b', 9, 0,
  /* 480 */ 'c', 'e', 'q', 'i', '.', 'b', 9, 0,
  /* 488 */ 's', 'r', 'a', 'r', 'i', '.', 'b', 9, 0,
  /* 497 */ 'b', 'c', 'l', 'r', 'i', '.', 'b', 9, 0,
  /* 506 */ 's', 'r', 'l', 'r', 'i', '.', 'b', 9, 0,
  /* 515 */ 'n', 'o', 'r', 'i', '.', 'b', 9, 0,
  /* 523 */ 'x', 'o', 'r', 'i', '.', 'b', 9, 0,
  /* 531 */ 'b', 'i', 'n', 's', 'r', 'i', '.', 'b', 9, 0,
  /* 541 */ 's', 'p', 'l', 'a', 't', 'i', '.', 'b', 9, 0,
  /* 551 */ 'b', 's', 'e', 't', 'i', '.', 'b', 9, 0,
  /* 560 */ 's', 'u', 'b', 'v', 'i', '.', 'b', 9, 0,
  /* 569 */ 'a', 'd', 'd', 'v', 'i', '.', 'b', 9, 0,
  /* 578 */ 'b', 'm', 'z', 'i', '.', 'b', 9, 0,
  /* 586 */ 'b', 'm', 'n', 'z', 'i', '.', 'b', 9, 0,
  /* 595 */ 'f', 'i', 'l', 'l', '.', 'b', 9, 0,
  /* 603 */ 's', 'l', 'l', '.', 'b', 9, 0,
  /* 610 */ 's', 'r', 'l', '.', 'b', 9, 0,
  /* 617 */ 'b', 'i', 'n', 's', 'l', '.', 'b', 9, 0,
  /* 626 */ 'i', 'l', 'v', 'l', '.', 'b', 9, 0,
  /* 634 */ 'c', 'e', 'q', '.', 'b', 9, 0,
  /* 641 */ 's', 'r', 'a', 'r', '.', 'b', 9, 0,
  /* 649 */ 'b', 'c', 'l', 'r', '.', 'b', 9, 0,
  /* 657 */ 's', 'r', 'l', 'r', '.', 'b', 9, 0,
  /* 665 */ 'b', 'i', 'n', 's', 'r', '.', 'b', 9, 0,
  /* 674 */ 'i', 'l', 'v', 'r', '.', 'b', 9, 0,
  /* 682 */ 'a', 's', 'u', 'b', '_', 's', '.', 'b', 9, 0,
  /* 692 */ 'm', 'o', 'd', '_', 's', '.', 'b', 9, 0,
  /* 701 */ 'c', 'l', 'e', '_', 's', '.', 'b', 9, 0,
  /* 710 */ 'a', 'v', 'e', '_', 's', '.', 'b', 9, 0,
  /* 719 */ 'c', 'l', 'e', 'i', '_', 's', '.', 'b', 9, 0,
  /* 729 */ 'm', 'i', 'n', 'i', '_', 's', '.', 'b', 9, 0,
  /* 739 */ 'c', 'l', 't', 'i', '_', 's', '.', 'b', 9, 0,
  /* 749 */ 'm', 'a', 'x', 'i', '_', 's', '.', 'b', 9, 0,
  /* 759 */ 'm', 'i', 'n', '_', 's', '.', 'b', 9, 0,
  /* 768 */ 'a', 'v', 'e', 'r', '_', 's', '.', 'b', 9, 0,
  /* 778 */ 's', 'u', 'b', 's', '_', 's', '.', 'b', 9, 0,
  /* 788 */ 'a', 'd', 'd', 's', '_', 's', '.', 'b', 9, 0,
  /* 798 */ 's', 'a', 't', '_', 's', '.', 'b', 9, 0,
  /* 807 */ 'c', 'l', 't', '_', 's', '.', 'b', 9, 0,
  /* 816 */ 's', 'u', 'b', 's', 'u', 'u', '_', 's', '.', 'b', 9, 0,
  /* 828 */ 'd', 'i', 'v', '_', 's', '.', 'b', 9, 0,
  /* 837 */ 'm', 'a', 'x', '_', 's', '.', 'b', 9, 0,
  /* 846 */ 'c', 'o', 'p', 'y', '_', 's', '.', 'b', 9, 0,
  /* 856 */ 's', 'p', 'l', 'a', 't', '.', 'b', 9, 0,
  /* 865 */ 'b', 's', 'e', 't', '.', 'b', 9, 0,
  /* 873 */ 'p', 'c', 'n', 't', '.', 'b', 9, 0,
  /* 881 */ 'i', 'n', 's', 'e', 'r', 't', '.', 'b', 9, 0,
  /* 891 */ 's', 't', '.', 'b', 9, 0,
  /* 897 */ 'a', 's', 'u', 'b', '_', 'u', '.', 'b', 9, 0,
  /* 907 */ 'm', 'o', 'd', '_', 'u', '.', 'b', 9, 0,
  /* 916 */ 'c', 'l', 'e', '_', 'u', '.', 'b', 9, 0,
  /* 925 */ 'a', 'v', 'e', '_', 'u', '.', 'b', 9, 0,
  /* 934 */ 'c', 'l', 'e', 'i', '_', 'u', '.', 'b', 9, 0,
  /* 944 */ 'm', 'i', 'n', 'i', '_', 'u', '.', 'b', 9, 0,
  /* 954 */ 'c', 'l', 't', 'i', '_', 'u', '.', 'b', 9, 0,
  /* 964 */ 'm', 'a', 'x', 'i', '_', 'u', '.', 'b', 9, 0,
  /* 974 */ 'm', 'i', 'n', '_', 'u', '.', 'b', 9, 0,
  /* 983 */ 'a', 'v', 'e', 'r', '_', 'u', '.', 'b', 9, 0,
  /* 993 */ 's', 'u', 'b', 's', '_', 'u', '.', 'b', 9, 0,
  /* 1003 */ 'a', 'd', 'd', 's', '_', 'u', '.', 'b', 9, 0,
  /* 1013 */ 's', 'u', 'b', 's', 'u', 's', '_', 'u', '.', 'b', 9, 0,
  /* 1025 */ 's', 'a', 't', '_', 'u', '.', 'b', 9, 0,
  /* 1034 */ 'c', 'l', 't', '_', 'u', '.', 'b', 9, 0,
  /* 1043 */ 'd', 'i', 'v', '_', 'u', '.', 'b', 9, 0,
  /* 1052 */ 'm', 'a', 'x', '_', 'u', '.', 'b', 9, 0,
  /* 1061 */ 'c', 'o', 'p', 'y', '_', 'u', '.', 'b', 9, 0,
  /* 1071 */ 'm', 's', 'u', 'b', 'v', '.', 'b', 9, 0,
  /* 1080 */ 'm', 'a', 'd', 'd', 'v', '.', 'b', 9, 0,
  /* 1089 */ 'p', 'c', 'k', 'e', 'v', '.', 'b', 9, 0,
  /* 1098 */ 'i', 'l', 'v', 'e', 'v', '.', 'b', 9, 0,
  /* 1107 */ 'm', 'u', 'l', 'v', '.', 'b', 9, 0,
  /* 1115 */ 'b', 'z', '.', 'b', 9, 0,
  /* 1121 */ 'b', 'n', 'z', '.', 'b', 9, 0,
  /* 1128 */ 's', 'e', 'b', 9, 0,
  /* 1133 */ 'l', 'b', 9, 0,
  /* 1137 */ 's', 'h', 'r', 'a', '.', 'q', 'b', 9, 0,
  /* 1146 */ 'c', 'm', 'p', 'g', 'd', 'u', '.', 'l', 'e', '.', 'q', 'b', 9, 0,
  /* 1160 */ 'c', 'm', 'p', 'g', 'u', '.', 'l', 'e', '.', 'q', 'b', 9, 0,
  /* 1173 */ 'c', 'm', 'p', 'u', '.', 'l', 'e', '.', 'q', 'b', 9, 0,
  /* 1185 */ 's', 'u', 'b', 'u', 'h', '.', 'q', 'b', 9, 0,
  /* 1195 */ 'a', 'd', 'd', 'u', 'h', '.', 'q', 'b', 9, 0,
  /* 1205 */ 'p', 'i', 'c', 'k', '.', 'q', 'b', 9, 0,
  /* 1214 */ 's', 'h', 'l', 'l', '.', 'q', 'b', 9, 0,
  /* 1223 */ 'r', 'e', 'p', 'l', '.', 'q', 'b', 9, 0,
  /* 1232 */ 's', 'h', 'r', 'l', '.', 'q', 'b', 9, 0,
  /* 1241 */ 'c', 'm', 'p', 'g', 'd', 'u', '.', 'e', 'q', '.', 'q', 'b', 9, 0,
  /* 1255 */ 'c', 'm', 'p', 'g', 'u', '.', 'e', 'q', '.', 'q', 'b', 9, 0,
  /* 1268 */ 'c', 'm', 'p', 'u', '.', 'e', 'q', '.', 'q', 'b', 9, 0,
  /* 1280 */ 's', 'h', 'r', 'a', '_', 'r', '.', 'q', 'b', 9, 0,
  /* 1291 */ 's', 'u', 'b', 'u', 'h', '_', 'r', '.', 'q', 'b', 9, 0,
  /* 1303 */ 'a', 'd', 'd', 'u', 'h', '_', 'r', '.', 'q', 'b', 9, 0,
  /* 1315 */ 's', 'h', 'r', 'a', 'v', '_', 'r', '.', 'q', 'b', 9, 0,
  /* 1327 */ 'a', 'b', 's', 'q', '_', 's', '.', 'q', 'b', 9, 0,
  /* 1338 */ 's', 'u', 'b', 'u', '_', 's', '.', 'q', 'b', 9, 0,
  /* 1349 */ 'a', 'd', 'd', 'u', '_', 's', '.', 'q', 'b', 9, 0,
  /* 1360 */ 'c', 'm', 'p', 'g', 'd', 'u', '.', 'l', 't', '.', 'q', 'b', 9, 0,
  /* 1374 */ 'c', 'm', 'p', 'g', 'u', '.', 'l', 't', '.', 'q', 'b', 9, 0,
  /* 1387 */ 'c', 'm', 'p', 'u', '.', 'l', 't', '.', 'q', 'b', 9, 0,
  /* 1399 */ 's', 'u', 'b', 'u', '.', 'q', 'b', 9, 0,
  /* 1408 */ 'a', 'd', 'd', 'u', '.', 'q', 'b', 9, 0,
  /* 1417 */ 's', 'h', 'r', 'a', 'v', '.', 'q', 'b', 9, 0,
  /* 1427 */ 's', 'h', 'l', 'l', 'v', '.', 'q', 'b', 9, 0,
  /* 1437 */ 'r', 'e', 'p', 'l', 'v', '.', 'q', 'b', 9, 0,
  /* 1447 */ 's', 'h', 'r', 'l', 'v', '.', 'q', 'b', 9, 0,
  /* 1457 */ 'r', 'a', 'd', 'd', 'u', '.', 'w', '.', 'q', 'b', 9, 0,
  /* 1469 */ 's', 'b', 9, 0,
  /* 1473 */ 'm', 'o', 'd', 's', 'u', 'b', 9, 0,
  /* 1481 */ 'm', 's', 'u', 'b', 9, 0,
  /* 1487 */ 'a', 'd', 'd', 's', 'c', 9, 0,
  /* 1494 */ 'a', 'd', 'd', 'w', 'c', 9, 0,
  /* 1501 */ 'f', 'l', 'o', 'g', '2', '.', 'd', 9, 0,
  /* 1510 */ 'f', 'e', 'x', 'p', '2', '.', 'd', 9, 0,
  /* 1519 */ 'a', 'd', 'd', '_', 'a', '.', 'd', 9, 0,
  /* 1528 */ 'f', 'm', 'i', 'n', '_', 'a', '.', 'd', 9, 0,
  /* 1538 */ 'a', 'd', 'd', 's', '_', 'a', '.', 'd', 9, 0,
  /* 1548 */ 'f', 'm', 'a', 'x', '_', 'a', '.', 'd', 9, 0,
  /* 1558 */ 's', 'r', 'a', '.', 'd', 9, 0,
  /* 1565 */ 'f', 's', 'u', 'b', '.', 'd', 9, 0,
  /* 1573 */ 'f', 'm', 's', 'u', 'b', '.', 'd', 9, 0,
  /* 1582 */ 'n', 'm', 's', 'u', 'b', '.', 'd', 9, 0,
  /* 1591 */ 'n', 'l', 'o', 'c', '.', 'd', 9, 0,
  /* 1599 */ 'n', 'l', 'z', 'c', '.', 'd', 9, 0,
  /* 1607 */ 'f', 'a', 'd', 'd', '.', 'd', 9, 0,
  /* 1615 */ 'f', 'm', 'a', 'd', 'd', '.', 'd', 9, 0,
  /* 1624 */ 'n', 'm', 'a', 'd', 'd', '.', 'd', 9, 0,
  /* 1633 */ 's', 'l', 'd', '.', 'd', 9, 0,
  /* 1640 */ 'p', 'c', 'k', 'o', 'd', '.', 'd', 9, 0,
  /* 1649 */ 'i', 'l', 'v', 'o', 'd', '.', 'd', 9, 0,
  /* 1658 */ 'c', '.', 'n', 'g', 'e', '.', 'd', 9, 0,
  /* 1667 */ 'c', '.', 'l', 'e', '.', 'd', 9, 0,
  /* 1675 */ 'f', 'c', 'l', 'e', '.', 'd', 9, 0,
  /* 1683 */ 'c', '.', 'n', 'g', 'l', 'e', '.', 'd', 9, 0,
  /* 1693 */ 'c', '.', 'o', 'l', 'e', '.', 'd', 9, 0,
  /* 1702 */ 'f', 's', 'l', 'e', '.', 'd', 9, 0,
  /* 1710 */ 'c', '.', 'u', 'l', 'e', '.', 'd', 9, 0,
  /* 1719 */ 'f', 'c', 'u', 'l', 'e', '.', 'd', 9, 0,
  /* 1728 */ 'f', 's', 'u', 'l', 'e', '.', 'd', 9, 0,
  /* 1737 */ 'f', 'c', 'n', 'e', '.', 'd', 9, 0,
  /* 1745 */ 'f', 's', 'n', 'e', '.', 'd', 9, 0,
  /* 1753 */ 'f', 'c', 'u', 'n', 'e', '.', 'd', 9, 0,
  /* 1762 */ 'f', 's', 'u', 'n', 'e', '.', 'd', 9, 0,
  /* 1771 */ 'i', 'n', 's', 'v', 'e', '.', 'd', 9, 0,
  /* 1780 */ 'c', '.', 'f', '.', 'd', 9, 0,
  /* 1787 */ 'f', 'c', 'a', 'f', '.', 'd', 9, 0,
  /* 1795 */ 'f', 's', 'a', 'f', '.', 'd', 9, 0,
  /* 1803 */ 'v', 's', 'h', 'f', '.', 'd', 9, 0,
  /* 1811 */ 'c', '.', 's', 'f', '.', 'd', 9, 0,
  /* 1819 */ 'm', 'o', 'v', 'f', '.', 'd', 9, 0,
  /* 1827 */ 'b', 'n', 'e', 'g', '.', 'd', 9, 0,
  /* 1835 */ 's', 'r', 'a', 'i', '.', 'd', 9, 0,
  /* 1843 */ 's', 'l', 'd', 'i', '.', 'd', 9, 0,
  /* 1851 */ 'b', 'n', 'e', 'g', 'i', '.', 'd', 9, 0,
  /* 1860 */ 's', 'l', 'l', 'i', '.', 'd', 9, 0,
  /* 1868 */ 's', 'r', 'l', 'i', '.', 'd', 9, 0,
  /* 1876 */ 'b', 'i', 'n', 's', 'l', 'i', '.', 'd', 9, 0,
  /* 1886 */ 'c', 'e', 'q', 'i', '.', 'd', 9, 0,
  /* 1894 */ 's', 'r', 'a', 'r', 'i', '.', 'd', 9, 0,
  /* 1903 */ 'b', 'c', 'l', 'r', 'i', '.', 'd', 9, 0,
  /* 1912 */ 's', 'r', 'l', 'r', 'i', '.', 'd', 9, 0,
  /* 1921 */ 'b', 'i', 'n', 's', 'r', 'i', '.', 'd', 9, 0,
  /* 1931 */ 's', 'p', 'l', 'a', 't', 'i', '.', 'd', 9, 0,
  /* 1941 */ 'b', 's', 'e', 't', 'i', '.', 'd', 9, 0,
  /* 1950 */ 's', 'u', 'b', 'v', 'i', '.', 'd', 9, 0,
  /* 1959 */ 'a', 'd', 'd', 'v', 'i', '.', 'd', 9, 0,
  /* 1968 */ 't', 'r', 'u', 'n', 'c', '.', 'l', '.', 'd', 9, 0,
  /* 1979 */ 'r', 'o', 'u', 'n', 'd', '.', 'l', '.', 'd', 9, 0,
  /* 1990 */ 'c', 'e', 'i', 'l', '.', 'l', '.', 'd', 9, 0,
  /* 2000 */ 'f', 'l', 'o', 'o', 'r', '.', 'l', '.', 'd', 9, 0,
  /* 2011 */ 'c', 'v', 't', '.', 'l', '.', 'd', 9, 0,
  /* 2020 */ 'c', '.', 'n', 'g', 'l', '.', 'd', 9, 0,
  /* 2029 */ 's', 'l', 'l', '.', 'd', 9, 0,
  /* 2036 */ 'f', 'e', 'x', 'u', 'p', 'l', '.', 'd', 9, 0,
  /* 2046 */ 'f', 'f', 'q', 'l', '.', 'd', 9, 0,
  /* 2054 */ 's', 'r', 'l', '.', 'd', 9, 0,
  /* 2061 */ 'b', 'i', 'n', 's', 'l', '.', 'd', 9, 0,
  /* 2070 */ 'f', 'm', 'u', 'l', '.', 'd', 9, 0,
  /* 2078 */ 'i', 'l', 'v', 'l', '.', 'd', 9, 0,
  /* 2086 */ 'f', 'm', 'i', 'n', '.', 'd', 9, 0,
  /* 2094 */ 'c', '.', 'u', 'n', '.', 'd', 9, 0,
  /* 2102 */ 'f', 'c', 'u', 'n', '.', 'd', 9, 0,
  /* 2110 */ 'f', 's', 'u', 'n', '.', 'd', 9, 0,
  /* 2118 */ 'm', 'o', 'v', 'n', '.', 'd', 9, 0,
  /* 2126 */ 'f', 'r', 'c', 'p', '.', 'd', 9, 0,
  /* 2134 */ 'c', '.', 'e', 'q', '.', 'd', 9, 0,
  /* 2142 */ 'f', 'c', 'e', 'q', '.', 'd', 9, 0,
  /* 2150 */ 'c', '.', 's', 'e', 'q', '.', 'd', 9, 0,
  /* 2159 */ 'f', 's', 'e', 'q', '.', 'd', 9, 0,
  /* 2167 */ 'c', '.', 'u', 'e', 'q', '.', 'd', 9, 0,
  /* 2176 */ 'f', 'c', 'u', 'e', 'q', '.', 'd', 9, 0,
  /* 2185 */ 'f', 's', 'u', 'e', 'q', '.', 'd', 9, 0,
  /* 2194 */ 's', 'r', 'a', 'r', '.', 'd', 9, 0,
  /* 2202 */ 'b', 'c', 'l', 'r', '.', 'd', 9, 0,
  /* 2210 */ 's', 'r', 'l', 'r', '.', 'd', 9, 0,
  /* 2218 */ 'f', 'c', 'o', 'r', '.', 'd', 9, 0,
  /* 2226 */ 'f', 's', 'o', 'r', '.', 'd', 9, 0,
  /* 2234 */ 'f', 'e', 'x', 'u', 'p', 'r', '.', 'd', 9, 0,
  /* 2244 */ 'f', 'f', 'q', 'r', '.', 'd', 9, 0,
  /* 2252 */ 'b', 'i', 'n', 's', 'r', '.', 'd', 9, 0,
  /* 2261 */ 'i', 'l', 'v', 'r', '.', 'd', 9, 0,
  /* 2269 */ 'c', 'v', 't', '.', 's', '.', 'd', 9, 0,
  /* 2278 */ 'a', 's', 'u', 'b', '_', 's', '.', 'd', 9, 0,
  /* 2288 */ 'h', 's', 'u', 'b', '_', 's', '.', 'd', 9, 0,
  /* 2298 */ 'd', 'p', 's', 'u', 'b', '_', 's', '.', 'd', 9, 0,
  /* 2309 */ 'f', 't', 'r', 'u', 'n', 'c', '_', 's', '.', 'd', 9, 0,
  /* 2321 */ 'h', 'a', 'd', 'd', '_', 's', '.', 'd', 9, 0,
  /* 2331 */ 'd', 'p', 'a', 'd', 'd', '_', 's', '.', 'd', 9, 0,
  /* 2342 */ 'm', 'o', 'd', '_', 's', '.', 'd', 9, 0,
  /* 2351 */ 'c', 'l', 'e', '_', 's', '.', 'd', 9, 0,
  /* 2360 */ 'a', 'v', 'e', '_', 's', '.', 'd', 9, 0,
  /* 2369 */ 'c', 'l', 'e', 'i', '_', 's', '.', 'd', 9, 0,
  /* 2379 */ 'm', 'i', 'n', 'i', '_', 's', '.', 'd', 9, 0,
  /* 2389 */ 'c', 'l', 't', 'i', '_', 's', '.', 'd', 9, 0,
  /* 2399 */ 'm', 'a', 'x', 'i', '_', 's', '.', 'd', 9, 0,
  /* 2409 */ 'm', 'i', 'n', '_', 's', '.', 'd', 9, 0,
  /* 2418 */ 'd', 'o', 't', 'p', '_', 's', '.', 'd', 9, 0,
  /* 2428 */ 'a', 'v', 'e', 'r', '_', 's', '.', 'd', 9, 0,
  /* 2438 */ 's', 'u', 'b', 's', '_', 's', '.', 'd', 9, 0,
  /* 2448 */ 'a', 'd', 'd', 's', '_', 's', '.', 'd', 9, 0,
  /* 2458 */ 's', 'a', 't', '_', 's', '.', 'd', 9, 0,
  /* 2467 */ 'c', 'l', 't', '_', 's', '.', 'd', 9, 0,
  /* 2476 */ 'f', 'f', 'i', 'n', 't', '_', 's', '.', 'd', 9, 0,
  /* 2487 */ 'f', 't', 'i', 'n', 't', '_', 's', '.', 'd', 9, 0,
  /* 2498 */ 's', 'u', 'b', 's', 'u', 'u', '_', 's', '.', 'd', 9, 0,
  /* 2510 */ 'd', 'i', 'v', '_', 's', '.', 'd', 9, 0,
  /* 2519 */ 'm', 'a', 'x', '_', 's', '.', 'd', 9, 0,
  /* 2528 */ 'a', 'b', 's', '.', 'd', 9, 0,
  /* 2535 */ 'f', 'c', 'l', 'a', 's', 's', '.', 'd', 9, 0,
  /* 2545 */ 's', 'p', 'l', 'a', 't', '.', 'd', 9, 0,
  /* 2554 */ 'b', 's', 'e', 't', '.', 'd', 9, 0,
  /* 2562 */ 'c', '.', 'n', 'g', 't', '.', 'd', 9, 0,
  /* 2571 */ 'c', '.', 'l', 't', '.', 'd', 9, 0,
  /* 2579 */ 'f', 'c', 'l', 't', '.', 'd', 9, 0,
  /* 2587 */ 'c', '.', 'o', 'l', 't', '.', 'd', 9, 0,
  /* 2596 */ 'f', 's', 'l', 't', '.', 'd', 9, 0,
  /* 2604 */ 'c', '.', 'u', 'l', 't', '.', 'd', 9, 0,
  /* 2613 */ 'f', 'c', 'u', 'l', 't', '.', 'd', 9, 0,
  /* 2622 */ 'f', 's', 'u', 'l', 't', '.', 'd', 9, 0,
  /* 2631 */ 'p', 'c', 'n', 't', '.', 'd', 9, 0,
  /* 2639 */ 'f', 'r', 'i', 'n', 't', '.', 'd', 9, 0,
  /* 2648 */ 'f', 's', 'q', 'r', 't', '.', 'd', 9, 0,
  /* 2657 */ 'f', 'r', 's', 'q', 'r', 't', '.', 'd', 9, 0,
  /* 2667 */ 's', 't', '.', 'd', 9, 0,
  /* 2673 */ 'm', 'o', 'v', 't', '.', 'd', 9, 0,
  /* 2681 */ 'a', 's', 'u', 'b', '_', 'u', '.', 'd', 9, 0,
  /* 2691 */ 'h', 's', 'u', 'b', '_', 'u', '.', 'd', 9, 0,
  /* 2701 */ 'd', 'p', 's', 'u', 'b', '_', 'u', '.', 'd', 9, 0,
  /* 2712 */ 'f', 't', 'r', 'u', 'n', 'c', '_', 'u', '.', 'd', 9, 0,
  /* 2724 */ 'h', 'a', 'd', 'd', '_', 'u', '.', 'd', 9, 0,
  /* 2734 */ 'd', 'p', 'a', 'd', 'd', '_', 'u', '.', 'd', 9, 0,
  /* 2745 */ 'm', 'o', 'd', '_', 'u', '.', 'd', 9, 0,
  /* 2754 */ 'c', 'l', 'e', '_', 'u', '.', 'd', 9, 0,
  /* 2763 */ 'a', 'v', 'e', '_', 'u', '.', 'd', 9, 0,
  /* 2772 */ 'c', 'l', 'e', 'i', '_', 'u', '.', 'd', 9, 0,
  /* 2782 */ 'm', 'i', 'n', 'i', '_', 'u', '.', 'd', 9, 0,
  /* 2792 */ 'c', 'l', 't', 'i', '_', 'u', '.', 'd', 9, 0,
  /* 2802 */ 'm', 'a', 'x', 'i', '_', 'u', '.', 'd', 9, 0,
  /* 2812 */ 'm', 'i', 'n', '_', 'u', '.', 'd', 9, 0,
  /* 2821 */ 'd', 'o', 't', 'p', '_', 'u', '.', 'd', 9, 0,
  /* 2831 */ 'a', 'v', 'e', 'r', '_', 'u', '.', 'd', 9, 0,
  /* 2841 */ 's', 'u', 'b', 's', '_', 'u', '.', 'd', 9, 0,
  /* 2851 */ 'a', 'd', 'd', 's', '_', 'u', '.', 'd', 9, 0,
  /* 2861 */ 's', 'u', 'b', 's', 'u', 's', '_', 'u', '.', 'd', 9, 0,
  /* 2873 */ 's', 'a', 't', '_', 'u', '.', 'd', 9, 0,
  /* 2882 */ 'c', 'l', 't', '_', 'u', '.', 'd', 9, 0,
  /* 2891 */ 'f', 'f', 'i', 'n', 't', '_', 'u', '.', 'd', 9, 0,
  /* 2902 */ 'f', 't', 'i', 'n', 't', '_', 'u', '.', 'd', 9, 0,
  /* 2913 */ 'd', 'i', 'v', '_', 'u', '.', 'd', 9, 0,
  /* 2922 */ 'm', 'a', 'x', '_', 'u', '.', 'd', 9, 0,
  /* 2931 */ 'm', 's', 'u', 'b', 'v', '.', 'd', 9, 0,
  /* 2940 */ 'm', 'a', 'd', 'd', 'v', '.', 'd', 9, 0,
  /* 2949 */ 'p', 'c', 'k', 'e', 'v', '.', 'd', 9, 0,
  /* 2958 */ 'i', 'l', 'v', 'e', 'v', '.', 'd', 9, 0,
  /* 2967 */ 'f', 'd', 'i', 'v', '.', 'd', 9, 0,
  /* 2975 */ 'm', 'u', 'l', 'v', '.', 'd', 9, 0,
  /* 2983 */ 'm', 'o', 'v', '.', 'd', 9, 0,
  /* 2990 */ 't', 'r', 'u', 'n', 'c', '.', 'w', '.', 'd', 9, 0,
  /* 3001 */ 'r', 'o', 'u', 'n', 'd', '.', 'w', '.', 'd', 9, 0,
  /* 3012 */ 'c', 'e', 'i', 'l', '.', 'w', '.', 'd', 9, 0,
  /* 3022 */ 'f', 'l', 'o', 'o', 'r', '.', 'w', '.', 'd', 9, 0,
  /* 3033 */ 'c', 'v', 't', '.', 'w', '.', 'd', 9, 0,
  /* 3042 */ 'f', 'm', 'a', 'x', '.', 'd', 9, 0,
  /* 3050 */ 'b', 'z', '.', 'd', 9, 0,
  /* 3056 */ 'b', 'n', 'z', '.', 'd', 9, 0,
  /* 3063 */ 'm', 'o', 'v', 'z', '.', 'd', 9, 0,
  /* 3071 */ 's', 'c', 'd', 9, 0,
  /* 3076 */ 'd', 'a', 'd', 'd', 9, 0,
  /* 3082 */ 'm', 'a', 'd', 'd', 9, 0,
  /* 3088 */ 'd', 's', 'h', 'd', 9, 0,
  /* 3094 */ 'l', 'l', 'd', 9, 0,
  /* 3099 */ 'a', 'n', 'd', 9, 0,
  /* 3104 */ 'p', 'r', 'e', 'p', 'e', 'n', 'd', 9, 0,
  /* 3113 */ 'a', 'p', 'p', 'e', 'n', 'd', 9, 0,
  /* 3121 */ 's', 'd', 9, 0,
  /* 3125 */ 't', 'g', 'e', 9, 0,
  /* 3130 */ 'b', 'n', 'e', 9, 0,
  /* 3135 */ 't', 'n', 'e', 9, 0,
  /* 3140 */ 'm', 'o', 'v', 'e', 9, 0,
  /* 3146 */ 'b', 'c', '1', 'f', 9, 0,
  /* 3152 */ 'm', 'o', 'v', 'f', 9, 0,
  /* 3158 */ 'n', 'e', 'g', 9, 0,
  /* 3163 */ 'a', 'd', 'd', '_', 'a', '.', 'h', 9, 0,
  /* 3172 */ 'm', 'i', 'n', '_', 'a', '.', 'h', 9, 0,
  /* 3181 */ 'a', 'd', 'd', 's', '_', 'a', '.', 'h', 9, 0,
  /* 3191 */ 'm', 'a', 'x', '_', 'a', '.', 'h', 9, 0,
  /* 3200 */ 's', 'r', 'a', '.', 'h', 9, 0,
  /* 3207 */ 'n', 'l', 'o', 'c', '.', 'h', 9, 0,
  /* 3215 */ 'n', 'l', 'z', 'c', '.', 'h', 9, 0,
  /* 3223 */ 's', 'l', 'd', '.', 'h', 9, 0,
  /* 3230 */ 'p', 'c', 'k', 'o', 'd', '.', 'h', 9, 0,
  /* 3239 */ 'i', 'l', 'v', 'o', 'd', '.', 'h', 9, 0,
  /* 3248 */ 'i', 'n', 's', 'v', 'e', '.', 'h', 9, 0,
  /* 3257 */ 'v', 's', 'h', 'f', '.', 'h', 9, 0,
  /* 3265 */ 'b', 'n', 'e', 'g', '.', 'h', 9, 0,
  /* 3273 */ 's', 'r', 'a', 'i', '.', 'h', 9, 0,
  /* 3281 */ 's', 'l', 'd', 'i', '.', 'h', 9, 0,
  /* 3289 */ 'b', 'n', 'e', 'g', 'i', '.', 'h', 9, 0,
  /* 3298 */ 's', 'l', 'l', 'i', '.', 'h', 9, 0,
  /* 3306 */ 's', 'r', 'l', 'i', '.', 'h', 9, 0,
  /* 3314 */ 'b', 'i', 'n', 's', 'l', 'i', '.', 'h', 9, 0,
  /* 3324 */ 'c', 'e', 'q', 'i', '.', 'h', 9, 0,
  /* 3332 */ 's', 'r', 'a', 'r', 'i', '.', 'h', 9, 0,
  /* 3341 */ 'b', 'c', 'l', 'r', 'i', '.', 'h', 9, 0,
  /* 3350 */ 's', 'r', 'l', 'r', 'i', '.', 'h', 9, 0,
  /* 3359 */ 'b', 'i', 'n', 's', 'r', 'i', '.', 'h', 9, 0,
  /* 3369 */ 's', 'p', 'l', 'a', 't', 'i', '.', 'h', 9, 0,
  /* 3379 */ 'b', 's', 'e', 't', 'i', '.', 'h', 9, 0,
  /* 3388 */ 's', 'u', 'b', 'v', 'i', '.', 'h', 9, 0,
  /* 3397 */ 'a', 'd', 'd', 'v', 'i', '.', 'h', 9, 0,
  /* 3406 */ 'f', 'i', 'l', 'l', '.', 'h', 9, 0,
  /* 3414 */ 's', 'l', 'l', '.', 'h', 9, 0,
  /* 3421 */ 's', 'r', 'l', '.', 'h', 9, 0,
  /* 3428 */ 'b', 'i', 'n', 's', 'l', '.', 'h', 9, 0,
  /* 3437 */ 'i', 'l', 'v', 'l', '.', 'h', 9, 0,
  /* 3445 */ 'f', 'e', 'x', 'd', 'o', '.', 'h', 9, 0,
  /* 3454 */ 'm', 's', 'u', 'b', '_', 'q', '.', 'h', 9, 0,
  /* 3464 */ 'm', 'a', 'd', 'd', '_', 'q', '.', 'h', 9, 0,
  /* 3474 */ 'm', 'u', 'l', '_', 'q', '.', 'h', 9, 0,
  /* 3483 */ 'm', 's', 'u', 'b', 'r', '_', 'q', '.', 'h', 9, 0,
  /* 3494 */ 'm', 'a', 'd', 'd', 'r', '_', 'q', '.', 'h', 9, 0,
  /* 3505 */ 'm', 'u', 'l', 'r', '_', 'q', '.', 'h', 9, 0,
  /* 3515 */ 'c', 'e', 'q', '.', 'h', 9, 0,
  /* 3522 */ 'f', 't', 'q', '.', 'h', 9, 0,
  /* 3529 */ 's', 'r', 'a', 'r', '.', 'h', 9, 0,
  /* 3537 */ 'b', 'c', 'l', 'r', '.', 'h', 9, 0,
  /* 3545 */ 's', 'r', 'l', 'r', '.', 'h', 9, 0,
  /* 3553 */ 'b', 'i', 'n', 's', 'r', '.', 'h', 9, 0,
  /* 3562 */ 'i', 'l', 'v', 'r', '.', 'h', 9, 0,
  /* 3570 */ 'a', 's', 'u', 'b', '_', 's', '.', 'h', 9, 0,
  /* 3580 */ 'h', 's', 'u', 'b', '_', 's', '.', 'h', 9, 0,
  /* 3590 */ 'd', 'p', 's', 'u', 'b', '_', 's', '.', 'h', 9, 0,
  /* 3601 */ 'h', 'a', 'd', 'd', '_', 's', '.', 'h', 9, 0,
  /* 3611 */ 'd', 'p', 'a', 'd', 'd', '_', 's', '.', 'h', 9, 0,
  /* 3622 */ 'm', 'o', 'd', '_', 's', '.', 'h', 9, 0,
  /* 3631 */ 'c', 'l', 'e', '_', 's', '.', 'h', 9, 0,
  /* 3640 */ 'a', 'v', 'e', '_', 's', '.', 'h', 9, 0,
  /* 3649 */ 'c', 'l', 'e', 'i', '_', 's', '.', 'h', 9, 0,
  /* 3659 */ 'm', 'i', 'n', 'i', '_', 's', '.', 'h', 9, 0,
  /* 3669 */ 'c', 'l', 't', 'i', '_', 's', '.', 'h', 9, 0,
  /* 3679 */ 'm', 'a', 'x', 'i', '_', 's', '.', 'h', 9, 0,
  /* 3689 */ 'm', 'i', 'n', '_', 's', '.', 'h', 9, 0,
  /* 3698 */ 'd', 'o', 't', 'p', '_', 's', '.', 'h', 9, 0,
  /* 3708 */ 'a', 'v', 'e', 'r', '_', 's', '.', 'h', 9, 0,
  /* 3718 */ 'e', 'x', 't', 'r', '_', 's', '.', 'h', 9, 0,
  /* 3728 */ 's', 'u', 'b', 's', '_', 's', '.', 'h', 9, 0,
  /* 3738 */ 'a', 'd', 'd', 's', '_', 's', '.', 'h', 9, 0,
  /* 3748 */ 's', 'a', 't', '_', 's', '.', 'h', 9, 0,
  /* 3757 */ 'c', 'l', 't', '_', 's', '.', 'h', 9, 0,
  /* 3766 */ 's', 'u', 'b', 's', 'u', 'u', '_', 's', '.', 'h', 9, 0,
  /* 3778 */ 'd', 'i', 'v', '_', 's', '.', 'h', 9, 0,
  /* 3787 */ 'e', 'x', 't', 'r', 'v', '_', 's', '.', 'h', 9, 0,
  /* 3798 */ 'm', 'a', 'x', '_', 's', '.', 'h', 9, 0,
  /* 3807 */ 'c', 'o', 'p', 'y', '_', 's', '.', 'h', 9, 0,
  /* 3817 */ 's', 'p', 'l', 'a', 't', '.', 'h', 9, 0,
  /* 3826 */ 'b', 's', 'e', 't', '.', 'h', 9, 0,
  /* 3834 */ 'p', 'c', 'n', 't', '.', 'h', 9, 0,
  /* 3842 */ 'i', 'n', 's', 'e', 'r', 't', '.', 'h', 9, 0,
  /* 3852 */ 's', 't', '.', 'h', 9, 0,
  /* 3858 */ 'a', 's', 'u', 'b', '_', 'u', '.', 'h', 9, 0,
  /* 3868 */ 'h', 's', 'u', 'b', '_', 'u', '.', 'h', 9, 0,
  /* 3878 */ 'd', 'p', 's', 'u', 'b', '_', 'u', '.', 'h', 9, 0,
  /* 3889 */ 'h', 'a', 'd', 'd', '_', 'u', '.', 'h', 9, 0,
  /* 3899 */ 'd', 'p', 'a', 'd', 'd', '_', 'u', '.', 'h', 9, 0,
  /* 3910 */ 'm', 'o', 'd', '_', 'u', '.', 'h', 9, 0,
  /* 3919 */ 'c', 'l', 'e', '_', 'u', '.', 'h', 9, 0,
  /* 3928 */ 'a', 'v', 'e', '_', 'u', '.', 'h', 9, 0,
  /* 3937 */ 'c', 'l', 'e', 'i', '_', 'u', '.', 'h', 9, 0,
  /* 3947 */ 'm', 'i', 'n', 'i', '_', 'u', '.', 'h', 9, 0,
  /* 3957 */ 'c', 'l', 't', 'i', '_', 'u', '.', 'h', 9, 0,
  /* 3967 */ 'm', 'a', 'x', 'i', '_', 'u', '.', 'h', 9, 0,
  /* 3977 */ 'm', 'i', 'n', '_', 'u', '.', 'h', 9, 0,
  /* 3986 */ 'd', 'o', 't', 'p', '_', 'u', '.', 'h', 9, 0,
  /* 3996 */ 'a', 'v', 'e', 'r', '_', 'u', '.', 'h', 9, 0,
  /* 4006 */ 's', 'u', 'b', 's', '_', 'u', '.', 'h', 9, 0,
  /* 4016 */ 'a', 'd', 'd', 's', '_', 'u', '.', 'h', 9, 0,
  /* 4026 */ 's', 'u', 'b', 's', 'u', 's', '_', 'u', '.', 'h', 9, 0,
  /* 4038 */ 's', 'a', 't', '_', 'u', '.', 'h', 9, 0,
  /* 4047 */ 'c', 'l', 't', '_', 'u', '.', 'h', 9, 0,
  /* 4056 */ 'd', 'i', 'v', '_', 'u', '.', 'h', 9, 0,
  /* 4065 */ 'm', 'a', 'x', '_', 'u', '.', 'h', 9, 0,
  /* 4074 */ 'c', 'o', 'p', 'y', '_', 'u', '.', 'h', 9, 0,
  /* 4084 */ 'm', 's', 'u', 'b', 'v', '.', 'h', 9, 0,
  /* 4093 */ 'm', 'a', 'd', 'd', 'v', '.', 'h', 9, 0,
  /* 4102 */ 'p', 'c', 'k', 'e', 'v', '.', 'h', 9, 0,
  /* 4111 */ 'i', 'l', 'v', 'e', 'v', '.', 'h', 9, 0,
  /* 4120 */ 'm', 'u', 'l', 'v', '.', 'h', 9, 0,
  /* 4128 */ 'b', 'z', '.', 'h', 9, 0,
  /* 4134 */ 'b', 'n', 'z', '.', 'h', 9, 0,
  /* 4141 */ 'd', 's', 'b', 'h', 9, 0,
  /* 4147 */ 'w', 's', 'b', 'h', 9, 0,
  /* 4153 */ 's', 'e', 'h', 9, 0,
  /* 4158 */ 'l', 'h', 9, 0,
  /* 4162 */ 's', 'h', 'r', 'a', '.', 'p', 'h', 9, 0,
  /* 4171 */ 'p', 'r', 'e', 'c', 'r', 'q', '.', 'q', 'b', '.', 'p', 'h', 9, 0,
  /* 4185 */ 'p', 'r', 'e', 'c', 'r', '.', 'q', 'b', '.', 'p', 'h', 9, 0,
  /* 4198 */ 'p', 'r', 'e', 'c', 'r', 'q', 'u', '_', 's', '.', 'q', 'b', '.', 'p', 'h', 9, 0,
  /* 4215 */ 'c', 'm', 'p', '.', 'l', 'e', '.', 'p', 'h', 9, 0,
  /* 4226 */ 's', 'u', 'b', 'q', 'h', '.', 'p', 'h', 9, 0,
  /* 4236 */ 'a', 'd', 'd', 'q', 'h', '.', 'p', 'h', 9, 0,
  /* 4246 */ 'p', 'i', 'c', 'k', '.', 'p', 'h', 9, 0,
  /* 4255 */ 's', 'h', 'l', 'l', '.', 'p', 'h', 9, 0,
  /* 4264 */ 'r', 'e', 'p', 'l', '.', 'p', 'h', 9, 0,
  /* 4273 */ 's', 'h', 'r', 'l', '.', 'p', 'h', 9, 0,
  /* 4282 */ 'p', 'a', 'c', 'k', 'r', 'l', '.', 'p', 'h', 9, 0,
  /* 4293 */ 'm', 'u', 'l', '.', 'p', 'h', 9, 0,
  /* 4301 */ 's', 'u', 'b', 'q', '.', 'p', 'h', 9, 0,
  /* 4310 */ 'a', 'd', 'd', 'q', '.', 'p', 'h', 9, 0,
  /* 4319 */ 'c', 'm', 'p', '.', 'e', 'q', '.', 'p', 'h', 9, 0,
  /* 4330 */ 's', 'h', 'r', 'a', '_', 'r', '.', 'p', 'h', 9, 0,
  /* 4341 */ 's', 'u', 'b', 'q', 'h', '_', 'r', '.', 'p', 'h', 9, 0,
  /* 4353 */ 'a', 'd', 'd', 'q', 'h', '_', 'r', '.', 'p', 'h', 9, 0,
  /* 4365 */ 's', 'h', 'r', 'a', 'v', '_', 'r', '.', 'p', 'h', 9, 0,
  /* 4377 */ 's', 'h', 'l', 'l', '_', 's', '.', 'p', 'h', 9, 0,
  /* 4388 */ 'm', 'u', 'l', '_', 's', '.', 'p', 'h', 9, 0,
  /* 4398 */ 's', 'u', 'b', 'q', '_', 's', '.', 'p', 'h', 9, 0,
  /* 4409 */ 'a', 'd', 'd', 'q', '_', 's', '.', 'p', 'h', 9, 0,
  /* 4420 */ 'm', 'u', 'l', 'q', '_', 's', '.', 'p', 'h', 9, 0,
  /* 4431 */ 'a', 'b', 's', 'q', '_', 's', '.', 'p', 'h', 9, 0,
  /* 4442 */ 's', 'u', 'b', 'u', '_', 's', '.', 'p', 'h', 9, 0,
  /* 4453 */ 'a', 'd', 'd', 'u', '_', 's', '.', 'p', 'h', 9, 0,
  /* 4464 */ 's', 'h', 'l', 'l', 'v', '_', 's', '.', 'p', 'h', 9, 0,
  /* 4476 */ 'm', 'u', 'l', 'q', '_', 'r', 's', '.', 'p', 'h', 9, 0,
  /* 4488 */ 'c', 'm', 'p', '.', 'l', 't', '.', 'p', 'h', 9, 0,
  /* 4499 */ 's', 'u', 'b', 'u', '.', 'p', 'h', 9, 0,
  /* 4508 */ 'a', 'd', 'd', 'u', '.', 'p', 'h', 9, 0,
  /* 4517 */ 's', 'h', 'r', 'a', 'v', '.', 'p', 'h', 9, 0,
  /* 4527 */ 's', 'h', 'l', 'l', 'v', '.', 'p', 'h', 9, 0,
  /* 4537 */ 'r', 'e', 'p', 'l', 'v', '.', 'p', 'h', 9, 0,
  /* 4547 */ 's', 'h', 'r', 'l', 'v', '.', 'p', 'h', 9, 0,
  /* 4557 */ 'd', 'p', 'a', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4567 */ 'd', 'p', 'a', 'q', 'x', '_', 's', 'a', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4582 */ 'd', 'p', 's', 'q', 'x', '_', 's', 'a', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4597 */ 'm', 'u', 'l', 's', 'a', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4609 */ 'd', 'p', 'a', 'q', '_', 's', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4622 */ 'm', 'u', 'l', 's', 'a', 'q', '_', 's', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4637 */ 'd', 'p', 's', 'q', '_', 's', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4650 */ 'd', 'p', 'a', 'q', 'x', '_', 's', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4664 */ 'd', 'p', 's', 'q', 'x', '_', 's', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4678 */ 'd', 'p', 's', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4688 */ 'd', 'p', 'a', 'x', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4699 */ 'd', 'p', 's', 'x', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4710 */ 's', 'h', 9, 0,
  /* 4714 */ 'd', 'a', 'd', 'd', 'i', 9, 0,
  /* 4721 */ 'a', 'n', 'd', 'i', 9, 0,
  /* 4727 */ 't', 'g', 'e', 'i', 9, 0,
  /* 4733 */ 't', 'n', 'e', 'i', 9, 0,
  /* 4739 */ 'm', 'f', 'h', 'i', 9, 0,
  /* 4745 */ 'm', 't', 'h', 'i', 9, 0,
  /* 4751 */ '.', 'a', 'l', 'i', 'g', 'n', 32, '2', 10, 9, 'l', 'i', 9, 0,
  /* 4765 */ 'c', 'm', 'p', 'i', 9, 0,
  /* 4771 */ 't', 'e', 'q', 'i', 9, 0,
  /* 4777 */ 'x', 'o', 'r', 'i', 9, 0,
  /* 4783 */ 's', 'l', 't', 'i', 9, 0,
  /* 4789 */ 't', 'l', 't', 'i', 9, 0,
  /* 4795 */ 'l', 'u', 'i', 9, 0,
  /* 4800 */ 'j', 9, 0,
  /* 4803 */ 'b', 'r', 'e', 'a', 'k', 9, 0,
  /* 4810 */ 'c', 'v', 't', '.', 'd', '.', 'l', 9, 0,
  /* 4819 */ 'c', 'v', 't', '.', 's', '.', 'l', 9, 0,
  /* 4828 */ 'j', 'a', 'l', 9, 0,
  /* 4833 */ 'b', 'g', 'e', 'z', 'a', 'l', 9, 0,
  /* 4841 */ 'b', 'l', 't', 'z', 'a', 'l', 9, 0,
  /* 4849 */ 'd', 'p', 'a', 'u', '.', 'h', '.', 'q', 'b', 'l', 9, 0,
  /* 4861 */ 'd', 'p', 's', 'u', '.', 'h', '.', 'q', 'b', 'l', 9, 0,
  /* 4873 */ 'm', 'u', 'l', 'e', 'u', '_', 's', '.', 'p', 'h', '.', 'q', 'b', 'l', 9, 0,
  /* 4889 */ 'p', 'r', 'e', 'c', 'e', 'u', '.', 'p', 'h', '.', 'q', 'b', 'l', 9, 0,
  /* 4904 */ 'p', 'r', 'e', 'c', 'e', 'q', 'u', '.', 'p', 'h', '.', 'q', 'b', 'l', 9, 0,
  /* 4920 */ 'l', 'd', 'l', 9, 0,
  /* 4925 */ 's', 'd', 'l', 9, 0,
  /* 4930 */ 'm', 'a', 'q', '_', 's', 'a', '.', 'w', '.', 'p', 'h', 'l', 9, 0,
  /* 4944 */ 'p', 'r', 'e', 'c', 'e', 'q', '.', 'w', '.', 'p', 'h', 'l', 9, 0,
  /* 4958 */ 'm', 'a', 'q', '_', 's', '.', 'w', '.', 'p', 'h', 'l', 9, 0,
  /* 4971 */ 'm', 'u', 'l', 'e', 'q', '_', 's', '.', 'w', '.', 'p', 'h', 'l', 9, 0,
  /* 4986 */ 's', 'y', 's', 'c', 'a', 'l', 'l', 9, 0,
  /* 4995 */ 'd', 's', 'l', 'l', 9, 0,
  /* 5001 */ 'd', 's', 'r', 'l', 9, 0,
  /* 5007 */ 'm', 'u', 'l', 9, 0,
  /* 5012 */ 'l', 'w', 'l', 9, 0,
  /* 5017 */ 's', 'w', 'l', 9, 0,
  /* 5022 */ 'b', 'a', 'l', 'i', 'g', 'n', 9, 0,
  /* 5030 */ 'm', 'o', 'v', 'n', 9, 0,
  /* 5036 */ 'd', 'c', 'l', 'o', 9, 0,
  /* 5042 */ 'm', 'f', 'l', 'o', 9, 0,
  /* 5048 */ 's', 'h', 'i', 'l', 'o', 9, 0,
  /* 5055 */ 'm', 't', 'l', 'o', 9, 0,
  /* 5061 */ 'e', 'x', 't', 'p', 'd', 'p', 9, 0,
  /* 5069 */ 'm', 't', 'h', 'l', 'i', 'p', 9, 0,
  /* 5077 */ 'c', 'm', 'p', 9, 0,
  /* 5082 */ 'l', 'o', 'a', 'd', '_', 'c', 'c', 'o', 'n', 'd', '_', 'd', 's', 'p', 9, 0,
  /* 5098 */ 's', 't', 'o', 'r', 'e', '_', 'c', 'c', 'o', 'n', 'd', '_', 'd', 's', 'p', 9, 0,
  /* 5115 */ 'r', 'd', 'd', 's', 'p', 9, 0,
  /* 5122 */ 'w', 'r', 'd', 's', 'p', 9, 0,
  /* 5129 */ 'e', 'x', 't', 'p', 9, 0,
  /* 5135 */ 'b', 'e', 'q', 9, 0,
  /* 5140 */ 't', 'e', 'q', 9, 0,
  /* 5145 */ 'd', 'p', 'a', 'u', '.', 'h', '.', 'q', 'b', 'r', 9, 0,
  /* 5157 */ 'd', 'p', 's', 'u', '.', 'h', '.', 'q', 'b', 'r', 9, 0,
  /* 5169 */ 'm', 'u', 'l', 'e', 'u', '_', 's', '.', 'p', 'h', '.', 'q', 'b', 'r', 9, 0,
  /* 5185 */ 'p', 'r', 'e', 'c', 'e', 'u', '.', 'p', 'h', '.', 'q', 'b', 'r', 9, 0,
  /* 5200 */ 'p', 'r', 'e', 'c', 'e', 'q', 'u', '.', 'p', 'h', '.', 'q', 'b', 'r', 9, 0,
  /* 5216 */ 'l', 'd', 'r', 9, 0,
  /* 5221 */ 's', 'd', 'r', 9, 0,
  /* 5226 */ 'm', 'a', 'q', '_', 's', 'a', '.', 'w', '.', 'p', 'h', 'r', 9, 0,
  /* 5240 */ 'p', 'r', 'e', 'c', 'e', 'q', '.', 'w', '.', 'p', 'h', 'r', 9, 0,
  /* 5254 */ 'm', 'a', 'q', '_', 's', '.', 'w', '.', 'p', 'h', 'r', 9, 0,
  /* 5267 */ 'm', 'u', 'l', 'e', 'q', '_', 's', '.', 'w', '.', 'p', 'h', 'r', 9, 0,
  /* 5282 */ 'j', 'r', 9, 0,
  /* 5286 */ 'j', 'a', 'l', 'r', 9, 0,
  /* 5292 */ 'n', 'o', 'r', 9, 0,
  /* 5297 */ 'x', 'o', 'r', 9, 0,
  /* 5302 */ 'd', 'r', 'o', 't', 'r', 9, 0,
  /* 5309 */ 'r', 'd', 'h', 'w', 'r', 9, 0,
  /* 5316 */ 'l', 'w', 'r', 9, 0,
  /* 5321 */ 's', 'w', 'r', 9, 0,
  /* 5326 */ 'n', 'm', 's', 'u', 'b', '.', 's', 9, 0,
  /* 5335 */ 'c', 'v', 't', '.', 'd', '.', 's', 9, 0,
  /* 5344 */ 'n', 'm', 'a', 'd', 'd', '.', 's', 9, 0,
  /* 5353 */ 'c', '.', 'n', 'g', 'e', '.', 's', 9, 0,
  /* 5362 */ 'c', '.', 'l', 'e', '.', 's', 9, 0,
  /* 5370 */ 'c', '.', 'n', 'g', 'l', 'e', '.', 's', 9, 0,
  /* 5380 */ 'c', '.', 'o', 'l', 'e', '.', 's', 9, 0,
  /* 5389 */ 'c', '.', 'u', 'l', 'e', '.', 's', 9, 0,
  /* 5398 */ 'c', '.', 'f', '.', 's', 9, 0,
  /* 5405 */ 'c', '.', 's', 'f', '.', 's', 9, 0,
  /* 5413 */ 'm', 'o', 'v', 'f', '.', 's', 9, 0,
  /* 5421 */ 'n', 'e', 'g', '.', 's', 9, 0,
  /* 5428 */ 't', 'r', 'u', 'n', 'c', '.', 'l', '.', 's', 9, 0,
  /* 5439 */ 'r', 'o', 'u', 'n', 'd', '.', 'l', '.', 's', 9, 0,
  /* 5450 */ 'c', 'e', 'i', 'l', '.', 'l', '.', 's', 9, 0,
  /* 5460 */ 'f', 'l', 'o', 'o', 'r', '.', 'l', '.', 's', 9, 0,
  /* 5471 */ 'c', 'v', 't', '.', 'l', '.', 's', 9, 0,
  /* 5480 */ 'c', '.', 'n', 'g', 'l', '.', 's', 9, 0,
  /* 5489 */ 'm', 'u', 'l', '.', 's', 9, 0,
  /* 5496 */ 'c', '.', 'u', 'n', '.', 's', 9, 0,
  /* 5504 */ 'm', 'o', 'v', 'n', '.', 's', 9, 0,
  /* 5512 */ 'c', '.', 'e', 'q', '.', 's', 9, 0,
  /* 5520 */ 'c', '.', 's', 'e', 'q', '.', 's', 9, 0,
  /* 5529 */ 'c', '.', 'u', 'e', 'q', '.', 's', 9, 0,
  /* 5538 */ 'a', 'b', 's', '.', 's', 9, 0,
  /* 5545 */ 'c', '.', 'n', 'g', 't', '.', 's', 9, 0,
  /* 5554 */ 'c', '.', 'l', 't', '.', 's', 9, 0,
  /* 5562 */ 'c', '.', 'o', 'l', 't', '.', 's', 9, 0,
  /* 5571 */ 'c', '.', 'u', 'l', 't', '.', 's', 9, 0,
  /* 5580 */ 's', 'q', 'r', 't', '.', 's', 9, 0,
  /* 5588 */ 'm', 'o', 'v', 't', '.', 's', 9, 0,
  /* 5596 */ 'd', 'i', 'v', '.', 's', 9, 0,
  /* 5603 */ 'm', 'o', 'v', '.', 's', 9, 0,
  /* 5610 */ 't', 'r', 'u', 'n', 'c', '.', 'w', '.', 's', 9, 0,
  /* 5621 */ 'r', 'o', 'u', 'n', 'd', '.', 'w', '.', 's', 9, 0,
  /* 5632 */ 'c', 'e', 'i', 'l', '.', 'w', '.', 's', 9, 0,
  /* 5642 */ 'f', 'l', 'o', 'o', 'r', '.', 'w', '.', 's', 9, 0,
  /* 5653 */ 'c', 'v', 't', '.', 'w', '.', 's', 9, 0,
  /* 5662 */ 'm', 'o', 'v', 'z', '.', 's', 9, 0,
  /* 5670 */ 'b', 'c', '1', 't', 9, 0,
  /* 5676 */ 's', 'l', 't', 9, 0,
  /* 5681 */ 't', 'l', 't', 9, 0,
  /* 5686 */ 'd', 'm', 'u', 'l', 't', 9, 0,
  /* 5693 */ 'n', 'o', 't', 9, 0,
  /* 5698 */ 'm', 'o', 'v', 't', 9, 0,
  /* 5704 */ 'l', 'b', 'u', 9, 0,
  /* 5709 */ 'd', 's', 'u', 'b', 'u', 9, 0,
  /* 5716 */ 'm', 's', 'u', 'b', 'u', 9, 0,
  /* 5723 */ 'd', 'a', 'd', 'd', 'u', 9, 0,
  /* 5730 */ 'm', 'a', 'd', 'd', 'u', 9, 0,
  /* 5737 */ 't', 'g', 'e', 'u', 9, 0,
  /* 5743 */ 'l', 'h', 'u', 9, 0,
  /* 5748 */ 'd', 'a', 'd', 'd', 'i', 'u', 9, 0,
  /* 5756 */ 't', 'g', 'e', 'i', 'u', 9, 0,
  /* 5763 */ 's', 'l', 't', 'i', 'u', 9, 0,
  /* 5770 */ 't', 'l', 't', 'i', 'u', 9, 0,
  /* 5777 */ 's', 'l', 't', 'u', 9, 0,
  /* 5783 */ 't', 'l', 't', 'u', 9, 0,
  /* 5789 */ 'd', 'm', 'u', 'l', 't', 'u', 9, 0,
  /* 5797 */ 'l', 'w', 'u', 9, 0,
  /* 5802 */ 'a', 'n', 'd', '.', 'v', 9, 0,
  /* 5809 */ 'm', 'o', 'v', 'e', '.', 'v', 9, 0,
  /* 5817 */ 'b', 's', 'e', 'l', '.', 'v', 9, 0,
  /* 5825 */ 'n', 'o', 'r', '.', 'v', 9, 0,
  /* 5832 */ 'x', 'o', 'r', '.', 'v', 9, 0,
  /* 5839 */ 'b', 'z', '.', 'v', 9, 0,
  /* 5845 */ 'b', 'm', 'z', '.', 'v', 9, 0,
  /* 5852 */ 'b', 'n', 'z', '.', 'v', 9, 0,
  /* 5859 */ 'b', 'm', 'n', 'z', '.', 'v', 9, 0,
  /* 5867 */ 'd', 's', 'r', 'a', 'v', 9, 0,
  /* 5874 */ 'b', 'i', 't', 'r', 'e', 'v', 9, 0,
  /* 5882 */ 'd', 's', 'l', 'l', 'v', 9, 0,
  /* 5889 */ 'd', 's', 'r', 'l', 'v', 9, 0,
  /* 5896 */ 's', 'h', 'i', 'l', 'o', 'v', 9, 0,
  /* 5904 */ 'e', 'x', 't', 'p', 'd', 'p', 'v', 9, 0,
  /* 5913 */ 'e', 'x', 't', 'p', 'v', 9, 0,
  /* 5920 */ 'd', 'r', 'o', 't', 'r', 'v', 9, 0,
  /* 5928 */ 'i', 'n', 's', 'v', 9, 0,
  /* 5934 */ 'f', 'l', 'o', 'g', '2', '.', 'w', 9, 0,
  /* 5943 */ 'f', 'e', 'x', 'p', '2', '.', 'w', 9, 0,
  /* 5952 */ 'a', 'd', 'd', '_', 'a', '.', 'w', 9, 0,
  /* 5961 */ 'f', 'm', 'i', 'n', '_', 'a', '.', 'w', 9, 0,
  /* 5971 */ 'a', 'd', 'd', 's', '_', 'a', '.', 'w', 9, 0,
  /* 5981 */ 'f', 'm', 'a', 'x', '_', 'a', '.', 'w', 9, 0,
  /* 5991 */ 's', 'r', 'a', '.', 'w', 9, 0,
  /* 5998 */ 'f', 's', 'u', 'b', '.', 'w', 9, 0,
  /* 6006 */ 'f', 'm', 's', 'u', 'b', '.', 'w', 9, 0,
  /* 6015 */ 'n', 'l', 'o', 'c', '.', 'w', 9, 0,
  /* 6023 */ 'n', 'l', 'z', 'c', '.', 'w', 9, 0,
  /* 6031 */ 'c', 'v', 't', '.', 'd', '.', 'w', 9, 0,
  /* 6040 */ 'f', 'a', 'd', 'd', '.', 'w', 9, 0,
  /* 6048 */ 'f', 'm', 'a', 'd', 'd', '.', 'w', 9, 0,
  /* 6057 */ 's', 'l', 'd', '.', 'w', 9, 0,
  /* 6064 */ 'p', 'c', 'k', 'o', 'd', '.', 'w', 9, 0,
  /* 6073 */ 'i', 'l', 'v', 'o', 'd', '.', 'w', 9, 0,
  /* 6082 */ 'f', 'c', 'l', 'e', '.', 'w', 9, 0,
  /* 6090 */ 'f', 's', 'l', 'e', '.', 'w', 9, 0,
  /* 6098 */ 'f', 'c', 'u', 'l', 'e', '.', 'w', 9, 0,
  /* 6107 */ 'f', 's', 'u', 'l', 'e', '.', 'w', 9, 0,
  /* 6116 */ 'f', 'c', 'n', 'e', '.', 'w', 9, 0,
  /* 6124 */ 'f', 's', 'n', 'e', '.', 'w', 9, 0,
  /* 6132 */ 'f', 'c', 'u', 'n', 'e', '.', 'w', 9, 0,
  /* 6141 */ 'f', 's', 'u', 'n', 'e', '.', 'w', 9, 0,
  /* 6150 */ 'i', 'n', 's', 'v', 'e', '.', 'w', 9, 0,
  /* 6159 */ 'f', 'c', 'a', 'f', '.', 'w', 9, 0,
  /* 6167 */ 'f', 's', 'a', 'f', '.', 'w', 9, 0,
  /* 6175 */ 'v', 's', 'h', 'f', '.', 'w', 9, 0,
  /* 6183 */ 'b', 'n', 'e', 'g', '.', 'w', 9, 0,
  /* 6191 */ 'p', 'r', 'e', 'c', 'r', '_', 's', 'r', 'a', '.', 'p', 'h', '.', 'w', 9, 0,
  /* 6207 */ 'p', 'r', 'e', 'c', 'r', 'q', '.', 'p', 'h', '.', 'w', 9, 0,
  /* 6220 */ 'p', 'r', 'e', 'c', 'r', '_', 's', 'r', 'a', '_', 'r', '.', 'p', 'h', '.', 'w', 9, 0,
  /* 6238 */ 'p', 'r', 'e', 'c', 'r', 'q', '_', 'r', 's', '.', 'p', 'h', '.', 'w', 9, 0,
  /* 6254 */ 's', 'u', 'b', 'q', 'h', '.', 'w', 9, 0,
  /* 6263 */ 'a', 'd', 'd', 'q', 'h', '.', 'w', 9, 0,
  /* 6272 */ 's', 'r', 'a', 'i', '.', 'w', 9, 0,
  /* 6280 */ 's', 'l', 'd', 'i', '.', 'w', 9, 0,
  /* 6288 */ 'b', 'n', 'e', 'g', 'i', '.', 'w', 9, 0,
  /* 6297 */ 's', 'l', 'l', 'i', '.', 'w', 9, 0,
  /* 6305 */ 's', 'r', 'l', 'i', '.', 'w', 9, 0,
  /* 6313 */ 'b', 'i', 'n', 's', 'l', 'i', '.', 'w', 9, 0,
  /* 6323 */ 'c', 'e', 'q', 'i', '.', 'w', 9, 0,
  /* 6331 */ 's', 'r', 'a', 'r', 'i', '.', 'w', 9, 0,
  /* 6340 */ 'b', 'c', 'l', 'r', 'i', '.', 'w', 9, 0,
  /* 6349 */ 's', 'r', 'l', 'r', 'i', '.', 'w', 9, 0,
  /* 6358 */ 'b', 'i', 'n', 's', 'r', 'i', '.', 'w', 9, 0,
  /* 6368 */ 's', 'p', 'l', 'a', 't', 'i', '.', 'w', 9, 0,
  /* 6378 */ 'b', 's', 'e', 't', 'i', '.', 'w', 9, 0,
  /* 6387 */ 's', 'u', 'b', 'v', 'i', '.', 'w', 9, 0,
  /* 6396 */ 'a', 'd', 'd', 'v', 'i', '.', 'w', 9, 0,
  /* 6405 */ 'd', 'p', 'a', 'q', '_', 's', 'a', '.', 'l', '.', 'w', 9, 0,
  /* 6418 */ 'd', 'p', 's', 'q', '_', 's', 'a', '.', 'l', '.', 'w', 9, 0,
  /* 6431 */ 'f', 'i', 'l', 'l', '.', 'w', 9, 0,
  /* 6439 */ 's', 'l', 'l', '.', 'w', 9, 0,
  /* 6446 */ 'f', 'e', 'x', 'u', 'p', 'l', '.', 'w', 9, 0,
  /* 6456 */ 'f', 'f', 'q', 'l', '.', 'w', 9, 0,
  /* 6464 */ 's', 'r', 'l', '.', 'w', 9, 0,
  /* 6471 */ 'b', 'i', 'n', 's', 'l', '.', 'w', 9, 0,
  /* 6480 */ 'f', 'm', 'u', 'l', '.', 'w', 9, 0,
  /* 6488 */ 'i', 'l', 'v', 'l', '.', 'w', 9, 0,
  /* 6496 */ 'f', 'm', 'i', 'n', '.', 'w', 9, 0,
  /* 6504 */ 'f', 'c', 'u', 'n', '.', 'w', 9, 0,
  /* 6512 */ 'f', 's', 'u', 'n', '.', 'w', 9, 0,
  /* 6520 */ 'f', 'e', 'x', 'd', 'o', '.', 'w', 9, 0,
  /* 6529 */ 'f', 'r', 'c', 'p', '.', 'w', 9, 0,
  /* 6537 */ 'm', 's', 'u', 'b', '_', 'q', '.', 'w', 9, 0,
  /* 6547 */ 'm', 'a', 'd', 'd', '_', 'q', '.', 'w', 9, 0,
  /* 6557 */ 'm', 'u', 'l', '_', 'q', '.', 'w', 9, 0,
  /* 6566 */ 'm', 's', 'u', 'b', 'r', '_', 'q', '.', 'w', 9, 0,
  /* 6577 */ 'm', 'a', 'd', 'd', 'r', '_', 'q', '.', 'w', 9, 0,
  /* 6588 */ 'm', 'u', 'l', 'r', '_', 'q', '.', 'w', 9, 0,
  /* 6598 */ 'f', 'c', 'e', 'q', '.', 'w', 9, 0,
  /* 6606 */ 'f', 's', 'e', 'q', '.', 'w', 9, 0,
  /* 6614 */ 'f', 'c', 'u', 'e', 'q', '.', 'w', 9, 0,
  /* 6623 */ 'f', 's', 'u', 'e', 'q', '.', 'w', 9, 0,
  /* 6632 */ 'f', 't', 'q', '.', 'w', 9, 0,
  /* 6639 */ 's', 'h', 'r', 'a', '_', 'r', '.', 'w', 9, 0,
  /* 6649 */ 's', 'u', 'b', 'q', 'h', '_', 'r', '.', 'w', 9, 0,
  /* 6660 */ 'a', 'd', 'd', 'q', 'h', '_', 'r', '.', 'w', 9, 0,
  /* 6671 */ 'e', 'x', 't', 'r', '_', 'r', '.', 'w', 9, 0,
  /* 6681 */ 's', 'h', 'r', 'a', 'v', '_', 'r', '.', 'w', 9, 0,
  /* 6692 */ 'e', 'x', 't', 'r', 'v', '_', 'r', '.', 'w', 9, 0,
  /* 6703 */ 's', 'r', 'a', 'r', '.', 'w', 9, 0,
  /* 6711 */ 'b', 'c', 'l', 'r', '.', 'w', 9, 0,
  /* 6719 */ 's', 'r', 'l', 'r', '.', 'w', 9, 0,
  /* 6727 */ 'f', 'c', 'o', 'r', '.', 'w', 9, 0,
  /* 6735 */ 'f', 's', 'o', 'r', '.', 'w', 9, 0,
  /* 6743 */ 'f', 'e', 'x', 'u', 'p', 'r', '.', 'w', 9, 0,
  /* 6753 */ 'f', 'f', 'q', 'r', '.', 'w', 9, 0,
  /* 6761 */ 'b', 'i', 'n', 's', 'r', '.', 'w', 9, 0,
  /* 6770 */ 'e', 'x', 't', 'r', '.', 'w', 9, 0,
  /* 6778 */ 'i', 'l', 'v', 'r', '.', 'w', 9, 0,
  /* 6786 */ 'c', 'v', 't', '.', 's', '.', 'w', 9, 0,
  /* 6795 */ 'a', 's', 'u', 'b', '_', 's', '.', 'w', 9, 0,
  /* 6805 */ 'h', 's', 'u', 'b', '_', 's', '.', 'w', 9, 0,
  /* 6815 */ 'd', 'p', 's', 'u', 'b', '_', 's', '.', 'w', 9, 0,
  /* 6826 */ 'f', 't', 'r', 'u', 'n', 'c', '_', 's', '.', 'w', 9, 0,
  /* 6838 */ 'h', 'a', 'd', 'd', '_', 's', '.', 'w', 9, 0,
  /* 6848 */ 'd', 'p', 'a', 'd', 'd', '_', 's', '.', 'w', 9, 0,
  /* 6859 */ 'm', 'o', 'd', '_', 's', '.', 'w', 9, 0,
  /* 6868 */ 'c', 'l', 'e', '_', 's', '.', 'w', 9, 0,
  /* 6877 */ 'a', 'v', 'e', '_', 's', '.', 'w', 9, 0,
  /* 6886 */ 'c', 'l', 'e', 'i', '_', 's', '.', 'w', 9, 0,
  /* 6896 */ 'm', 'i', 'n', 'i', '_', 's', '.', 'w', 9, 0,
  /* 6906 */ 'c', 'l', 't', 'i', '_', 's', '.', 'w', 9, 0,
  /* 6916 */ 'm', 'a', 'x', 'i', '_', 's', '.', 'w', 9, 0,
  /* 6926 */ 's', 'h', 'l', 'l', '_', 's', '.', 'w', 9, 0,
  /* 6936 */ 'm', 'i', 'n', '_', 's', '.', 'w', 9, 0,
  /* 6945 */ 'd', 'o', 't', 'p', '_', 's', '.', 'w', 9, 0,
  /* 6955 */ 's', 'u', 'b', 'q', '_', 's', '.', 'w', 9, 0,
  /* 6965 */ 'a', 'd', 'd', 'q', '_', 's', '.', 'w', 9, 0,
  /* 6975 */ 'm', 'u', 'l', 'q', '_', 's', '.', 'w', 9, 0,
  /* 6985 */ 'a', 'b', 's', 'q', '_', 's', '.', 'w', 9, 0,
  /* 6995 */ 'a', 'v', 'e', 'r', '_', 's', '.', 'w', 9, 0,
  /* 7005 */ 's', 'u', 'b', 's', '_', 's', '.', 'w', 9, 0,
  /* 7015 */ 'a', 'd', 'd', 's', '_', 's', '.', 'w', 9, 0,
  /* 7025 */ 's', 'a', 't', '_', 's', '.', 'w', 9, 0,
  /* 7034 */ 'c', 'l', 't', '_', 's', '.', 'w', 9, 0,
  /* 7043 */ 'f', 'f', 'i', 'n', 't', '_', 's', '.', 'w', 9, 0,
  /* 7054 */ 'f', 't', 'i', 'n', 't', '_', 's', '.', 'w', 9, 0,
  /* 7065 */ 's', 'u', 'b', 's', 'u', 'u', '_', 's', '.', 'w', 9, 0,
  /* 7077 */ 'd', 'i', 'v', '_', 's', '.', 'w', 9, 0,
  /* 7086 */ 's', 'h', 'l', 'l', 'v', '_', 's', '.', 'w', 9, 0,
  /* 7097 */ 'm', 'a', 'x', '_', 's', '.', 'w', 9, 0,
  /* 7106 */ 'c', 'o', 'p', 'y', '_', 's', '.', 'w', 9, 0,
  /* 7116 */ 'm', 'u', 'l', 'q', '_', 'r', 's', '.', 'w', 9, 0,
  /* 7127 */ 'e', 'x', 't', 'r', '_', 'r', 's', '.', 'w', 9, 0,
  /* 7138 */ 'e', 'x', 't', 'r', 'v', '_', 'r', 's', '.', 'w', 9, 0,
  /* 7150 */ 'f', 'c', 'l', 'a', 's', 's', '.', 'w', 9, 0,
  /* 7160 */ 's', 'p', 'l', 'a', 't', '.', 'w', 9, 0,
  /* 7169 */ 'b', 's', 'e', 't', '.', 'w', 9, 0,
  /* 7177 */ 'f', 'c', 'l', 't', '.', 'w', 9, 0,
  /* 7185 */ 'f', 's', 'l', 't', '.', 'w', 9, 0,
  /* 7193 */ 'f', 'c', 'u', 'l', 't', '.', 'w', 9, 0,
  /* 7202 */ 'f', 's', 'u', 'l', 't', '.', 'w', 9, 0,
  /* 7211 */ 'p', 'c', 'n', 't', '.', 'w', 9, 0,
  /* 7219 */ 'f', 'r', 'i', 'n', 't', '.', 'w', 9, 0,
  /* 7228 */ 'i', 'n', 's', 'e', 'r', 't', '.', 'w', 9, 0,
  /* 7238 */ 'f', 's', 'q', 'r', 't', '.', 'w', 9, 0,
  /* 7247 */ 'f', 'r', 's', 'q', 'r', 't', '.', 'w', 9, 0,
  /* 7257 */ 's', 't', '.', 'w', 9, 0,
  /* 7263 */ 'a', 's', 'u', 'b', '_', 'u', '.', 'w', 9, 0,
  /* 7273 */ 'h', 's', 'u', 'b', '_', 'u', '.', 'w', 9, 0,
  /* 7283 */ 'd', 'p', 's', 'u', 'b', '_', 'u', '.', 'w', 9, 0,
  /* 7294 */ 'f', 't', 'r', 'u', 'n', 'c', '_', 'u', '.', 'w', 9, 0,
  /* 7306 */ 'h', 'a', 'd', 'd', '_', 'u', '.', 'w', 9, 0,
  /* 7316 */ 'd', 'p', 'a', 'd', 'd', '_', 'u', '.', 'w', 9, 0,
  /* 7327 */ 'm', 'o', 'd', '_', 'u', '.', 'w', 9, 0,
  /* 7336 */ 'c', 'l', 'e', '_', 'u', '.', 'w', 9, 0,
  /* 7345 */ 'a', 'v', 'e', '_', 'u', '.', 'w', 9, 0,
  /* 7354 */ 'c', 'l', 'e', 'i', '_', 'u', '.', 'w', 9, 0,
  /* 7364 */ 'm', 'i', 'n', 'i', '_', 'u', '.', 'w', 9, 0,
  /* 7374 */ 'c', 'l', 't', 'i', '_', 'u', '.', 'w', 9, 0,
  /* 7384 */ 'm', 'a', 'x', 'i', '_', 'u', '.', 'w', 9, 0,
  /* 7394 */ 'm', 'i', 'n', '_', 'u', '.', 'w', 9, 0,
  /* 7403 */ 'd', 'o', 't', 'p', '_', 'u', '.', 'w', 9, 0,
  /* 7413 */ 'a', 'v', 'e', 'r', '_', 'u', '.', 'w', 9, 0,
  /* 7423 */ 's', 'u', 'b', 's', '_', 'u', '.', 'w', 9, 0,
  /* 7433 */ 'a', 'd', 'd', 's', '_', 'u', '.', 'w', 9, 0,
  /* 7443 */ 's', 'u', 'b', 's', 'u', 's', '_', 'u', '.', 'w', 9, 0,
  /* 7455 */ 's', 'a', 't', '_', 'u', '.', 'w', 9, 0,
  /* 7464 */ 'c', 'l', 't', '_', 'u', '.', 'w', 9, 0,
  /* 7473 */ 'f', 'f', 'i', 'n', 't', '_', 'u', '.', 'w', 9, 0,
  /* 7484 */ 'f', 't', 'i', 'n', 't', '_', 'u', '.', 'w', 9, 0,
  /* 7495 */ 'd', 'i', 'v', '_', 'u', '.', 'w', 9, 0,
  /* 7504 */ 'm', 'a', 'x', '_', 'u', '.', 'w', 9, 0,
  /* 7513 */ 'c', 'o', 'p', 'y', '_', 'u', '.', 'w', 9, 0,
  /* 7523 */ 'm', 's', 'u', 'b', 'v', '.', 'w', 9, 0,
  /* 7532 */ 'm', 'a', 'd', 'd', 'v', '.', 'w', 9, 0,
  /* 7541 */ 'p', 'c', 'k', 'e', 'v', '.', 'w', 9, 0,
  /* 7550 */ 'i', 'l', 'v', 'e', 'v', '.', 'w', 9, 0,
  /* 7559 */ 'f', 'd', 'i', 'v', '.', 'w', 9, 0,
  /* 7567 */ 'm', 'u', 'l', 'v', '.', 'w', 9, 0,
  /* 7575 */ 'e', 'x', 't', 'r', 'v', '.', 'w', 9, 0,
  /* 7584 */ 'f', 'm', 'a', 'x', '.', 'w', 9, 0,
  /* 7592 */ 'b', 'z', '.', 'w', 9, 0,
  /* 7598 */ 'b', 'n', 'z', '.', 'w', 9, 0,
  /* 7605 */ 'l', 'w', 9, 0,
  /* 7609 */ 's', 'w', 9, 0,
  /* 7613 */ 'l', 'h', 'x', 9, 0,
  /* 7618 */ 'l', 'b', 'u', 'x', 9, 0,
  /* 7624 */ 'l', 'w', 'x', 9, 0,
  /* 7629 */ 'b', 'g', 'e', 'z', 9, 0,
  /* 7635 */ 'b', 'l', 'e', 'z', 9, 0,
  /* 7641 */ 'b', 'n', 'e', 'z', 9, 0,
  /* 7647 */ 'b', 't', 'n', 'e', 'z', 9, 0,
  /* 7654 */ 'd', 'c', 'l', 'z', 9, 0,
  /* 7660 */ 'b', 'e', 'q', 'z', 9, 0,
  /* 7666 */ 'b', 't', 'e', 'q', 'z', 9, 0,
  /* 7673 */ 'b', 'g', 't', 'z', 9, 0,
  /* 7679 */ 'b', 'l', 't', 'z', 9, 0,
  /* 7685 */ 'm', 'o', 'v', 'z', 9, 0,
  /* 7691 */ 's', 'e', 'b', 9, 32, 0,
  /* 7697 */ 'j', 'r', 'c', 9, 32, 0,
  /* 7703 */ 's', 'e', 'h', 9, 32, 0,
  /* 7709 */ 'd', 'd', 'i', 'v', 'u', 9, '$', 'z', 'e', 'r', 'o', ',', 32, 0,
  /* 7723 */ 'd', 'd', 'i', 'v', 9, '$', 'z', 'e', 'r', 'o', ',', 32, 0,
  /* 7736 */ 'a', 'd', 'd', 'i', 'u', 9, '$', 's', 'p', ',', 32, 0,
  /* 7748 */ 's', 'y', 'n', 'c', 32, 0,
  /* 7754 */ 9, '.', 'w', 'o', 'r', 'd', 32, 0,
  /* 7762 */ 'd', 'i', 'n', 's', 'm', 32, 0,
  /* 7769 */ 'd', 'e', 'x', 't', 'm', 32, 0,
  /* 7776 */ 'd', 'i', 'n', 's', 32, 0,
  /* 7782 */ 'd', 'e', 'x', 't', 32, 0,
  /* 7788 */ 'd', 'i', 'n', 's', 'u', 32, 0,
  /* 7795 */ 'd', 'e', 'x', 't', 'u', 32, 0,
  /* 7802 */ 'c', '.', 0,
  /* 7805 */ 'b', 'r', 'e', 'a', 'k', 32, '0', 0,
  /* 7813 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 7826 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 7833 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 7843 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 7858 */ 'j', 'r', 'c', 9, 32, '$', 'r', 'a', 0,
  /* 7867 */ 'j', 'r', 9, 32, '$', 'r', 'a', 0,
  /* 7875 */ 'f', 'o', 'o', 0,
  /* 7879 */ 'd', 'e', 'r', 'e', 't', 0,
  /* 7885 */ 'w', 'a', 'i', 't', 0,
  };

  // Emit the opcode for the instruction.
  uint64_t Bits1 = OpInfo[MCInst_getOpcode(MI)];
  uint64_t Bits2 = OpInfo2[MCInst_getOpcode(MI)];
  uint64_t Bits = (Bits2 << 32) | Bits1;
  // assert(Bits != 0 && "Cannot print this instruction.");
  SStream_concat(O, "%s", AsmStrs+(Bits & 8191)-1);


  // Fragment 0 encoded into 3 bits for 5 unique commands.
  //printf("Frag-0: %"PRIu64"\n", (Bits >> 13) & 7);
  switch ((Bits >> 13) & 7) {
  default:   // unreachable.
  case 0:
    // DBG_VALUE, BUNDLE, LIFETIME_START, LIFETIME_END, Break16, CONSTPOOL_EN...
    return;
    break;
  case 1:
    // ABSQ_S_PH, ABSQ_S_QB, ABSQ_S_W, ADD, ADDQH_PH, ADDQH_R_PH, ADDQH_R_W, ...
    printOperand(MI, 0, O); 
    break;
  case 2:
    // CTC1, CTC1_MM, DMTC1, MTC1, MTC1_MM, MTHC1, MTHC1_MM, MTHI_DSP, MTHLIP...
    printOperand(MI, 1, O); 
    SStream_concat(O, ", "); 
    break;
  case 3:
    // FCMP_D32, FCMP_D32_MM, FCMP_D64, FCMP_S32, FCMP_S32_MM
    printFCCOperand(MI, 2, O); 
    break;
  case 4:
    // SelBeqZ, SelBneZ, SelTBteqZCmp, SelTBteqZCmpi, SelTBteqZSlt, SelTBteqZ...
    printOperand(MI, 3, O); 
    break;
  }


  // Fragment 1 encoded into 4 bits for 15 unique commands.
  //printf("Frag-1: %"PRIu64"\n", (Bits >> 16) & 15);
  switch ((Bits >> 16) & 15) {
  default:   // unreachable.
  case 0:
    // ABSQ_S_PH, ABSQ_S_QB, ABSQ_S_W, ADD, ADDQH_PH, ADDQH_R_PH, ADDQH_R_W, ...
    SStream_concat(O, ", "); 
    break;
  case 1:
    // AddiuRxPcImmX16
    SStream_concat(O, ", $pc, "); 
    printOperand(MI, 1, O); 
    return;
    break;
  case 2:
    // AddiuSpImm16, Bimm16
    SStream_concat(O, " # 16 bit inst"); 
    return;
    break;
  case 3:
    // AddiuSpImmX16, BPOSGE32, BimmX16, BteqzX16, BtnezX16, Constant32, DI, ...
    return;
    break;
  case 4:
    // Bteqz16, Btnez16
    SStream_concat(O, "  # 16 bit inst"); 
    return;
    break;
  case 5:
    // CTC1, CTC1_MM, DMTC1, MTC1, MTC1_MM, MTHC1, MTHC1_MM, MTHI_DSP, MTHLIP...
    printOperand(MI, 0, O); 
    return;
    break;
  case 6:
    // FCMP_D32, FCMP_D32_MM, FCMP_D64
    SStream_concat(O, ".d\t"); 
    printOperand(MI, 0, O); 
    SStream_concat(O, ", "); 
    printOperand(MI, 1, O); 
    return;
    break;
  case 7:
    // FCMP_S32, FCMP_S32_MM
    SStream_concat(O, ".s\t"); 
    printOperand(MI, 0, O); 
    SStream_concat(O, ", "); 
    printOperand(MI, 1, O); 
    return;
    break;
  case 8:
    // INSERT_B, INSERT_H, INSERT_W, INSVE_B, INSVE_D, INSVE_H, INSVE_W
    SStream_concat(O, "["); 
    break;
  case 9:
    // Jal16
    SStream_concat(O, "\n\tnop"); 
    return;
    break;
  case 10:
    // JalB16
    SStream_concat(O, "\t# branch\n\tnop"); 
    return;
    break;
  case 11:
    // LwConstant32
    SStream_concat(O, ", 1f\n\tb\t2f\n\t.align\t2\n1: \t.word\t"); 
    printOperand(MI, 1, O); 
    SStream_concat(O, "\n2:"); 
    return;
    break;
  case 12:
    // MultRxRyRz16, MultuRxRyRz16, SltCCRxRy16, SltiCCRxImmX16, SltiuCCRxImm...
    printOperand(MI, 2, O); 
    break;
  case 13:
    // SC, SCD, SC_MM
    printMemOperand(MI, 2, O); 
    return;
    break;
  case 14:
    // SelBeqZ, SelBneZ
    SStream_concat(O, ", .+4\n\t\n\tmove "); 
    printOperand(MI, 1, O); 
    SStream_concat(O, ", "); 
    printOperand(MI, 2, O); 
    return;
    break;
  }


  // Fragment 2 encoded into 4 bits for 10 unique commands.
  //printf("Frag-2: %"PRIu64"\n", (Bits >> 20) & 15);
  switch ((Bits >> 20) & 15) {
  default:   // unreachable.
  case 0:
    // ABSQ_S_PH, ABSQ_S_QB, ABSQ_S_W, ADD, ADDQH_PH, ADDQH_R_PH, ADDQH_R_W, ...
    printOperand(MI, 1, O); 
    break;
  case 1:
    // AddiuRxRxImm16, AddiuRxRxImmX16, AndRxRxRy16, BINSLI_B, BINSLI_D, BINS...
    printOperand(MI, 2, O); 
    break;
  case 2:
    // AddiuRxRyOffMemX16, LEA_ADDiu, LEA_ADDiu64, LEA_ADDiu_MM
    printMemOperandEA(MI, 1, O); 
    return;
    break;
  case 3:
    // INSERT_B, INSERT_H, INSERT_W
    printUnsignedImm(MI, 3, O); 
    SStream_concat(O, "], "); 
    printOperand(MI, 2, O); 
    return;
    break;
  case 4:
    // INSVE_B, INSVE_D, INSVE_H, INSVE_W
    printUnsignedImm(MI, 2, O); 
    SStream_concat(O, "], "); 
    printOperand(MI, 3, O); 
    SStream_concat(O, "[0]"); 
    return;
    break;
  case 5:
    // LB, LB64, LB_MM, LBu, LBu64, LBu_MM, LD, LDC1, LDC164, LDC1_MM, LDC2, ...
    printMemOperand(MI, 1, O); 
    return;
    break;
  case 6:
    // LUi, LUi64, LUi_MM, LoadAddr32Imm, LoadImm32Reg, RDDSP, REPL_PH, REPL_...
    printUnsignedImm(MI, 1, O); 
    return;
    break;
  case 7:
    // MultRxRyRz16, MultuRxRyRz16
    SStream_concat(O, "\n\tmflo\t"); 
    printOperand(MI, 0, O); 
    return;
    break;
  case 8:
    // SelTBteqZCmp, SelTBteqZCmpi, SelTBteqZSlt, SelTBteqZSlti, SelTBteqZSlt...
    printOperand(MI, 4, O); 
    break;
  case 9:
    // SltCCRxRy16, SltiCCRxImmX16, SltiuCCRxImmX16, SltuCCRxRy16, SltuRxRyRz...
    SStream_concat(O, "\n\tmove\t"); 
    printOperand(MI, 0, O); 
    SStream_concat(O, ", $t8"); 
    return;
    break;
  }


  // Fragment 3 encoded into 4 bits for 15 unique commands.
  //printf("Frag-3: %"PRIu64"\n", (Bits >> 24) & 15);
  switch ((Bits >> 24) & 15) {
  default:   // unreachable.
  case 0:
    // ABSQ_S_PH, ABSQ_S_QB, ABSQ_S_W, AddiuRxImmX16, AddiuRxRxImmX16, AndRxR...
    return;
    break;
  case 1:
    // ADD, ADDQH_PH, ADDQH_R_PH, ADDQH_R_W, ADDQH_W, ADDQ_PH, ADDQ_S_PH, ADD...
    SStream_concat(O, ", "); 
    break;
  case 2:
    // AddiuRxRxImm16, LwRxPcTcp16
    SStream_concat(O, "\t# 16 bit inst"); 
    return;
    break;
  case 3:
    // BeqzRxImm16, BnezRxImm16
    SStream_concat(O, "  # 16 bit inst"); 
    return;
    break;
  case 4:
    // BteqzT8CmpX16, BteqzT8CmpiX16, BteqzT8SltX16, BteqzT8SltiX16, BteqzT8S...
    SStream_concat(O, "\n\tbteqz\t"); 
    printOperand(MI, 2, O); 
    return;
    break;
  case 5:
    // BtnezT8CmpX16, BtnezT8CmpiX16, BtnezT8SltX16, BtnezT8SltiX16, BtnezT8S...
    SStream_concat(O, "\n\tbtnez\t"); 
    printOperand(MI, 2, O); 
    return;
    break;
  case 6:
    // COPY_S_B, COPY_S_H, COPY_S_W, COPY_U_B, COPY_U_H, COPY_U_W, SLDI_B, SL...
    SStream_concat(O, "["); 
    break;
  case 7:
    // CmpiRxImm16, LiRxImm16, SltiRxImm16, SltiuRxImm16
    SStream_concat(O, " \t# 16 bit inst"); 
    return;
    break;
  case 8:
    // DSLL64_32
    SStream_concat(O, ", 32"); 
    return;
    break;
  case 9:
    // GotPrologue16
    SStream_concat(O, "\n\taddiu\t"); 
    printOperand(MI, 1, O); 
    SStream_concat(O, ", $pc, "); 
    printOperand(MI, 3, O); 
    SStream_concat(O, "\n "); 
    return;
    break;
  case 10:
    // LBUX, LDXC1, LDXC164, LHX, LUXC1, LUXC164, LUXC1_MM, LWX, LWXC1, LWXC1...
    SStream_concat(O, "("); 
    printOperand(MI, 1, O); 
    SStream_concat(O, ")"); 
    return;
    break;
  case 11:
    // LwRxSpImmX16, SwRxSpImmX16
    SStream_concat(O, " ( "); 
    printOperand(MI, 1, O); 
    SStream_concat(O, " ); "); 
    return;
    break;
  case 12:
    // SLL64_32, SLL64_64
    SStream_concat(O, ", 0"); 
    return;
    break;
  case 13:
    // SelTBteqZCmp, SelTBteqZCmpi, SelTBteqZSlt, SelTBteqZSlti, SelTBteqZSlt...
    SStream_concat(O, "\n\tbteqz\t.+4\n\tmove "); 
    printOperand(MI, 1, O); 
    SStream_concat(O, ", "); 
    printOperand(MI, 2, O); 
    return;
    break;
  case 14:
    // SelTBtneZCmp, SelTBtneZCmpi, SelTBtneZSlt, SelTBtneZSlti, SelTBtneZSlt...
    SStream_concat(O, "\n\tbtnez\t.+4\n\tmove "); 
    printOperand(MI, 1, O); 
    SStream_concat(O, ", "); 
    printOperand(MI, 2, O); 
    return;
    break;
  }


  // Fragment 4 encoded into 3 bits for 5 unique commands.
  //printf("Frag-4: %"PRIu64"\n", (Bits >> 28) & 7);
  switch ((Bits >> 28) & 7) {
  default:   // unreachable.
  case 0:
    // ADD, ADDQH_PH, ADDQH_R_PH, ADDQH_R_W, ADDQH_W, ADDQ_PH, ADDQ_S_PH, ADD...
    printOperand(MI, 2, O); 
    break;
  case 1:
    // ADDVI_B, ADDVI_D, ADDVI_H, ADDVI_W, ANDI_B, BCLRI_B, BCLRI_D, BCLRI_H,...
    printUnsignedImm8(MI, 2, O); 
    break;
  case 2:
    // ANDi, ANDi64, ANDi_MM, APPEND, BALIGN, DEXT, DEXTM, DEXTU, DINS, DINSM...
    printUnsignedImm(MI, 2, O); 
    break;
  case 3:
    // BINSLI_B, BINSLI_D, BINSLI_H, BINSLI_W, BINSRI_B, BINSRI_D, BINSRI_H, ...
    printUnsignedImm8(MI, 3, O); 
    break;
  case 4:
    // BINSL_B, BINSL_D, BINSL_H, BINSL_W, BINSR_B, BINSR_D, BINSR_H, BINSR_W...
    printOperand(MI, 3, O); 
    break;
  }


  // Fragment 5 encoded into 2 bits for 3 unique commands.
  //printf("Frag-5: %"PRIu64"\n", (Bits >> 31) & 3);
  switch ((Bits >> 31) & 3) {
  default:   // unreachable.
  case 0:
    // ADD, ADDQH_PH, ADDQH_R_PH, ADDQH_R_W, ADDQH_W, ADDQ_PH, ADDQ_S_PH, ADD...
    return;
    break;
  case 1:
    // COPY_S_B, COPY_S_H, COPY_S_W, COPY_U_B, COPY_U_H, COPY_U_W, SLDI_B, SL...
    SStream_concat(O, "]"); 
    return;
    break;
  case 2:
    // DEXT, DEXTM, DEXTU, DINS, DINSM, DINSU, EXT, EXT_MM, INS, INS_MM, LSA,...
    SStream_concat(O, ", "); 
    break;
  }


  // Fragment 6 encoded into 1 bits for 2 unique commands.
  //printf("Frag-6: %"PRIu64"\n", (Bits >> 33) & 1);
  if ((Bits >> 33) & 1) {
    // LSA
    printUnsignedImm(MI, 3, O); 
    return;
  } else {
    // DEXT, DEXTM, DEXTU, DINS, DINSM, DINSU, EXT, EXT_MM, INS, INS_MM, MADD...
    printOperand(MI, 3, O); 
    return;
  }

}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
static char *getRegisterName(unsigned RegNo)
{
  // assert(RegNo && RegNo < 317 && "Invalid register number!");

  static char AsmStrs[] = {
  /* 0 */ 'f', '1', '0', 0,
  /* 4 */ 'w', '1', '0', 0,
  /* 8 */ 'f', '2', '0', 0,
  /* 12 */ 'D', 'S', 'P', 'O', 'u', 't', 'F', 'l', 'a', 'g', '2', '0', 0,
  /* 25 */ 'w', '2', '0', 0,
  /* 29 */ 'f', '3', '0', 0,
  /* 33 */ 'w', '3', '0', 0,
  /* 37 */ 'a', '0', 0,
  /* 40 */ 'a', 'c', '0', 0,
  /* 44 */ 'f', 'c', 'c', '0', 0,
  /* 49 */ 'f', '0', 0,
  /* 52 */ 'k', '0', 0,
  /* 55 */ 's', '0', 0,
  /* 58 */ 't', '0', 0,
  /* 61 */ 'v', '0', 0,
  /* 64 */ 'w', '0', 0,
  /* 67 */ 'f', '1', '1', 0,
  /* 71 */ 'w', '1', '1', 0,
  /* 75 */ 'f', '2', '1', 0,
  /* 79 */ 'D', 'S', 'P', 'O', 'u', 't', 'F', 'l', 'a', 'g', '2', '1', 0,
  /* 92 */ 'w', '2', '1', 0,
  /* 96 */ 'f', '3', '1', 0,
  /* 100 */ 'w', '3', '1', 0,
  /* 104 */ 'a', '1', 0,
  /* 107 */ 'a', 'c', '1', 0,
  /* 111 */ 'f', 'c', 'c', '1', 0,
  /* 116 */ 'f', '1', 0,
  /* 119 */ 'k', '1', 0,
  /* 122 */ 's', '1', 0,
  /* 125 */ 't', '1', 0,
  /* 128 */ 'v', '1', 0,
  /* 131 */ 'w', '1', 0,
  /* 134 */ 'f', '1', '2', 0,
  /* 138 */ 'w', '1', '2', 0,
  /* 142 */ 'f', '2', '2', 0,
  /* 146 */ 'D', 'S', 'P', 'O', 'u', 't', 'F', 'l', 'a', 'g', '2', '2', 0,
  /* 159 */ 'w', '2', '2', 0,
  /* 163 */ 'a', '2', 0,
  /* 166 */ 'a', 'c', '2', 0,
  /* 170 */ 'f', 'c', 'c', '2', 0,
  /* 175 */ 'f', '2', 0,
  /* 178 */ 's', '2', 0,
  /* 181 */ 't', '2', 0,
  /* 184 */ 'w', '2', 0,
  /* 187 */ 'f', '1', '3', 0,
  /* 191 */ 'w', '1', '3', 0,
  /* 195 */ 'f', '2', '3', 0,
  /* 199 */ 'D', 'S', 'P', 'O', 'u', 't', 'F', 'l', 'a', 'g', '2', '3', 0,
  /* 212 */ 'w', '2', '3', 0,
  /* 216 */ 'a', '3', 0,
  /* 219 */ 'a', 'c', '3', 0,
  /* 223 */ 'f', 'c', 'c', '3', 0,
  /* 228 */ 'f', '3', 0,
  /* 231 */ 's', '3', 0,
  /* 234 */ 't', '3', 0,
  /* 237 */ 'w', '3', 0,
  /* 240 */ 'f', '1', '4', 0,
  /* 244 */ 'w', '1', '4', 0,
  /* 248 */ 'f', '2', '4', 0,
  /* 252 */ 'w', '2', '4', 0,
  /* 256 */ 'f', 'c', 'c', '4', 0,
  /* 261 */ 'f', '4', 0,
  /* 264 */ 's', '4', 0,
  /* 267 */ 't', '4', 0,
  /* 270 */ 'w', '4', 0,
  /* 273 */ 'f', '1', '5', 0,
  /* 277 */ 'w', '1', '5', 0,
  /* 281 */ 'f', '2', '5', 0,
  /* 285 */ 'w', '2', '5', 0,
  /* 289 */ 'f', 'c', 'c', '5', 0,
  /* 294 */ 'f', '5', 0,
  /* 297 */ 's', '5', 0,
  /* 300 */ 't', '5', 0,
  /* 303 */ 'w', '5', 0,
  /* 306 */ 'f', '1', '6', 0,
  /* 310 */ 'w', '1', '6', 0,
  /* 314 */ 'f', '2', '6', 0,
  /* 318 */ 'w', '2', '6', 0,
  /* 322 */ 'f', 'c', 'c', '6', 0,
  /* 327 */ 'f', '6', 0,
  /* 330 */ 's', '6', 0,
  /* 333 */ 't', '6', 0,
  /* 336 */ 'w', '6', 0,
  /* 339 */ 'f', '1', '7', 0,
  /* 343 */ 'w', '1', '7', 0,
  /* 347 */ 'f', '2', '7', 0,
  /* 351 */ 'w', '2', '7', 0,
  /* 355 */ 'f', 'c', 'c', '7', 0,
  /* 360 */ 'f', '7', 0,
  /* 363 */ 's', '7', 0,
  /* 366 */ 't', '7', 0,
  /* 369 */ 'w', '7', 0,
  /* 372 */ 'f', '1', '8', 0,
  /* 376 */ 'w', '1', '8', 0,
  /* 380 */ 'f', '2', '8', 0,
  /* 384 */ 'w', '2', '8', 0,
  /* 388 */ 'f', '8', 0,
  /* 391 */ 't', '8', 0,
  /* 394 */ 'w', '8', 0,
  /* 397 */ 'D', 'S', 'P', 'O', 'u', 't', 'F', 'l', 'a', 'g', '1', '6', '_', '1', '9', 0,
  /* 413 */ 'f', '1', '9', 0,
  /* 417 */ 'w', '1', '9', 0,
  /* 421 */ 'f', '2', '9', 0,
  /* 425 */ 'w', '2', '9', 0,
  /* 429 */ 'f', '9', 0,
  /* 432 */ 't', '9', 0,
  /* 435 */ 'w', '9', 0,
  /* 438 */ 'D', 'S', 'P', 'E', 'F', 'I', 0,
  /* 445 */ 'r', 'a', 0,
  /* 448 */ 'p', 'c', 0,
  /* 451 */ 'D', 'S', 'P', 'C', 'C', 'o', 'n', 'd', 0,
  /* 460 */ 'D', 'S', 'P', 'O', 'u', 't', 'F', 'l', 'a', 'g', 0,
  /* 471 */ 'h', 'i', 0,
  /* 474 */ 'l', 'o', 0,
  /* 477 */ 'z', 'e', 'r', 'o', 0,
  /* 482 */ 'f', 'p', 0,
  /* 485 */ 'g', 'p', 0,
  /* 488 */ 's', 'p', 0,
  /* 491 */ 'D', 'S', 'P', 'P', 'o', 's', 0,
  /* 498 */ 'a', 't', 0,
  /* 501 */ 'D', 'S', 'P', 'S', 'C', 'o', 'u', 'n', 't', 0,
  /* 511 */ 'D', 'S', 'P', 'C', 'a', 'r', 'r', 'y', 0,
  };

  static const uint32_t RegAsmOffset[] = {
    498, 451, 511, 438, 460, 491, 501, 482, 485, 136, 69, 2, 308, 242, 
    275, 189, 341, 448, 445, 488, 477, 37, 104, 163, 216, 40, 107, 166, 
    219, 498, 2, 69, 136, 189, 242, 275, 308, 341, 374, 411, 1, 68, 
    135, 188, 241, 274, 307, 340, 373, 410, 9, 76, 143, 196, 249, 282, 
    315, 348, 381, 422, 30, 97, 49, 175, 261, 327, 388, 0, 134, 240, 
    306, 372, 8, 142, 248, 314, 380, 29, 12, 79, 146, 199, 49, 116, 
    175, 228, 261, 294, 327, 360, 388, 429, 0, 67, 134, 187, 240, 273, 
    306, 339, 372, 413, 8, 75, 142, 195, 248, 281, 314, 347, 380, 421, 
    29, 96, 44, 111, 170, 223, 256, 289, 322, 355, 2, 69, 136, 189, 
    242, 275, 308, 341, 374, 411, 1, 68, 135, 188, 241, 274, 307, 340, 
    373, 410, 9, 76, 143, 196, 249, 282, 315, 348, 381, 422, 30, 97, 
    482, 49, 116, 175, 228, 261, 294, 327, 360, 388, 429, 0, 67, 134, 
    187, 240, 273, 306, 339, 372, 413, 8, 75, 142, 195, 248, 281, 314, 
    347, 380, 421, 29, 96, 485, 40, 107, 166, 219, 422, 52, 119, 40, 
    107, 166, 219, 445, 55, 122, 178, 231, 264, 297, 330, 363, 488, 58, 
    125, 181, 234, 267, 300, 333, 366, 391, 432, 61, 128, 64, 131, 184, 
    237, 270, 303, 336, 369, 394, 435, 4, 71, 138, 191, 244, 277, 310, 
    343, 376, 417, 25, 92, 159, 212, 252, 285, 318, 351, 384, 425, 33, 
    100, 477, 37, 104, 163, 216, 40, 49, 116, 175, 228, 261, 294, 327, 
    360, 388, 429, 0, 67, 134, 187, 240, 273, 306, 339, 372, 413, 8, 
    75, 142, 195, 248, 281, 314, 347, 380, 421, 29, 96, 397, 471, 52, 
    119, 474, 55, 122, 178, 231, 264, 297, 330, 363, 58, 125, 181, 234, 
    267, 300, 333, 366, 391, 432, 61, 128, 
  };

  //int i;
  //for (i = 0; i < sizeof(RegAsmOffset)/4; i++)
  //     printf("%s = %u\n", AsmStrs+RegAsmOffset[i], i + 1);
  //printf("*************************\n");
  return AsmStrs+RegAsmOffset[RegNo-1];
}

#ifdef PRINT_ALIAS_INSTR
#undef PRINT_ALIAS_INSTR

static bool printAliasInstr(MCInst *MI, SStream *OS, void *info)
{
  #define GETREGCLASS_CONTAIN(_class, _reg) MCRegisterClass_contains(MCRegisterInfo_getRegClass(MRI, _class), MCOperand_getReg(MCInst_getOperand(MI, _reg)))
  const char *AsmString;
  MCRegisterInfo *MRI = (MCRegisterInfo *)info;
  switch (MCInst_getOpcode(MI)) {
  default: return false;
  case Mips_ADDu:
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isReg(MCInst_getOperand(MI, 0)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 0) &&
        MCOperand_isReg(MCInst_getOperand(MI, 1)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 1) &&
        MCOperand_getReg(MCInst_getOperand(MI, 2)) == Mips_ZERO) {
      // (ADDu GPR32Opnd:$dst, GPR32Opnd:$src, ZERO)
      AsmString = "move $\x01, $\x02";
      break;
    }
    return false;
  case Mips_BREAK:
    if (MCInst_getNumOperands(MI) == 2 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 0 &&
        MCOperand_isImm(MCInst_getOperand(MI, 1)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 1)) == 0) {
      // (BREAK 0, 0)
      AsmString = "break";
      break;
    }
    return false;
  case Mips_DADDu:
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isReg(MCInst_getOperand(MI, 0)) &&
        GETREGCLASS_CONTAIN(Mips_GPR64RegClassID, 0) &&
        MCOperand_isReg(MCInst_getOperand(MI, 1)) &&
        GETREGCLASS_CONTAIN(Mips_GPR64RegClassID, 1) &&
        MCOperand_getReg(MCInst_getOperand(MI, 2)) == Mips_ZERO_64) {
      // (DADDu GPR64Opnd:$dst, GPR64Opnd:$src, ZERO_64)
      AsmString = "move $\x01, $\x02";
      break;
    }
    return false;
  case Mips_DI:
    if (MCInst_getNumOperands(MI) == 1 &&
        MCOperand_getReg(MCInst_getOperand(MI, 0)) == Mips_ZERO) {
      // (DI ZERO)
      AsmString = "di";
      break;
    }
    return false;
  case Mips_EI:
    if (MCInst_getNumOperands(MI) == 1 &&
        MCOperand_getReg(MCInst_getOperand(MI, 0)) == Mips_ZERO) {
      // (EI ZERO)
      AsmString = "ei";
      break;
    }
    return false;
  case Mips_SLL:
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_getReg(MCInst_getOperand(MI, 0)) == Mips_ZERO &&
        MCOperand_getReg(MCInst_getOperand(MI, 1)) == Mips_ZERO &&
        MCOperand_isImm(MCInst_getOperand(MI, 2)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 2)) == 0) {
      // (SLL ZERO, ZERO, 0)
      AsmString = "nop";
      break;
    }
    return false;
  case Mips_SUB:
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isReg(MCInst_getOperand(MI, 0)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 0) &&
        MCOperand_getReg(MCInst_getOperand(MI, 1)) == Mips_ZERO &&
        MCOperand_isReg(MCInst_getOperand(MI, 2)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 2)) {
      // (SUB GPR32Opnd:$rt, ZERO, GPR32Opnd:$rs)
      AsmString = "neg $\x01, $\x03";
      break;
    }
    return false;
  case Mips_SUBu:
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isReg(MCInst_getOperand(MI, 0)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 0) &&
        MCOperand_getReg(MCInst_getOperand(MI, 1)) == Mips_ZERO &&
        MCOperand_isReg(MCInst_getOperand(MI, 2)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 2)) {
      // (SUBu GPR32Opnd:$rt, ZERO, GPR32Opnd:$rs)
      AsmString = "negu $\x01, $\x03";
      break;
    }
    return false;
  case Mips_SYSCALL:
    if (MCInst_getNumOperands(MI) == 1 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 0) {
      // (SYSCALL 0)
      AsmString = "syscall";
      break;
    }
    return false;
  case Mips_TEQ:
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isReg(MCInst_getOperand(MI, 0)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 0) &&
        MCOperand_isReg(MCInst_getOperand(MI, 1)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 1) &&
        MCOperand_isImm(MCInst_getOperand(MI, 2)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 2)) == 0) {
      // (TEQ GPR32Opnd:$rs, GPR32Opnd:$rt, 0)
      AsmString = "teq $\x01, $\x02";
      break;
    }
    return false;
  case Mips_TGE:
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isReg(MCInst_getOperand(MI, 0)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 0) &&
        MCOperand_isReg(MCInst_getOperand(MI, 1)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 1) &&
        MCOperand_isImm(MCInst_getOperand(MI, 2)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 2)) == 0) {
      // (TGE GPR32Opnd:$rs, GPR32Opnd:$rt, 0)
      AsmString = "tge $\x01, $\x02";
      break;
    }
    return false;
  case Mips_TGEU:
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isReg(MCInst_getOperand(MI, 0)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 0) &&
        MCOperand_isReg(MCInst_getOperand(MI, 1)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 1) &&
        MCOperand_isImm(MCInst_getOperand(MI, 2)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 2)) == 0) {
      // (TGEU GPR32Opnd:$rs, GPR32Opnd:$rt, 0)
      AsmString = "tgeu $\x01, $\x02";
      break;
    }
    return false;
  case Mips_TLT:
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isReg(MCInst_getOperand(MI, 0)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 0) &&
        MCOperand_isReg(MCInst_getOperand(MI, 1)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 1) &&
        MCOperand_isImm(MCInst_getOperand(MI, 2)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 2)) == 0) {
      // (TLT GPR32Opnd:$rs, GPR32Opnd:$rt, 0)
      AsmString = "tlt $\x01, $\x02";
      break;
    }
    return false;
  case Mips_TLTU:
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isReg(MCInst_getOperand(MI, 0)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 0) &&
        MCOperand_isReg(MCInst_getOperand(MI, 1)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 1) &&
        MCOperand_isImm(MCInst_getOperand(MI, 2)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 2)) == 0) {
      // (TLTU GPR32Opnd:$rs, GPR32Opnd:$rt, 0)
      AsmString = "tltu $\x01, $\x02";
      break;
    }
    return false;
  case Mips_TNE:
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isReg(MCInst_getOperand(MI, 0)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 0) &&
        MCOperand_isReg(MCInst_getOperand(MI, 1)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 1) &&
        MCOperand_isImm(MCInst_getOperand(MI, 2)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 2)) == 0) {
      // (TNE GPR32Opnd:$rs, GPR32Opnd:$rt, 0)
      AsmString = "tne $\x01, $\x02";
      break;
    }
    return false;
  }

  char *tmp = cs_strdup(AsmString), *AsmMnem, *AsmOps;
  AsmMnem = tmp;
  AsmOps = strchr(tmp, ' ');
  if (AsmOps) {
    *AsmOps = '\0';
    AsmOps += 1;
  }
  SStream_concat(OS, "%s", AsmMnem);
  if (AsmOps) {
    SStream_concat(OS, "\t");
    char *c;
    for (c = AsmOps; *c; c++) {
      if (*c == '$') {
        c += 1;
        printOperand(MI, *c - 1, OS);
      } else {
        SStream_concat(OS, "%c", *c);
      }
    }
  }
  cs_mem_free(tmp);
  return true;
}

#endif // PRINT_ALIAS_INSTR
